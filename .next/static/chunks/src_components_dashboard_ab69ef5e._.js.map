{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/dashboard/add-agent-dialog.tsx"],"sourcesContent":["\n\"use client\";\n\nimport * as React from \"react\";\nimport { z } from \"zod\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n  DialogClose,\n} from \"@/components/ui/dialog\";\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport type { Agent, AgentRole, UserProfile } from \"@/types\";\nimport { createAgent } from \"@/app/actions\";\n\nconst agentFormSchema = z.object({\n  name: z.string().min(2, { message: \"Name must be at least 2 characters.\" }),\n  email: z.string().email({ message: \"Please enter a valid email.\" }),\n  password: z\n    .string()\n    .min(8, { message: \"Password must be at least 8 characters.\" }),\n  phone: z.string().min(10, { message: \"Please enter a valid phone number.\" }),\n  role: z.enum([\"admin\", \"agent\", \"super_agent\"]),\n});\n\ntype AgentFormValues = z.infer<typeof agentFormSchema>;\n\ntype AddAgentDialogProps = {\n    onAgentAdd: (agent: Agent) => void;\n    user: UserProfile | null;\n};\n\nexport function AddAgentDialog({ onAgentAdd, user }: AddAgentDialogProps) {\n  const [open, setOpen] = React.useState(false);\n  const { toast } = useToast();\n  const form = useForm<AgentFormValues>({\n    resolver: zodResolver(agentFormSchema),\n    defaultValues: {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      phone: \"\",\n      role: \"agent\",\n    },\n  });\n\n  async function onSubmit(data: AgentFormValues) {\n    if (!user?.companyId) {\n        toast({\n            variant: 'destructive',\n            title: \"Error\",\n            description: \"Cannot add agent without a company context.\",\n        });\n        return;\n    }\n    const result = await createAgent(data.name, data.email, data.password, data.role as AgentRole, user.companyId);\n\n    if (result.success && result.agent) {\n        const newAgent: Agent = {\n            id: result.agent._id!,\n            ...data,\n            avatar: `https://picsum.photos/seed/${data.name}/100/100`,\n            role: data.role as AgentRole,\n            status: \"Offline\",\n            conversationsToday: 0,\n            avgResponseTime: \"N/A\",\n            csat: 90 + Math.floor(Math.random() * 10), // Random high CSAT for new agent\n        };\n        onAgentAdd(newAgent);\n\n        toast({\n        title: \"Agent Created\",\n        description: `New agent \"${data.name}\" has been added successfully.`,\n        });\n        \n        form.reset();\n        setOpen(false);\n    } else {\n        toast({\n            variant: 'destructive',\n            title: \"Failed to create agent\",\n            description: result.message || \"An unexpected error occurred.\",\n        });\n    }\n  }\n\n  return (\n    <Dialog open={open} onOpenChange={setOpen}>\n      <DialogTrigger asChild>\n        <Button>Add New Agent</Button>\n      </DialogTrigger>\n      <DialogContent className=\"sm:max-w-[425px]\">\n        <DialogHeader>\n          <DialogTitle>Add New Agent</DialogTitle>\n          <DialogDescription>\n            Fill in the details to add a new agent to your team.\n          </DialogDescription>\n        </DialogHeader>\n        <Form {...form}>\n          <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-4\">\n            <FormField\n              control={form.control}\n              name=\"name\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Name</FormLabel>\n                  <FormControl>\n                    <Input placeholder=\"John Doe\" {...field} />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n            <FormField\n              control={form.control}\n              name=\"email\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Email</FormLabel>\n                  <FormControl>\n                    <Input\n                      type=\"email\"\n                      placeholder=\"john.doe@example.com\"\n                      {...field}\n                    />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n            <FormField\n              control={form.control}\n              name=\"password\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Password</FormLabel>\n                  <FormControl>\n                    <Input type=\"password\" {...field} />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n            <FormField\n              control={form.control}\n              name=\"phone\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Phone Number</FormLabel>\n                  <FormControl>\n                    <Input placeholder=\"+1 234 567 890\" {...field} />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n            <FormField\n              control={form.control}\n              name=\"role\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Role</FormLabel>\n                  <Select\n                    onValueChange={field.onChange}\n                    defaultValue={field.value}\n                  >\n                    <FormControl>\n                      <SelectTrigger>\n                        <SelectValue placeholder=\"Select a role\" />\n                      </SelectTrigger>\n                    </FormControl>\n                    <SelectContent>\n                      <SelectItem value=\"agent\">Agent</SelectItem>\n                      <SelectItem value=\"super_agent\">Super Agent</SelectItem>\n                      <SelectItem value=\"admin\">Admin</SelectItem>\n                    </SelectContent>\n                  </Select>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n            <DialogFooter>\n              <DialogClose asChild>\n                <Button variant=\"outline\">Cancel</Button>\n              </DialogClose>\n              <Button type=\"submit\">Create Agent</Button>\n            </DialogFooter>\n          </form>\n        </Form>\n      </DialogContent>\n    </Dialog>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 485, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/dashboard/new-chat-dialog.tsx"],"sourcesContent":["\"use client\";\n\nimport * as React from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n  DialogClose,\n} from \"@/components/ui/dialog\";\nimport { Input } from \"@/components/ui/input\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport type { User, Chat } from \"@/types\";\nimport { Search, UserPlus, ArrowLeft, Send } from \"lucide-react\";\nimport { ScrollArea } from \"../ui/scroll-area\";\nimport { Checkbox } from \"../ui/checkbox\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"../ui/avatar\";\nimport { Label } from \"../ui/label\";\nimport { Separator } from \"../ui/separator\";\nimport { Textarea } from \"../ui/textarea\";\nimport { Badge } from \"../ui/badge\";\n\ntype NewChatDialogProps = {\n  children: React.ReactNode;\n  contacts: User[];\n  onStartChat: (users: User[], message: string) => Promise<Chat[]>;\n};\n\nexport function NewChatDialog({ children, contacts, onStartChat }: NewChatDialogProps) {\n  const [open, setOpen] = React.useState(false);\n  const [searchTerm, setSearchTerm] = React.useState(\"\");\n  const [selectedContacts, setSelectedContacts] = React.useState<User[]>([]);\n  const [newContactInput, setNewContactInput] = React.useState(\"\");\n  const [view, setView] = React.useState<'select' | 'compose'>('select');\n  const [message, setMessage] = React.useState('');\n  const [isSubmitting, setIsSubmitting] = React.useState(false);\n  const { toast } = useToast();\n\n  const filteredContacts = contacts.filter(\n    (contact) =>\n      contact.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      contact.email?.toLowerCase().includes(searchTerm.toLowerCase())\n  );\n\n  const handleSelectContact = (contact: User) => {\n    setSelectedContacts((prev) =>\n      prev.some((c) => c.id === contact.id)\n        ? prev.filter((c) => c.id !== contact.id)\n        : [...prev, contact]\n    );\n  };\n\n  const handleSelectAll = (checked: boolean) => {\n    if (checked) {\n      setSelectedContacts(filteredContacts);\n    } else {\n      setSelectedContacts([]);\n    }\n  }\n\n  const handleNext = () => {\n    const allUsersToChat = [...selectedContacts];\n\n    if (newContactInput.trim()) {\n        if (newContactInput.includes('@') || /^\\+?[0-9\\s-]+$/.test(newContactInput)) {\n            const newUser: User = {\n                id: `new-${new Date().toISOString()}`,\n                name: newContactInput,\n                avatar: `https://picsum.photos/seed/${newContactInput}/100/100`,\n                online: false,\n                email: newContactInput.includes('@') ? newContactInput : undefined,\n                phone: !newContactInput.includes('@') ? newContactInput : undefined,\n            }\n            // This is a temporary user object, the backend will create a proper one\n            if (!allUsersToChat.some(u => u.email === newUser.email || u.phone === newUser.phone)) {\n                 allUsersToChat.push(newUser);\n            }\n        } else {\n            toast({\n                variant: 'destructive',\n                title: \"Invalid Input\",\n                description: \"Please enter a valid email address or phone number for the new contact.\",\n            })\n            return;\n        }\n    }\n\n    if (allUsersToChat.length === 0) {\n        toast({\n            variant: 'destructive',\n            title: \"No recipients selected\",\n            description: \"Please select at least one contact or enter a new one.\",\n        })\n        return;\n    }\n    \n    setSelectedContacts(allUsersToChat);\n    setView('compose');\n  }\n\n  const handleSend = async () => {\n    if (message.trim().length === 0) {\n        toast({\n            variant: 'destructive',\n            title: \"Empty Message\",\n            description: \"Please write a message to send.\",\n        })\n        return;\n    }\n    setIsSubmitting(true);\n    await onStartChat(selectedContacts, message);\n    setIsSubmitting(false);\n    resetState();\n  }\n\n  const resetState = () => {\n    setOpen(false);\n    // Delay reset to allow dialog to close gracefully\n    setTimeout(() => {\n        setView('select');\n        setSelectedContacts([]);\n        setNewContactInput(\"\");\n        setSearchTerm(\"\");\n        setMessage(\"\");\n    }, 300);\n  }\n  \n  React.useEffect(() => {\n    if(!open) {\n        resetState();\n    }\n  }, [open]);\n\n  const numSelected = selectedContacts.length + (newContactInput.trim() ? (selectedContacts.some(c => c.name === newContactInput) ? 0 : 1) : 0);\n\n  return (\n    <Dialog open={open} onOpenChange={setOpen}>\n      <DialogTrigger asChild>{children}</DialogTrigger>\n      <DialogContent className=\"sm:max-w-md flex flex-col\">\n        {view === 'select' ? (\n          <>\n            <DialogHeader>\n              <DialogTitle>Start New Chat</DialogTitle>\n              <DialogDescription>\n                Select contacts or enter a new email/phone number.\n              </DialogDescription>\n            </DialogHeader>\n            \n            <div className=\"pr-6\">\n                <div className=\"relative\">\n                    <Search className=\"absolute left-3 top-1/2 -translate-y-1/2 h-4 w-4 text-muted-foreground\" />\n                    <Input\n                    placeholder=\"Search contacts...\"\n                    className=\"pl-9\"\n                    value={searchTerm}\n                    onChange={(e) => setSearchTerm(e.target.value)}\n                    />\n                </div>\n            </div>\n\n            <ScrollArea className=\"flex-1 -mr-6 pr-6\">\n                <div className=\"space-y-2\">\n                    <div className=\"flex items-center gap-3 p-2\">\n                         <Checkbox \n                            id=\"select-all\" \n                            checked={selectedContacts.length === filteredContacts.length && filteredContacts.length > 0}\n                            onCheckedChange={handleSelectAll}\n                        />\n                        <Label htmlFor=\"select-all\" className=\"font-medium cursor-pointer\">\n                            Select All\n                        </Label>\n                    </div>\n                    <Separator />\n                    {filteredContacts.map(contact => (\n                        <div key={contact.id} className=\"flex items-center gap-3 p-2 rounded-md hover:bg-muted\">\n                            <Checkbox \n                                id={`contact-${contact.id}`} \n                                checked={selectedContacts.some(c => c.id === contact.id)}\n                                onCheckedChange={() => handleSelectContact(contact)}\n                            />\n                            <Label htmlFor={`contact-${contact.id}`} className=\"flex-1 flex items-center gap-3 cursor-pointer\">\n                                <Avatar className=\"h-9 w-9\">\n                                    <AvatarImage src={contact.avatar} alt={contact.name} data-ai-hint=\"person portrait\" />\n                                    <AvatarFallback>{contact.name.charAt(0)}</AvatarFallback>\n                                </Avatar>\n                                <div className=\"flex-1\">\n                                    <p className=\"font-medium\">{contact.name}</p>\n                                    <p className=\"text-xs text-muted-foreground\">{contact.email || contact.phone}</p>\n                                </div>\n                            </Label>\n                        </div>\n                    ))}\n                    {filteredContacts.length === 0 && (\n                        <p className=\"text-center text-sm text-muted-foreground py-4\">No contacts found.</p>\n                    )}\n                </div>\n            </ScrollArea>\n            \n            <div className=\"pr-6\">\n                <Separator className=\"my-4\" />\n                <Label htmlFor=\"new-contact\" className=\"text-sm font-medium\">New Contact</Label>\n                <div className=\"relative mt-2\">\n                    <UserPlus className=\"absolute left-3 top-1/2 -translate-y-1/2 h-4 w-4 text-muted-foreground\" />\n                    <Input\n                    id=\"new-contact\"\n                    placeholder=\"Enter email or phone number...\"\n                    className=\"pl-9\"\n                    value={newContactInput}\n                    onChange={(e) => setNewContactInput(e.target.value)}\n                    />\n                </div>\n            </div>\n\n            <DialogFooter className=\"pt-4 pr-6\">\n              <DialogClose asChild>\n                <Button variant=\"outline\">Cancel</Button>\n              </DialogClose>\n              <Button onClick={handleNext} disabled={numSelected === 0}>\n                Next ({numSelected})\n              </Button>\n            </DialogFooter>\n          </>\n        ) : (\n          <>\n             <DialogHeader>\n                <div className=\"flex items-center gap-2\">\n                    <Button variant=\"ghost\" size=\"icon\" className=\"-ml-2\" onClick={() => setView('select')}>\n                        <ArrowLeft className=\"h-4 w-4\" />\n                    </Button>\n                    <div>\n                        <DialogTitle>Compose Message</DialogTitle>\n                        <DialogDescription>\n                            Your message will be sent to {selectedContacts.length} recipient(s).\n                        </DialogDescription>\n                    </div>\n                </div>\n            </DialogHeader>\n\n            <div className=\"flex flex-wrap gap-1 p-2 border rounded-md\">\n                {selectedContacts.map(c => (\n                    <Badge key={c.id} variant=\"secondary\">{c.name}</Badge>\n                ))}\n            </div>\n\n            <Textarea \n                placeholder=\"Type your message here...\"\n                rows={5}\n                value={message}\n                onChange={(e) => setMessage(e.target.value)}\n            />\n\n            <DialogFooter className=\"pt-4\">\n              <Button variant=\"outline\" onClick={() => setView('select')}>Back</Button>\n              <Button onClick={handleSend} disabled={message.trim().length === 0 || isSubmitting}>\n                {isSubmitting ? 'Sending...' : <><Send className=\"mr-2 h-4 w-4\" /> Send Message</>}\n              </Button>\n            </DialogFooter>\n          </>\n        )}\n      </DialogContent>\n    </Dialog>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1067, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/dashboard/vertical-nav.tsx"],"sourcesContent":["\n\"use client\";\n\nimport * as React from \"react\";\nimport {\n  MessageSquare,\n  BookUser,\n  Settings,\n  Users,\n  Megaphone,\n  LayoutDashboard,\n  Send,\n  BarChart,\n  Award,\n  LogOut,\n  User as UserIcon\n} from \"lucide-react\";\n\nimport { cn } from \"@/lib/utils\";\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\";\nimport type { View } from \"@/app/page\";\nimport type { UserProfile } from \"@/types\";\nimport { Sheet, SheetContent, SheetHeader, SheetTitle } from \"../ui/sheet\";\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"../ui/avatar\";\nimport { Button } from \"../ui/button\";\n\n\nconst adminNavItems = [\n  { icon: LayoutDashboard, label: \"Dashboard\" as View },\n  { icon: MessageSquare, label: \"Chat\" as View,},\n  { icon: BookUser, label: \"Contacts\" as View },\n  { icon: Users, label: \"Agents\" as View },\n  { icon: Send, label: \"Campaigns\" as View },\n  { icon: Megaphone, label: \"Announcements\" as View },\n];\n\nconst superAgentNavItems = [\n  { icon: MessageSquare, label: \"Chat\" as View },\n  { icon: BookUser, label: \"Contacts\" as View },\n  { icon: Users, label: \"Agents\" as View },\n  { icon: Send, label: \"Campaigns\" as View },\n  { icon: Megaphone, label: \"Announcements\" as View },\n  { icon: Award, label: \"My Performance\" as View },\n];\n\nconst agentNavItems = [\n  { icon: MessageSquare, label: \"Chat\" as View },\n  { icon: BookUser, label: \"Contacts\" as View },\n  { icon: Megaphone, label: \"Announcements\" as View },\n  { icon: Award, label: \"My Performance\" as View },\n];\n\n\ntype VerticalNavProps = {\n    activeView: View;\n    setActiveView: (view: View) => void;\n    user: UserProfile | null;\n    onLogout: () => void;\n    isOpen: boolean;\n    setIsOpen: (isOpen: boolean) => void;\n    onSettingsClick: () => void;\n};\n\nexport function VerticalNav({ activeView, setActiveView, user, onLogout, isOpen, setIsOpen, onSettingsClick }: VerticalNavProps) {\n  \n  const getNavItems = () => {\n    switch(user?.role) {\n        case 'admin':\n            return adminNavItems;\n        case 'super_agent':\n            return superAgentNavItems;\n        case 'agent':\n        default:\n            return agentNavItems;\n    }\n  }\n\n  const navItems = getNavItems();\n\n  const NavContent = () => (\n    <div className=\"flex h-full flex-col items-center justify-between bg-primary py-4\">\n        <nav className=\"flex flex-col items-center gap-4 px-2\">\n            {navItems.map((item) => (\n            <Tooltip key={item.label}>\n                <TooltipTrigger asChild>\n                <button\n                    onClick={() => {\n                        setActiveView(item.label)\n                        setIsOpen(false)\n                    }}\n                    className={cn(\n                    \"flex h-12 w-12 items-center justify-center rounded-lg text-primary-foreground transition-colors hover:bg-primary-foreground/10 hover:text-white\",\n                    activeView === item.label\n                        ? \"bg-accent text-accent-foreground\"\n                        : \"text-primary-foreground\"\n                    )}\n                >\n                    <item.icon className=\"h-6 w-6\" />\n                    <span className=\"sr-only\">{item.label}</span>\n                </button>\n                </TooltipTrigger>\n                <TooltipContent side=\"right\">{item.label}</TooltipContent>\n            </Tooltip>\n            ))}\n        </nav>\n        <div className=\"flex flex-col items-center gap-4 px-2\">\n             <DropdownMenu>\n              <Tooltip>\n                <TooltipTrigger asChild>\n                  <DropdownMenuTrigger asChild>\n                    <Button variant=\"ghost\" size=\"icon\" className=\"h-12 w-12 rounded-lg hover:bg-primary-foreground/10\">\n                        {user ? (\n                            <Avatar className=\"h-10 w-10\">\n                              <AvatarImage src={user.avatar} alt={user.name} data-ai-hint=\"person glasses\"/>\n                              <AvatarFallback>{user.name.charAt(0)}</AvatarFallback>\n                            </Avatar>\n                        ) : (\n                            <UserIcon className=\"h-6 w-6 text-primary-foreground\" />\n                        )}\n                        <span className=\"sr-only\">User Menu</span>\n                    </Button>\n                  </DropdownMenuTrigger>\n                </TooltipTrigger>\n                <TooltipContent side=\"right\">User Menu</TooltipContent>\n              </Tooltip>\n              <DropdownMenuContent align=\"end\" side=\"right\">\n                 {user ? (\n                     <>\n                       <DropdownMenuLabel>{user.name}</DropdownMenuLabel>\n                       <DropdownMenuSeparator />\n                       <DropdownMenuItem onClick={onSettingsClick}>\n                         <Settings className=\"mr-2 h-4 w-4\" />\n                         <span>Settings</span>\n                       </DropdownMenuItem>\n                       <DropdownMenuItem onClick={onLogout}>\n                         <LogOut className=\"mr-2 h-4 w-4\" />\n                         <span>Log out</span>\n                       </DropdownMenuItem>\n                     </>\n                 ) : null}\n              </DropdownMenuContent>\n            </DropdownMenu>\n        </div>\n    </div>\n  );\n\n  return (\n    <TooltipProvider>\n        {/* Mobile Nav */}\n        <Sheet open={isOpen} onOpenChange={setIsOpen}>\n            <SheetContent side=\"left\" className=\"p-0 w-[70px] border-none\">\n              <SheetHeader>\n                <SheetTitle className=\"sr-only\">Main Menu</SheetTitle>\n              </SheetHeader>\n              <NavContent />\n            </SheetContent>\n        </Sheet>\n        {/* Desktop Nav */}\n        <aside className=\"fixed inset-y-0 left-0 z-20 hidden h-full w-[70px] md:flex\">\n            <NavContent />\n        </aside>\n    </TooltipProvider>\n  );\n}\n"],"names":[],"mappings":";;;;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;AACA;AAQA;AACA;AAQA;AACA;AApCA;;;;;;;;;AAuCA,MAAM,gBAAgB;IACpB;QAAE,MAAM,+NAAA,CAAA,kBAAe;QAAE,OAAO;IAAoB;IACpD;QAAE,MAAM,2NAAA,CAAA,gBAAa;QAAE,OAAO;IAAe;IAC7C;QAAE,MAAM,iNAAA,CAAA,WAAQ;QAAE,OAAO;IAAmB;IAC5C;QAAE,MAAM,uMAAA,CAAA,QAAK;QAAE,OAAO;IAAiB;IACvC;QAAE,MAAM,qMAAA,CAAA,OAAI;QAAE,OAAO;IAAoB;IACzC;QAAE,MAAM,+MAAA,CAAA,YAAS;QAAE,OAAO;IAAwB;CACnD;AAED,MAAM,qBAAqB;IACzB;QAAE,MAAM,2NAAA,CAAA,gBAAa;QAAE,OAAO;IAAe;IAC7C;QAAE,MAAM,iNAAA,CAAA,WAAQ;QAAE,OAAO;IAAmB;IAC5C;QAAE,MAAM,uMAAA,CAAA,QAAK;QAAE,OAAO;IAAiB;IACvC;QAAE,MAAM,qMAAA,CAAA,OAAI;QAAE,OAAO;IAAoB;IACzC;QAAE,MAAM,+MAAA,CAAA,YAAS;QAAE,OAAO;IAAwB;IAClD;QAAE,MAAM,uMAAA,CAAA,QAAK;QAAE,OAAO;IAAyB;CAChD;AAED,MAAM,gBAAgB;IACpB;QAAE,MAAM,2NAAA,CAAA,gBAAa;QAAE,OAAO;IAAe;IAC7C;QAAE,MAAM,iNAAA,CAAA,WAAQ;QAAE,OAAO;IAAmB;IAC5C;QAAE,MAAM,+MAAA,CAAA,YAAS;QAAE,OAAO;IAAwB;IAClD;QAAE,MAAM,uMAAA,CAAA,QAAK;QAAE,OAAO;IAAyB;CAChD;AAaM,SAAS,YAAY,EAAE,UAAU,EAAE,aAAa,EAAE,IAAI,EAAE,QAAQ,EAAE,MAAM,EAAE,SAAS,EAAE,eAAe,EAAoB;IAE7H,MAAM,cAAc;QAClB,OAAO,MAAM;YACT,KAAK;gBACD,OAAO;YACX,KAAK;gBACD,OAAO;YACX,KAAK;YACL;gBACI,OAAO;QACf;IACF;IAEA,MAAM,WAAW;IAEjB,MAAM,aAAa,kBACjB,6LAAC;YAAI,WAAU;;8BACX,6LAAC;oBAAI,WAAU;8BACV,SAAS,GAAG,CAAC,CAAC,qBACf,6LAAC,sIAAA,CAAA,UAAO;;8CACJ,6LAAC,sIAAA,CAAA,iBAAc;oCAAC,OAAO;8CACvB,cAAA,6LAAC;wCACG,SAAS;4CACL,cAAc,KAAK,KAAK;4CACxB,UAAU;wCACd;wCACA,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACZ,mJACA,eAAe,KAAK,KAAK,GACnB,qCACA;;0DAGN,6LAAC,KAAK,IAAI;gDAAC,WAAU;;;;;;0DACrB,6LAAC;gDAAK,WAAU;0DAAW,KAAK,KAAK;;;;;;;;;;;;;;;;;8CAGzC,6LAAC,sIAAA,CAAA,iBAAc;oCAAC,MAAK;8CAAS,KAAK,KAAK;;;;;;;2BAlB9B,KAAK,KAAK;;;;;;;;;;8BAsB5B,6LAAC;oBAAI,WAAU;8BACV,cAAA,6LAAC,+IAAA,CAAA,eAAY;;0CACZ,6LAAC,sIAAA,CAAA,UAAO;;kDACN,6LAAC,sIAAA,CAAA,iBAAc;wCAAC,OAAO;kDACrB,cAAA,6LAAC,+IAAA,CAAA,sBAAmB;4CAAC,OAAO;sDAC1B,cAAA,6LAAC,qIAAA,CAAA,SAAM;gDAAC,SAAQ;gDAAQ,MAAK;gDAAO,WAAU;;oDACzC,qBACG,6LAAC,qIAAA,CAAA,SAAM;wDAAC,WAAU;;0EAChB,6LAAC,qIAAA,CAAA,cAAW;gEAAC,KAAK,KAAK,MAAM;gEAAE,KAAK,KAAK,IAAI;gEAAE,gBAAa;;;;;;0EAC5D,6LAAC,qIAAA,CAAA,iBAAc;0EAAE,KAAK,IAAI,CAAC,MAAM,CAAC;;;;;;;;;;;6EAGpC,6LAAC,qMAAA,CAAA,OAAQ;wDAAC,WAAU;;;;;;kEAExB,6LAAC;wDAAK,WAAU;kEAAU;;;;;;;;;;;;;;;;;;;;;;kDAIlC,6LAAC,sIAAA,CAAA,iBAAc;wCAAC,MAAK;kDAAQ;;;;;;;;;;;;0CAE/B,6LAAC,+IAAA,CAAA,sBAAmB;gCAAC,OAAM;gCAAM,MAAK;0CAClC,qBACG;;sDACE,6LAAC,+IAAA,CAAA,oBAAiB;sDAAE,KAAK,IAAI;;;;;;sDAC7B,6LAAC,+IAAA,CAAA,wBAAqB;;;;;sDACtB,6LAAC,+IAAA,CAAA,mBAAgB;4CAAC,SAAS;;8DACzB,6LAAC,6MAAA,CAAA,WAAQ;oDAAC,WAAU;;;;;;8DACpB,6LAAC;8DAAK;;;;;;;;;;;;sDAER,6LAAC,+IAAA,CAAA,mBAAgB;4CAAC,SAAS;;8DACzB,6LAAC,6MAAA,CAAA,SAAM;oDAAC,WAAU;;;;;;8DAClB,6LAAC;8DAAK;;;;;;;;;;;;;mDAGV;;;;;;;;;;;;;;;;;;;;;;;IAOnB,qBACE,6LAAC,sIAAA,CAAA,kBAAe;;0BAEZ,6LAAC,oIAAA,CAAA,QAAK;gBAAC,MAAM;gBAAQ,cAAc;0BAC/B,cAAA,6LAAC,oIAAA,CAAA,eAAY;oBAAC,MAAK;oBAAO,WAAU;;sCAClC,6LAAC,oIAAA,CAAA,cAAW;sCACV,cAAA,6LAAC,oIAAA,CAAA,aAAU;gCAAC,WAAU;0CAAU;;;;;;;;;;;sCAElC,6LAAC;;;;;;;;;;;;;;;;0BAIP,6LAAC;gBAAM,WAAU;0BACb,cAAA,6LAAC;;;;;;;;;;;;;;;;AAIb;KApGgB","debugId":null}},
    {"offset": {"line": 1481, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/dashboard/add-contact-dialog.tsx"],"sourcesContent":["\n\"use client\";\n\nimport * as React from \"react\";\nimport { z } from \"zod\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n  DialogClose,\n} from \"@/components/ui/dialog\";\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport type { User, UserProfile } from \"@/types\";\nimport { createContact } from \"@/app/actions\";\n\nconst contactFormSchema = z.object({\n  name: z.string().min(2, { message: \"Name must be at least 2 characters.\" }),\n  email: z.string().email({ message: \"Please enter a valid email.\" }),\n  phone: z.string().min(10, { message: \"Please enter a valid phone number.\" }),\n});\n\ntype ContactFormValues = z.infer<typeof contactFormSchema>;\n\ntype AddContactDialogProps = {\n    onContactAdd: (contact: User) => void;\n    user: UserProfile | null;\n};\n\nexport function AddContactDialog({ onContactAdd, user }: AddContactDialogProps) {\n  const [open, setOpen] = React.useState(false);\n  const { toast } = useToast();\n  const form = useForm<ContactFormValues>({\n    resolver: zodResolver(contactFormSchema),\n    defaultValues: {\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n    },\n  });\n\n  async function onSubmit(data: ContactFormValues) {\n    if (!user?.companyId) {\n        toast({\n            variant: 'destructive',\n            title: \"Error\",\n            description: \"Cannot add contact without a company context.\",\n        });\n        return;\n    }\n    const result = await createContact(data.name, data.email, data.phone, user.companyId);\n\n    if (result.success && result.contact) {\n        onContactAdd(result.contact);\n        toast({\n        title: \"Contact Created\",\n        description: `New contact \"${data.name}\" has been added successfully.`,\n        });\n        \n        form.reset();\n        setOpen(false);\n    } else {\n        toast({\n            variant: 'destructive',\n            title: \"Failed to create contact\",\n            description: result.message || \"An unexpected error occurred.\",\n        });\n    }\n  }\n\n  return (\n    <Dialog open={open} onOpenChange={setOpen}>\n      <DialogTrigger asChild>\n        <Button>Add Contact</Button>\n      </DialogTrigger>\n      <DialogContent className=\"sm:max-w-[425px]\">\n        <DialogHeader>\n          <DialogTitle>Add New Contact</DialogTitle>\n          <DialogDescription>\n            Fill in the details to add a new contact.\n          </DialogDescription>\n        </DialogHeader>\n        <Form {...form}>\n          <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-4\">\n            <FormField\n              control={form.control}\n              name=\"name\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Name</FormLabel>\n                  <FormControl>\n                    <Input placeholder=\"John Doe\" {...field} />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n            <FormField\n              control={form.control}\n              name=\"email\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Email</FormLabel>\n                  <FormControl>\n                    <Input\n                      type=\"email\"\n                      placeholder=\"john.doe@example.com\"\n                      {...field}\n                    />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n            <FormField\n              control={form.control}\n              name=\"phone\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Phone Number</FormLabel>\n                  <FormControl>\n                    <Input placeholder=\"+1 234 567 890\" {...field} />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n            <DialogFooter>\n              <DialogClose asChild>\n                <Button variant=\"outline\">Cancel</Button>\n              </DialogClose>\n              <Button type=\"submit\">Create Contact</Button>\n            </DialogFooter>\n          </form>\n        </Form>\n      </DialogContent>\n    </Dialog>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1806, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/dashboard/contacts-view.tsx"],"sourcesContent":["\n\n\"use client\";\n\nimport * as React from \"react\";\nimport { User, Phone, Mail, Search, MessageSquare, ArrowLeft, PanelLeft, LogIn, UserCheck } from \"lucide-react\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription } from \"@/components/ui/card\";\nimport { Input } from \"@/components/ui/input\";\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\nimport type { User as ContactUser, Chat, Message, UserProfile, Agent, Note } from \"@/types\";\nimport { cn } from \"@/lib/utils\";\nimport { Textarea } from \"../ui/textarea\";\nimport { Separator } from \"../ui/separator\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { Badge } from \"../ui/badge\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"../ui/select\";\nimport { getContactsByCompany, getAgentsByCompany, assignAgentToContact, addNoteToContact, getMessagesForChat, getChatsByCompany } from \"@/app/actions\";\nimport { Skeleton } from \"../ui/skeleton\";\nimport { AddContactDialog } from \"./add-contact-dialog\";\n\n\nconst ContactProfile = ({ contact, agents, chatHistory, onBack, user, onNoteAdd, onAssign, onStartChat }: { \n    contact: ContactUser;\n    agents: Agent[];\n    chatHistory: Message[] | undefined;\n    onBack?: () => void;\n    user: UserProfile | null;\n    onNoteAdd: (contactId: string, note: Note) => void;\n    onAssign: (contactId: string, agentId: string) => void;\n    onStartChat: (contact: ContactUser) => void;\n}) => {\n    const { toast } = useToast();\n    const [note, setNote] = React.useState(\"\");\n    const assignedAgent = agents.find(a => a.id === contact.assignedAgentId);\n    \n    const handleSaveNote = async () => {\n        if (!note.trim() || !user) {\n            toast({\n                variant: \"destructive\",\n                title: \"Error\",\n                description: \"Cannot save an empty note.\",\n            })\n            return;\n        }\n        \n        const result = await addNoteToContact(contact.id, user.id, user.name, note);\n\n        if (result.success && result.note) {\n            onNoteAdd(contact.id, result.note);\n            toast({\n                title: \"Note Saved\",\n                description: `Your note for ${contact.name} has been saved.`,\n            });\n            setNote(\"\");\n        } else {\n            toast({ variant: 'destructive', title: \"Failed to save note.\" });\n        }\n    }\n    \n    const handleAssignAgent = (agentId: string) => {\n        assignAgentToContact(contact.id, agentId);\n        onAssign(contact.id, agentId);\n        \n        const agent = agents.find(a => a.id === agentId);\n        toast({\n          title: \"Contact Assigned\",\n          description: `${contact?.name} has been assigned to ${agent?.name || 'Unassigned'}.`,\n        });\n    }\n\n    return (\n        <Card className=\"h-full flex flex-col border-0 shadow-none md:border md:shadow-sm rounded-none md:rounded-lg\">\n            <CardHeader className=\"flex flex-row items-center gap-4\">\n                 {onBack && (\n                     <Button variant=\"ghost\" size=\"icon\" className=\"md:hidden -ml-2\" onClick={onBack}>\n                         <ArrowLeft className=\"h-5 w-5\" />\n                     </Button>\n                 )}\n                 <Avatar className=\"h-16 w-16\">\n                    <AvatarImage src={contact.avatar} alt={contact.name} data-ai-hint=\"person portrait\" />\n                    <AvatarFallback>{contact.name.charAt(0)}</AvatarFallback>\n                </Avatar>\n                <div className=\"flex-1\">\n                    <CardTitle className=\"text-2xl\">{contact.name}</CardTitle>\n                    <CardDescription>\n                       Last active: 2 hours ago\n                    </CardDescription>\n                </div>\n                 <Button variant=\"outline\" onClick={() => onStartChat(contact)}><MessageSquare className=\"h-4 w-4 mr-2\" /> Message</Button>\n            </CardHeader>\n            <CardContent className=\"flex-1 overflow-auto space-y-6 pt-0\">\n                 <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                    <div>\n                        <h3 className=\"text-sm font-medium text-muted-foreground mb-2\">Contact Details</h3>\n                        <div className=\"space-y-2 text-sm\">\n                            <div className=\"flex items-center gap-2\"><Mail className=\"h-4 w-4 text-muted-foreground\" /> <span>{contact.email}</span></div>\n                            <div className=\"flex items-center gap-2\"><Phone className=\"h-4 w-4 text-muted-foreground\" /> <span>{contact.phone}</span></div>\n                        </div>\n                    </div>\n                     <div>\n                        <h3 className=\"text-sm font-medium text-muted-foreground mb-2\">Assigned Agent</h3>\n                         {(user?.role === 'admin' || user?.role === 'super_agent') ? (\n                            <Select onValueChange={handleAssignAgent} defaultValue={assignedAgent?.id}>\n                                <SelectTrigger className=\"w-full\">\n                                    <SelectValue placeholder=\"Unassigned\" />\n                                </SelectTrigger>\n                                <SelectContent>\n                                    <SelectItem value=\"unassigned\">Unassigned</SelectItem>\n                                    {agents.map(agent => (\n                                        <SelectItem key={agent.id} value={agent.id}>{agent.name}</SelectItem>\n                                    ))}\n                                </SelectContent>\n                            </Select>\n                         ) : (\n                            assignedAgent ? (\n                                <Badge variant=\"secondary\" className=\"flex items-center gap-2 w-fit\">\n                                    <Avatar className=\"h-5 w-5\">\n                                        <AvatarImage src={assignedAgent.avatar} alt={assignedAgent.name} data-ai-hint=\"person portrait\" />\n                                        <AvatarFallback>{assignedAgent.name.charAt(0)}</AvatarFallback>\n                                    </Avatar>\n                                    {assignedAgent.name}\n                                </Badge>\n                            ) : <Badge variant=\"outline\">Unassigned</Badge>\n                         )}\n                    </div>\n                </div>\n\n                <Separator />\n\n                <div>\n                    <h3 className=\"text-sm font-medium text-muted-foreground mb-4\">Agent Notes</h3>\n                    <div className=\"space-y-4\">\n                        <div className=\"flex gap-3\">\n                             <Avatar className=\"h-8 w-8\">\n                                <AvatarImage src={user?.avatar} alt={user?.name || \"\"} data-ai-hint=\"person portrait\" />\n                                <AvatarFallback>{user?.name ? user.name.charAt(0) : 'A'}</AvatarFallback>\n                            </Avatar>\n                             <div className=\"flex-1\">\n                                 <Textarea \n                                    placeholder=\"Add a private note for this contact...\" \n                                    rows={2}\n                                    value={note}\n                                    onChange={(e) => setNote(e.target.value)}\n                                />\n                                 <Button size=\"sm\" className=\"mt-2\" onClick={handleSaveNote}>Save Note</Button>\n                             </div>\n                        </div>\n                        <ScrollArea className=\"h-48\">\n                            <div className=\"space-y-4 pr-4\">\n                                {contact.notes && contact.notes.map(note => (\n                                    <div key={note.id} className=\"text-sm border-l-2 pl-3\">\n                                        <p className=\"font-medium\">{note.text}</p>\n                                        <p className=\"text-xs text-muted-foreground mt-1\">- {note.agentName} on {new Date(note.timestamp).toLocaleString()}</p>\n                                    </div>\n                                ))}\n                            </div>\n                        </ScrollArea>\n                    </div>\n                </div>\n                <Separator />\n                <div>\n                    <h3 className=\"text-sm font-medium text-muted-foreground mb-2\">Conversation History</h3>\n                    <ScrollArea className=\"h-64\">\n                         <div className=\"p-4 space-y-4 bg-muted/50 rounded-md\">\n                            {chatHistory?.length ? chatHistory.map((message) => {\n                                const isMe = message.sender === 'me';\n                                const sender = isMe ? null : message.sender as { name: string, avatar: string };\n                                return (\n                                    <div key={message.id} className={cn(\"flex items-end gap-2 text-sm\", isMe ? \"justify-end\" : \"justify-start\")}>\n                                        {!isMe && (\n                                            <Avatar className=\"h-6 w-6\">\n                                                <AvatarImage src={sender?.avatar} alt={sender?.name} data-ai-hint=\"person portrait\" />\n                                                <AvatarFallback>{sender?.name.charAt(0)}</AvatarFallback>\n                                            </Avatar>\n                                        )}\n                                        <div className={cn(\"max-w-xs rounded-lg px-3 py-2\", isMe ? \"bg-primary text-primary-foreground\" : \"bg-background\")}>\n                                            <p>{message.text}</p>\n                                            <p className={cn(\"text-xs mt-1 opacity-70\", isMe ? \"text-right\" : \"text-left\")}>{message.timestamp}</p>\n                                        </div>\n                                    </div>\n                                )\n                            }) : <p className=\"text-center text-muted-foreground\">No conversation history.</p>}\n                        </div>\n                    </ScrollArea>\n                </div>\n\n            </CardContent>\n        </Card>\n    )\n}\n\nconst EmptyState = () => (\n    <div className=\"hidden md:flex flex-col items-center justify-center h-full text-center p-8\">\n        <UserCheck className=\"h-16 w-16 text-muted-foreground/50\" />\n        <h2 className=\"mt-4 text-xl font-semibold\">Select a Contact</h2>\n        <p className=\"mt-1 text-muted-foreground\">Choose a contact from the list to view their profile and conversation history.</p>\n    </div>\n)\n\ntype ContactsViewProps = {\n  onMenuClick: () => void;\n  user: UserProfile | null;\n  onNavigateToChat: (contact: ContactUser) => void;\n};\n\nexport function ContactsView({ onMenuClick, user, onNavigateToChat }: ContactsViewProps) {\n  const [contacts, setContacts] = React.useState<ContactUser[]>([]);\n  const [agents, setAgents] = React.useState<Agent[]>([]);\n  const [chats, setChats] = React.useState<Chat[]>([]);\n  const [isLoading, setIsLoading] = React.useState(true);\n  const [searchTerm, setSearchTerm] = React.useState(\"\");\n  const [selectedContact, setSelectedContact] = React.useState<ContactUser | null>(null);\n  const [selectedChatHistory, setSelectedChatHistory] = React.useState<Message[] | undefined>(undefined);\n  \n  React.useEffect(() => {\n    async function fetchData() {\n        if(user?.companyId) {\n            setIsLoading(true);\n            const [fetchedContacts, fetchedAgents, fetchedChats] = await Promise.all([\n                getContactsByCompany(user.companyId),\n                getAgentsByCompany(user.companyId),\n                getChatsByCompany(user.companyId),\n            ]);\n            setContacts(fetchedContacts);\n            setAgents(fetchedAgents);\n            setChats(fetchedChats);\n\n            if (fetchedContacts.length > 0 && window.innerWidth >= 768) {\n                handleSelectContact(fetchedContacts[0], fetchedChats);\n            }\n            setIsLoading(false);\n        }\n    }\n    fetchData();\n  }, [user]);\n  \n  const handleSelectContact = async (contact: ContactUser, allChats: Chat[]) => {\n    setSelectedContact(contact);\n    const relevantChat = allChats.find(chat => chat.user.id === contact.id);\n    if (relevantChat) {\n      const messages = await getMessagesForChat(relevantChat.id);\n      setSelectedChatHistory(messages);\n    } else {\n      setSelectedChatHistory([]);\n    }\n  }\n\n\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n    contact.email?.toLowerCase().includes(searchTerm.toLowerCase()) ||\n    contact.phone?.toLowerCase().includes(searchTerm.toLowerCase())\n  );\n  \n  const handleAssignAgent = (contactId: string, agentId: string) => {\n    setContacts(prev => prev.map(c => \n        c.id === contactId ? { ...c, assignedAgentId: agentId } : c\n    ));\n    if (selectedContact?.id === contactId) {\n        setSelectedContact(prev => prev ? { ...prev, assignedAgentId: agentId } : null);\n    }\n  };\n  \n  const handleNoteAdd = (contactId: string, note: Note) => {\n     setContacts(prev => prev.map(c => \n        c.id === contactId ? { ...c, notes: [note, ...(c.notes || [])] } : c\n    ));\n    if (selectedContact?.id === contactId) {\n        setSelectedContact(prev => prev ? { ...prev, notes: [note, ...(prev.notes || [])] } : null);\n    }\n  }\n\n  const handleContactAdd = (newContact: ContactUser) => {\n    setContacts(prev => [newContact, ...prev]);\n  };\n\n\n  if (!user) {\n      return (\n          <div className=\"flex h-screen w-full flex-col items-center justify-center bg-background text-foreground\">\n               <div className=\"flex flex-col items-center justify-center h-full text-center p-8\">\n                    <LogIn className=\"h-12 w-12 text-primary\"/>\n                    <h2 className=\"mt-4 text-xl font-semibold\">Please Log In</h2>\n                    <p className=\"mt-1 text-muted-foreground\">Log in to view and manage your contacts.</p>\n                </div>\n          </div>\n      )\n  }\n\n  return (\n    <div className=\"flex h-screen w-full flex-col bg-background text-foreground\">\n    <header className=\"flex flex-col sm:flex-row items-start sm:items-center justify-between gap-4 p-4 border-b\">\n        <div className=\"flex items-center gap-2\">\n            <Button variant=\"ghost\" size=\"icon\" className=\"md:hidden\" onClick={onMenuClick}>\n                <PanelLeft className=\"h-5 w-5\" />\n                <span className=\"sr-only\">Open Menu</span>\n            </Button>\n            <h1 className=\"text-2xl font-bold\">Contacts</h1>\n        </div>\n        <div className=\"flex items-center gap-4 w-full sm:w-auto\">\n            <div className=\"relative w-full sm:w-64\">\n                <Search className=\"absolute left-3 top-1/2 -translate-y-1/2 h-4 w-4 text-muted-foreground\" />\n                <Input \n                    placeholder=\"Search contacts...\" \n                    className=\"pl-9\"\n                    value={searchTerm}\n                    onChange={(e) => setSearchTerm(e.target.value)}\n                />\n            </div>\n            <AddContactDialog onContactAdd={handleContactAdd} user={user} />\n        </div>\n    </header>\n    <main className=\"flex-1 overflow-hidden grid grid-cols-1 md:grid-cols-3 lg:grid-cols-4\">\n        {/* Contact List */}\n        <div className={cn(\"md:col-span-1 lg:col-span-1 border-r flex flex-col\", selectedContact ? \"hidden md:flex\" : \"flex\")}>\n            <ScrollArea className=\"flex-1\">\n                {isLoading ? (\n                    <div className=\"p-2 space-y-1\">\n                        {Array.from({length: 8}).map((_, i) => <Skeleton key={i} className=\"h-[68px] w-full\" />)}\n                    </div>\n                ) : (\n                    <div className=\"flex flex-col gap-1 p-2\">\n                    {filteredContacts.map((contact) => (\n                        <Card \n                            key={contact.id} \n                            onClick={() => handleSelectContact(contact, chats)}\n                            className={cn(\"cursor-pointer hover:bg-muted/50\", selectedContact?.id === contact.id && \"bg-muted/80\")}\n                        >\n                            <CardHeader className=\"p-3\">\n                                <div className=\"flex items-center gap-3\">\n                                    <Avatar className=\"h-10 w-10\">\n                                        <AvatarImage src={contact.avatar} alt={contact.name} data-ai-hint=\"person portrait\" />\n                                        <AvatarFallback>{contact.name.charAt(0)}</AvatarFallback>\n                                    </Avatar>\n                                    <div className=\"flex-1 min-w-0\">\n                                        <div className=\"font-medium truncate\">{contact.name}</div>\n                                        <div className=\"text-xs text-muted-foreground truncate\">{contact.email}</div>\n                                    </div>\n                                    {contact.assignedAgentId && (\n                                        <Badge variant=\"secondary\" className=\"h-5 text-xs\">\n                                            <UserCheck className=\"h-3 w-3 mr-1\" />\n                                            Assigned\n                                        </Badge>\n                                    )}\n                                </div>\n                            </CardHeader>\n                        </Card>\n                    ))}\n                    </div>\n                )}\n            </ScrollArea>\n        </div>\n        \n        {/* Contact Profile */}\n        <div className={cn(\"md:col-span-2 lg:col-span-3 overflow-auto\", selectedContact ? \"block\" : \"hidden md:block\")}>\n            {selectedContact ? (\n                <ContactProfile \n                    contact={selectedContact}\n                    agents={agents}\n                    chatHistory={selectedChatHistory} \n                    onBack={() => setSelectedContact(null)}\n                    user={user}\n                    onNoteAdd={handleNoteAdd}\n                    onAssign={handleAssignAgent}\n                    onStartChat={onNavigateToChat}\n                />\n            ) : (\n                <EmptyState />\n            )}\n        </div>\n    </main>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2879, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/dashboard/agents-view.tsx"],"sourcesContent":["\n\"use client\";\n\nimport * as React from \"react\";\nimport {\n    MoreHorizontal,\n    PlusCircle,\n    Search,\n    User,\n    Mail,\n    Phone,\n    ArrowDown,\n    ArrowUp,\n} from \"lucide-react\";\n\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n    Card,\n    CardContent,\n    CardDescription,\n    CardHeader,\n    CardTitle,\n} from \"@/components/ui/card\";\nimport {\n    DropdownMenu,\n    DropdownMenuContent,\n    DropdownMenuItem,\n    DropdownMenuLabel,\n    DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\nimport {\n    Table,\n    TableBody,\n    TableCell,\n    TableHead,\n    TableHeader,\n    TableRow,\n} from \"@/components/ui/table\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\nimport { Input } from \"@/components/ui/input\";\nimport {\n    Select,\n    SelectContent,\n    SelectItem,\n    SelectTrigger,\n    SelectValue,\n} from \"@/components/ui/select\";\nimport type { Agent, UserProfile, AgentPerformance } from \"@/types\";\nimport { AddAgentDialog } from \"./add-agent-dialog\";\nimport { PanelLeft } from \"lucide-react\";\nimport { cn } from \"@/lib/utils\";\nimport { Accordion, AccordionContent, AccordionItem, AccordionTrigger } from \"../ui/accordion\";\nimport { Bar, BarChart, Cell, ResponsiveContainer, Tooltip, XAxis, YAxis } from \"recharts\";\nimport { ChartContainer, ChartTooltipContent } from \"../ui/chart\";\nimport { getAgentsByCompany } from \"@/app/actions\";\nimport { Skeleton } from \"../ui/skeleton\";\nimport { useToast } from \"@/hooks/use-toast\";\n\nconst statusVariantMap: Record<string, \"bg-emerald-500\" | \"bg-amber-500\" | \"bg-slate-400\"> = {\n    Online: \"bg-emerald-500\",\n    Busy: \"bg-amber-500\",\n    Offline: \"bg-slate-400\",\n};\n\nexport function AgentsView({ onMenuClick, user }: { onMenuClick: () => void; user: UserProfile | null }) {\n  const [agents, setAgents] = React.useState<Agent[]>([]);\n  const [isLoading, setIsLoading] = React.useState(true);\n  const [searchTerm, setSearchTerm] = React.useState(\"\");\n  const [statusFilter, setStatusFilter] = React.useState<string>(\"all\");\n  const { toast } = useToast();\n\n  React.useEffect(() => {\n    async function fetchAgents() {\n        if (user?.companyId) {\n            setIsLoading(true);\n            const fetchedAgents = await getAgentsByCompany(user.companyId);\n            setAgents(fetchedAgents);\n            setIsLoading(false);\n        }\n    }\n    fetchAgents();\n  }, [user]);\n\n\n  const handleAgentAdd = (newAgent: Agent) => {\n    setAgents((prev) => [newAgent, ...prev]);\n  };\n\n  const handleActionClick = (action: 'Edit' | 'Remove') => {\n      toast({\n          title: `Action: ${action}`,\n          description: \"This feature is currently under construction.\",\n      });\n  };\n  \n  const filteredAgents = React.useMemo(() => {\n    return agents.filter(agent => {\n        const name = agent.name || '';\n        const email = agent.email || '';\n        const status = agent.status || 'Offline';\n\n        const matchesSearch = name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                              email.toLowerCase().includes(searchTerm.toLowerCase());\n        const matchesStatus = statusFilter === 'all' || status === statusFilter;\n        return matchesSearch && matchesStatus;\n    });\n  }, [agents, searchTerm, statusFilter]);\n\n  const mostActiveAgents = React.useMemo(() => {\n    return [...agents]\n        .sort((a, b) => (b.conversationsToday || 0) - (a.conversationsToday || 0))\n        .slice(0, 3);\n  }, [agents]);\n\n    const parseTimeToSeconds = (timeStr?: string): number => {\n        if (!timeStr) return 0;\n        let totalSeconds = 0;\n        const minMatch = timeStr.match(/(\\d+)m/);\n        const secMatch = timeStr.match(/(\\d+)s/);\n        if (minMatch) totalSeconds += parseInt(minMatch[1]) * 60;\n        if (secMatch) totalSeconds += parseInt(secMatch[1]);\n        return totalSeconds;\n    };\n\n  const responseTimeData = React.useMemo(() => {\n      const chartColors = [\"hsl(var(--chart-1))\", \"hsl(var(--chart-2))\", \"hsl(var(--chart-3))\", \"hsl(var(--chart-4))\", \"hsl(var(--chart-5))\"];\n      return agents.map((agent, index) => ({\n          name: agent.name.split(' ')[0],\n          time: parseTimeToSeconds(agent.avgResponseTime),\n          fill: chartColors[index % chartColors.length]\n      }));\n  }, [agents]);\n\n\n  if (user?.role !== 'admin' && user?.role !== 'super_agent') {\n      return (\n          <div className=\"flex h-screen w-full flex-col bg-background text-foreground\">\n             <header className=\"flex items-center justify-between p-4 border-b\">\n                <div className=\"flex items-center gap-2\">\n                    <Button variant=\"ghost\" size=\"icon\" className=\"md:hidden\" onClick={onMenuClick}>\n                        <PanelLeft className=\"h-5 w-5\" />\n                        <span className=\"sr-only\">Open Menu</span>\n                    </Button>\n                    <h1 className=\"text-2xl font-bold\">Access Denied</h1>\n                </div>\n            </header>\n            <main className=\"flex-1 flex items-center justify-center p-4\">\n                <Card className=\"w-full max-w-md\">\n                    <CardHeader>\n                        <CardTitle>Permission Required</CardTitle>\n                        <CardDescription>\n                            You do not have permission to view this page. This area is restricted to administrators and super agents.\n                        </CardDescription>\n                    </CardHeader>\n                </Card>\n            </main>\n          </div>\n      )\n  }\n\n  return (\n    <div className=\"flex h-screen w-full flex-col bg-background text-foreground\">\n      <header className=\"flex flex-col sm:flex-row items-start sm:items-center justify-between gap-4 p-4 border-b\">\n        <div className=\"flex items-center gap-2\">\n            <Button variant=\"ghost\" size=\"icon\" className=\"md:hidden\" onClick={onMenuClick}>\n                <PanelLeft className=\"h-5 w-5\" />\n                <span className=\"sr-only\">Open Menu</span>\n            </Button>\n            <h1 className=\"text-2xl font-bold\">Agents & Team Management</h1>\n        </div>\n        <div className=\"flex items-center gap-2 w-full sm:w-auto\">\n            <div className=\"relative flex-1 sm:flex-initial\">\n                <Search className=\"absolute left-2.5 top-2.5 h-4 w-4 text-muted-foreground\" />\n                <Input\n                    type=\"search\"\n                    placeholder=\"Search agents...\"\n                    className=\"pl-8 sm:w-64\"\n                    value={searchTerm}\n                    onChange={(e) => setSearchTerm(e.target.value)}\n                />\n            </div>\n            <Select onValueChange={setStatusFilter} defaultValue=\"all\">\n                <SelectTrigger className=\"w-[120px]\">\n                    <SelectValue placeholder=\"Status\" />\n                </SelectTrigger>\n                <SelectContent>\n                    <SelectItem value=\"all\">All</SelectItem>\n                    <SelectItem value=\"Online\">Online</SelectItem>\n                    <SelectItem value=\"Busy\">Busy</SelectItem>\n                    <SelectItem value=\"Offline\">Offline</SelectItem>\n                </SelectContent>\n            </Select>\n            <AddAgentDialog onAgentAdd={handleAgentAdd} user={user} />\n        </div>\n      </header>\n      <main className=\"flex-1 overflow-auto p-4 space-y-8\">\n        <Card>\n          <CardHeader>\n            <CardTitle>Agent Directory</CardTitle>\n            <CardDescription>\n              Manage your team of support agents.\n            </CardDescription>\n          </CardHeader>\n          <CardContent>\n            <Table>\n              <TableHeader>\n                <TableRow>\n                  <TableHead>Agent</TableHead>\n                  <TableHead>Role</TableHead>\n                  <TableHead>Status</TableHead>\n                  <TableHead className=\"text-center\">Conversations</TableHead>\n                  <TableHead className=\"text-center\">Avg. Response</TableHead>\n                  <TableHead className=\"text-center\">CSAT</TableHead>\n                  <TableHead>\n                    <span className=\"sr-only\">Actions</span>\n                  </TableHead>\n                </TableRow>\n              </TableHeader>\n              <TableBody>\n                {isLoading ? (\n                    Array.from({ length: 4 }).map((_, i) => (\n                        <TableRow key={i}>\n                            <TableCell>\n                                <div className=\"flex items-center gap-3\">\n                                    <Skeleton className=\"h-10 w-10 rounded-full\" />\n                                    <div className=\"space-y-2\">\n                                        <Skeleton className=\"h-4 w-[150px]\" />\n                                        <Skeleton className=\"h-3 w-[200px]\" />\n                                    </div>\n                                </div>\n                            </TableCell>\n                            <TableCell><Skeleton className=\"h-6 w-20\" /></TableCell>\n                            <TableCell><Skeleton className=\"h-6 w-20\" /></TableCell>\n                            <TableCell className=\"text-center\"><Skeleton className=\"h-6 w-8 mx-auto\" /></TableCell>\n                            <TableCell className=\"text-center\"><Skeleton className=\"h-6 w-12 mx-auto\" /></TableCell>\n                            <TableCell className=\"text-center\"><Skeleton className=\"h-6 w-10 mx-auto\" /></TableCell>\n                            <TableCell><Skeleton className=\"h-8 w-8 ml-auto\" /></TableCell>\n                        </TableRow>\n                    ))\n                ) : filteredAgents.map((agent) => (\n                  <TableRow key={agent.id}>\n                    <TableCell>\n                      <div className=\"flex items-center gap-3\">\n                        <Avatar className=\"h-10 w-10\">\n                          <AvatarImage src={agent.avatar} alt={agent.name} />\n                          <AvatarFallback>{agent.name.charAt(0)}</AvatarFallback>\n                        </Avatar>\n                        <div>\n                            <div className=\"font-medium\">{agent.name}</div>\n                            <div className=\"text-sm text-muted-foreground\">{agent.email}</div>\n                        </div>\n                      </div>\n                    </TableCell>\n                    <TableCell>\n                      <Badge variant=\"outline\" className=\"capitalize\">{agent.role.replace(\"_\", \" \")}</Badge>\n                    </TableCell>\n                    <TableCell>\n                        <div className=\"flex items-center gap-2\">\n                           <span className={cn(\"h-2.5 w-2.5 rounded-full\", statusVariantMap[agent.status || 'Offline'])}></span>\n                           <span>{agent.status || 'Offline'}</span>\n                        </div>\n                    </TableCell>\n                    <TableCell className=\"text-center\">{agent.conversationsToday || 0}</TableCell>\n                    <TableCell className=\"text-center\">{agent.avgResponseTime || 'N/A'}</TableCell>\n                    <TableCell className=\"text-center\">{agent.csat ? `${agent.csat}%` : 'N/A'}</TableCell>\n                    <TableCell>\n                      <DropdownMenu>\n                        <DropdownMenuTrigger asChild>\n                          <Button aria-haspopup=\"true\" size=\"icon\" variant=\"ghost\">\n                            <MoreHorizontal className=\"h-4 w-4\" />\n                            <span className=\"sr-only\">Toggle menu</span>\n                          </Button>\n                        </DropdownMenuTrigger>\n                        <DropdownMenuContent align=\"end\">\n                          <DropdownMenuLabel>Actions</DropdownMenuLabel>\n                          <DropdownMenuItem onClick={() => handleActionClick('Edit')}>Edit</DropdownMenuItem>\n                          <DropdownMenuItem onClick={() => handleActionClick('Remove')}>Remove</DropdownMenuItem>\n                        </DropdownMenuContent>\n                      </DropdownMenu>\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </CardContent>\n        </Card>\n\n        <div>\n            <h2 className=\"text-2xl font-bold mb-4\">Agent Performance</h2>\n            <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-3\">\n                <Card>\n                    <CardHeader>\n                        <CardTitle>Most Active Agents</CardTitle>\n                        <CardDescription>Agents with the most conversations today.</CardDescription>\n                    </CardHeader>\n                    <CardContent>\n                       {isLoading ? (\n                            <div className=\"space-y-4\">\n                                {Array.from({ length: 3 }).map((_, i) => (\n                                    <div key={i} className=\"flex items-center gap-4\">\n                                        <Skeleton className=\"h-10 w-10 rounded-full\" />\n                                        <Skeleton className=\"h-4 flex-1\" />\n                                        <Skeleton className=\"h-6 w-8\" />\n                                    </div>\n                                ))}\n                            </div>\n                       ) : (\n                            <ul className=\"space-y-4\">\n                                {mostActiveAgents.map(agent => (\n                                    <li key={agent.id} className=\"flex items-center gap-4\">\n                                        <Avatar>\n                                            <AvatarImage src={agent.avatar} alt={agent.name} />\n                                            <AvatarFallback>{agent.name.charAt(0)}</AvatarFallback>\n                                        </Avatar>\n                                        <div className=\"flex-1\">{agent.name}</div>\n                                        <div className=\"font-bold\">{agent.conversationsToday || 0}</div>\n                                    </li>\n                                ))}\n                            </ul>\n                       )}\n                    </CardContent>\n                </Card>\n                <Card className=\"lg:col-span-2\">\n                    <CardHeader>\n                        <CardTitle>Response Time Comparison</CardTitle>\n                        <CardDescription>Average response time in seconds.</CardDescription>\n                    </CardHeader>\n                    <CardContent>\n                       {isLoading ? (\n                            <div className=\"h-64 flex items-center justify-center\">\n                                <Skeleton className=\"h-full w-full\" />\n                            </div>\n                       ) : (\n                            <ChartContainer config={{}} className=\"h-64\">\n                                <BarChart data={responseTimeData}>\n                                    <XAxis dataKey=\"name\" tickLine={false} axisLine={false} />\n                                    <YAxis hide />\n                                    <Tooltip cursor={false} content={<ChartTooltipContent indicator=\"dot\" />} />\n                                    <Bar dataKey=\"time\" radius={4}>\n                                        {responseTimeData.map(entry => (\n                                            <Cell key={entry.name} fill={entry.fill} />\n                                        ))}\n                                    </Bar>\n                                </BarChart>\n                            </ChartContainer>\n                       )}\n                    </CardContent>\n                </Card>\n            </div>\n        </div>\n      </main>\n    </div>\n  );\n\n    \n\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4062, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/dashboard/announcements-view.tsx"],"sourcesContent":["\"use client\";\n\nimport * as React from \"react\";\nimport { PlusCircle, Search, UserCheck, Send, PanelLeft, MessageSquare, CornerDownRight } from \"lucide-react\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Input } from \"@/components/ui/input\";\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport type { Announcement, AnnouncementCategory, UserProfile, Agent, Comment } from \"@/types\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { z } from \"zod\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { cn } from \"@/lib/utils\";\nimport { createAnnouncement, getAnnouncementsByCompany, getAgentsByCompany, markAnnouncementAsRead, addCommentToAnnouncement } from \"@/app/actions\";\nimport { Skeleton } from \"../ui/skeleton\";\nimport { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from \"../ui/tooltip\";\nimport { Collapsible, CollapsibleContent, CollapsibleTrigger } from \"../ui/collapsible\";\nimport { Separator } from \"../ui/separator\";\n\n\nconst categoryVariantMap: Record<AnnouncementCategory, \"default\" | \"secondary\" | \"destructive\"> = {\n    General: \"secondary\",\n    Urgent: \"destructive\",\n    Training: \"default\"\n};\n\nconst announcementFormSchema = z.object({\n  title: z.string().min(5, \"Title must be at least 5 characters.\"),\n  content: z.string().min(10, \"Content must be at least 10 characters.\"),\n  category: z.enum([\"General\", \"Urgent\", \"Training\"]),\n});\n\ntype AnnouncementFormValues = z.infer<typeof announcementFormSchema>;\n\nconst AnnouncementForm = ({ onSubmit, form, user, isSubmitting }: { onSubmit: (data: AnnouncementFormValues) => void; form: any; user: UserProfile | null, isSubmitting: boolean }) => (\n    <Card className=\"flex-1 flex flex-col h-full border-0 shadow-none md:border md:shadow-sm\">\n        <CardHeader className=\"px-0 md:px-6\">\n          <CardTitle>New Announcement</CardTitle>\n          <CardDescription>Create and publish a new announcement for your team.</CardDescription>\n        </CardHeader>\n        <CardContent className=\"flex-1 overflow-auto px-0 md:px-6\">\n          <Form {...form}>\n            <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-4 h-full flex flex-col\">\n                <div className=\"space-y-4\">\n                    <FormField\n                        control={form.control}\n                        name=\"title\"\n                        render={({ field }) => (\n                        <FormItem>\n                            <FormLabel>Title</FormLabel>\n                            <FormControl>\n                            <Input placeholder=\"e.g., Q3 All-Hands Meeting\" {...field} />\n                            </FormControl>\n                            <FormMessage />\n                        </FormItem>\n                        )}\n                    />\n                    <FormField\n                        control={form.control}\n                        name=\"content\"\n                        render={({ field }) => (\n                        <FormItem>\n                            <FormLabel>Content</FormLabel>\n                            <FormControl>\n                            <Textarea placeholder=\"Write your announcement here...\" {...field} rows={6} />\n                            </FormControl>\n                            <FormMessage />\n                        </FormItem>\n                        )}\n                    />\n                    <FormField\n                        control={form.control}\n                        name=\"category\"\n                        render={({ field }) => (\n                        <FormItem>\n                            <FormLabel>Category</FormLabel>\n                            <Select onValueChange={field.onChange} defaultValue={field.value}>\n                            <FormControl>\n                                <SelectTrigger>\n                                <SelectValue placeholder=\"Select a category\" />\n                                </SelectTrigger>\n                            </FormControl>\n                            <SelectContent>\n                                <SelectItem value=\"General\">General</SelectItem>\n                                <SelectItem value=\"Training\">Training</SelectItem>\n                                <SelectItem value=\"Urgent\">Urgent</SelectItem>\n                            </SelectContent>\n                            </Select>\n                            <FormMessage />\n                        </FormItem>\n                        )}\n                    />\n                </div>\n                <div className=\"mt-auto pt-4\">\n                    <Button type=\"submit\" className=\"w-full\" disabled={isSubmitting}>\n                        <PlusCircle className=\"mr-2 h-4 w-4\" /> \n                        {isSubmitting ? \"Publishing...\" : \"Publish Announcement\"}\n                    </Button>\n                </div>\n            </form>\n          </Form>\n        </CardContent>\n    </Card>\n);\n\nconst AnnouncementCard = ({\n    ann,\n    user,\n    allAgents,\n    onCommentSubmit\n}: {\n    ann: Announcement,\n    user: UserProfile,\n    allAgents: Agent[],\n    onCommentSubmit: (announcementId: string, content: string) => void,\n}) => {\n    const [newComment, setNewComment] = React.useState(\"\");\n\n    React.useEffect(() => {\n        if (!ann.readBy.includes(user.id)) {\n            markAnnouncementAsRead(ann.id, user.id);\n        }\n    }, [ann.id, ann.readBy, user.id]);\n\n    const readers = allAgents.filter(agent => ann.readBy.includes(agent.id));\n    const isCommentSectionOpen = ann.comments.length > 0;\n\n    const handleCommentSubmit = (e: React.FormEvent) => {\n        e.preventDefault();\n        if (newComment.trim()) {\n            onCommentSubmit(ann.id, newComment);\n            setNewComment(\"\");\n        }\n    };\n\n    return (\n        <Collapsible asChild>\n            <Card className=\"flex flex-col\">\n                <CardHeader>\n                    <div className=\"flex items-center justify-between\">\n                        <Badge variant={categoryVariantMap[ann.category]}>{ann.category}</Badge>\n                        <div className=\"text-xs text-muted-foreground\">{new Date(ann.date).toLocaleDateString()}</div>\n                    </div>\n                    <CardTitle className=\"pt-2\">{ann.title}</CardTitle>\n                    <CardDescription className=\"flex items-center gap-2 pt-1\">\n                        <Avatar className=\"h-6 w-6\">\n                            <AvatarImage src={ann.author.avatar} alt={ann.author.name} data-ai-hint=\"person portrait\" />\n                            <AvatarFallback>{ann.author.name.charAt(0)}</AvatarFallback>\n                        </Avatar>\n                        <span>{ann.author.name}</span>\n                    </CardDescription>\n                </CardHeader>\n                <CardContent className=\"flex-grow\">\n                    <p className=\"text-sm text-muted-foreground whitespace-pre-wrap\">{ann.content}</p>\n                </CardContent>\n                <CardFooter className=\"flex-col items-start gap-4\">\n                    <div className=\"flex items-center justify-between w-full\">\n                        <div className=\"flex items-center -space-x-2\">\n                             <TooltipProvider>\n                                {readers.slice(0, 5).map(reader => (\n                                     <Tooltip key={reader.id}>\n                                         <TooltipTrigger asChild>\n                                             <Avatar className=\"h-7 w-7 border-2 border-background\">\n                                                 <AvatarImage src={reader.avatar} alt={reader.name} />\n                                                 <AvatarFallback>{reader.name.charAt(0)}</AvatarFallback>\n                                             </Avatar>\n                                         </TooltipTrigger>\n                                         <TooltipContent><p>{reader.name}</p></TooltipContent>\n                                     </Tooltip>\n                                ))}\n                             </TooltipProvider>\n                             {readers.length > 5 && (\n                                <div className=\"h-7 w-7 rounded-full bg-muted flex items-center justify-center text-xs text-muted-foreground z-10 border-2 border-background\">\n                                    +{readers.length - 5}\n                                </div>\n                             )}\n                              {readers.length > 0 && <span className=\"pl-4 text-xs text-muted-foreground\">read this.</span>}\n                        </div>\n                        <CollapsibleTrigger asChild>\n                             <Button variant=\"ghost\" size=\"sm\" className=\"flex items-center gap-1 text-xs\">\n                                <MessageSquare className=\"h-4 w-4\" /> {ann.comments.length}\n                            </Button>\n                        </CollapsibleTrigger>\n                    </div>\n\n                    <CollapsibleContent className=\"w-full space-y-4\">\n                        <Separator />\n                        <div className=\"space-y-4\">\n                            {ann.comments.map(comment => (\n                                <div key={comment.id} className=\"flex items-start gap-3\">\n                                    <Avatar className=\"h-8 w-8\">\n                                        <AvatarImage src={comment.author.avatar} alt={comment.author.name} />\n                                        <AvatarFallback>{comment.author.name.charAt(0)}</AvatarFallback>\n                                    </Avatar>\n                                    <div className=\"flex-1\">\n                                        <div className=\"text-sm bg-muted p-2 rounded-lg\">\n                                            <p className=\"font-semibold\">{comment.author.name}</p>\n                                            <p className=\"text-muted-foreground\">{comment.content}</p>\n                                        </div>\n                                        <p className=\"text-xs text-muted-foreground mt-1\">{new Date(comment.timestamp).toLocaleTimeString()}</p>\n                                    </div>\n                                </div>\n                            ))}\n                        </div>\n                        <form className=\"flex items-start gap-3\" onSubmit={handleCommentSubmit}>\n                            <Avatar className=\"h-8 w-8\">\n                                <AvatarImage src={user.avatar} alt={user.name} />\n                                <AvatarFallback>{user.name.charAt(0)}</AvatarFallback>\n                            </Avatar>\n                            <div className=\"flex-1 relative\">\n                                <Textarea \n                                    placeholder=\"Write a comment...\" \n                                    className=\"pr-10\"\n                                    rows={1}\n                                    value={newComment}\n                                    onChange={(e) => setNewComment(e.target.value)}\n                                />\n                                <Button type=\"submit\" size=\"icon\" variant=\"ghost\" className=\"absolute right-1 top-1/2 -translate-y-1/2 h-8 w-8\">\n                                    <Send className=\"h-4 w-4\" />\n                                </Button>\n                            </div>\n                        </form>\n                    </CollapsibleContent>\n                </CardFooter>\n            </Card>\n        </Collapsible>\n    )\n}\n\nconst AnnouncementFeed = ({ announcements, user, allAgents, isLoading, onCommentSubmit }: { announcements: Announcement[], user: UserProfile | null, allAgents: Agent[], isLoading: boolean, onCommentSubmit: (announcementId: string, content: string) => void }) => (\n    <ScrollArea className=\"flex-1 h-full pr-4 -mr-4\">\n        <div className=\"space-y-4\">\n          {isLoading ? (\n            Array.from({length: 3}).map((_, i) => (\n                <Card key={i}><CardHeader><Skeleton className=\"h-4 w-1/4\" /><Skeleton className=\"h-6 w-3/4 mt-2\" /></CardHeader><CardContent><Skeleton className=\"h-10 w-full\" /></CardContent></Card>\n            ))\n          ) : announcements.length === 0 ? (\n            <div className=\"text-center text-muted-foreground py-12\">No announcements yet.</div>\n          ) : (\n            announcements.map((ann) => user && (\n              <AnnouncementCard \n                key={ann.id} \n                ann={ann} \n                user={user} \n                allAgents={allAgents}\n                onCommentSubmit={onCommentSubmit}\n              />\n          ))\n          )}\n        </div>\n      </ScrollArea>\n);\n\n\ntype AnnouncementsViewProps = {\n  onMenuClick: () => void;\n  user: UserProfile | null;\n};\n\nexport function AnnouncementsView({ onMenuClick, user }: AnnouncementsViewProps) {\n  const [announcements, setAnnouncements] = React.useState<Announcement[]>([]);\n  const [allAgents, setAllAgents] = React.useState<Agent[]>([]);\n  const [isLoading, setIsLoading] = React.useState(true);\n  const [isSubmitting, setIsSubmitting] = React.useState(false);\n  const [searchTerm, setSearchTerm] = React.useState(\"\");\n  const { toast } = useToast();\n\n  const form = useForm<AnnouncementFormValues>({\n    resolver: zodResolver(announcementFormSchema),\n    defaultValues: {\n      title: \"\",\n      content: \"\",\n      category: \"General\",\n    },\n  });\n\n  React.useEffect(() => {\n    async function fetchData() {\n        if (user?.companyId) {\n            setIsLoading(true);\n            const [fetchedAnnouncements, fetchedAgents] = await Promise.all([\n                getAnnouncementsByCompany(user.companyId),\n                getAgentsByCompany(user.companyId)\n            ]);\n            setAnnouncements(fetchedAnnouncements);\n            setAllAgents(fetchedAgents);\n            setIsLoading(false);\n        }\n    }\n    fetchData();\n  }, [user]);\n\n  const filteredAnnouncements = announcements.filter(ann =>\n    ann.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\n    ann.content.toLowerCase().includes(searchTerm.toLowerCase())\n  );\n\n  async function onSubmit(data: AnnouncementFormValues) {\n    if (!user) return;\n    \n    setIsSubmitting(true);\n    const result = await createAnnouncement({\n        ...data,\n        authorId: user.id,\n        companyId: user.companyId\n    });\n    setIsSubmitting(false);\n\n    if (result.success && result.announcement) {\n        setAnnouncements(prev => [result.announcement!, ...prev]);\n        toast({\n          title: \"Announcement Published\",\n          description: `\"${data.title}\" has been successfully published.`,\n        });\n        form.reset();\n    } else {\n        toast({\n            variant: \"destructive\",\n            title: \"Failed to publish\",\n            description: result.message || \"An unknown error occurred.\",\n        });\n    }\n  }\n\n  const handleCommentSubmit = async (announcementId: string, content: string) => {\n    if (!user) return;\n    const result = await addCommentToAnnouncement(announcementId, user.id, content);\n    if (result.success && result.comment) {\n        const newComment = result.comment;\n        setAnnouncements(prevAnns => \n            prevAnns.map(ann => \n                ann.id === announcementId \n                ? { ...ann, comments: [...ann.comments, newComment] }\n                : ann\n            )\n        );\n    } else {\n        toast({ variant: 'destructive', title: \"Failed to post comment.\" });\n    }\n  }\n\n  const canCreate = user?.role === 'admin' || user?.role === 'super_agent';\n\n  return (\n    <div className=\"flex h-screen w-full flex-col bg-background text-foreground\">\n      <header className=\"flex flex-col sm:flex-row items-start sm:items-center justify-between gap-4 p-4 border-b\">\n        <div className=\"flex items-center gap-2\">\n            <Button variant=\"ghost\" size=\"icon\" className=\"md:hidden\" onClick={onMenuClick}>\n                <PanelLeft className=\"h-5 w-5\" />\n                <span className=\"sr-only\">Open Menu</span>\n            </Button>\n            <h1 className=\"text-2xl font-bold\">Announcements</h1>\n        </div>\n        <div className=\"relative w-full sm:w-auto sm:max-w-xs\">\n            <Search className=\"absolute left-3 top-1/2 -translate-y-1/2 h-4 w-4 text-muted-foreground\" />\n            <Input \n                placeholder=\"Search announcements...\" \n                className=\"pl-9\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n            />\n        </div>\n      </header>\n      <main className=\"flex-1 overflow-hidden p-4\">\n        {/* Desktop Layout */}\n        <div className=\"hidden md:grid md:grid-cols-3 gap-8 h-full\">\n            {canCreate && (\n              <div className=\"md:col-span-1 flex flex-col h-full overflow-hidden\">\n                  <AnnouncementForm form={form} onSubmit={onSubmit} user={user} isSubmitting={isSubmitting} />\n              </div>\n            )}\n            <div className={cn(\"overflow-hidden h-full flex flex-col\", canCreate ? \"md:col-span-2\" : \"md:col-span-3\")}>\n              <h2 className=\"text-xl font-semibold mb-4 px-1\">Feed</h2>\n              <AnnouncementFeed \n                announcements={filteredAnnouncements} \n                user={user} \n                allAgents={allAgents}\n                isLoading={isLoading} \n                onCommentSubmit={handleCommentSubmit}\n              />\n            </div>\n        </div>\n        \n        {/* Mobile Layout */}\n        <div className=\"md:hidden h-full\">\n             <Tabs defaultValue=\"feed\" className=\"w-full h-full flex flex-col\">\n                <TabsList className={cn(\"w-full\", canCreate ? \"grid grid-cols-2\" : \"grid grid-cols-1\")}>\n                    <TabsTrigger value=\"feed\" className=\"flex-1\">Feed</TabsTrigger>\n                    {canCreate && <TabsTrigger value=\"new\" className=\"flex-1\">New</TabsTrigger>}\n                </TabsList>\n                <TabsContent value=\"feed\" className=\"flex-1 overflow-auto mt-4\">\n                    <AnnouncementFeed \n                        announcements={filteredAnnouncements} \n                        user={user}\n                        allAgents={allAgents}\n                        isLoading={isLoading}\n                        onCommentSubmit={handleCommentSubmit}\n                    />\n                </TabsContent>\n                {canCreate && <TabsContent value=\"new\" className=\"flex-1 overflow-auto mt-4\">\n                    <AnnouncementForm form={form} onSubmit={onSubmit} user={user} isSubmitting={isSubmitting} />\n                </TabsContent>}\n            </Tabs>\n        </div>\n      </main>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 5251, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/dashboard/create-campaign-sheet.tsx"],"sourcesContent":["\n\"use client\";\n\nimport * as React from \"react\";\nimport { z } from \"zod\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n  SheetTrigger,\n  SheetFooter,\n} from \"@/components/ui/sheet\";\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport type { Campaign, User } from \"@/types\";\nimport { ArrowLeft, ArrowRight, Bot, MessageSquare, Users, Calendar, Check, Search, Sparkles } from \"lucide-react\";\nimport { Separator } from \"../ui/separator\";\nimport { generateCampaignMessage } from \"@/ai/flows/generate-campaign-message\";\nimport { ScrollArea } from \"../ui/scroll-area\";\nimport { Checkbox } from \"../ui/checkbox\";\nimport { Label } from \"../ui/label\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"../ui/avatar\";\nimport { RadioGroup, RadioGroupItem } from \"../ui/radio-group\";\nimport { Popover, PopoverContent, PopoverTrigger } from \"../ui/popover\";\nimport { cn } from \"@/lib/utils\";\nimport { Calendar as CalendarIcon } from \"lucide-react\";\nimport { format } from \"date-fns\";\nimport { Calendar as CalendarComponent } from \"../ui/calendar\";\n\nconst steps = [\n  { id: \"details\", name: \"Details\", icon: MessageSquare },\n  { id: \"audience\", name: \"Audience\", icon: Users },\n  { id: \"message\", name: \"Message\", icon: Bot },\n  { id: \"schedule\", name: \"Schedule\", icon: Calendar },\n  { id: \"review\", name: \"Review\", icon: Check },\n];\n\nconst campaignDetailsSchema = z.object({\n  title: z.string().min(5, { message: \"Campaign title must be at least 5 characters.\" }),\n  description: z.string().optional(),\n  type: z.enum([\"Broadcast\", \"Scheduled\", \"Automated\"]),\n});\n\nconst campaignAudienceSchema = z.object({\n    audience: z.array(z.string()).min(1, \"Please select at least one contact.\"),\n});\n\nconst campaignMessageSchema = z.object({\n    message: z.string().min(10, \"Message must be at least 10 characters long.\"),\n});\n\nconst campaignScheduleSchema = z.object({\n    scheduleType: z.enum(['now', 'later']),\n    scheduledAtDate: z.date().optional(),\n    scheduledAtTime: z.string().optional(),\n}).refine(data => {\n    if (data.scheduleType === 'later') {\n        return !!data.scheduledAtDate && !!data.scheduledAtTime;\n    }\n    return true;\n}, {\n    message: \"Please select a date and time for scheduled sending.\",\n    path: [\"scheduledAtDate\"],\n});\n\n\ntype CampaignDetailsValues = z.infer<typeof campaignDetailsSchema>;\ntype CampaignAudienceValues = z.infer<typeof campaignAudienceSchema>;\ntype CampaignMessageValues = z.infer<typeof campaignMessageSchema>;\ntype CampaignScheduleValues = z.infer<typeof campaignScheduleSchema>;\n\n\nconst validationSchemas = [\n    campaignDetailsSchema,\n    campaignAudienceSchema,\n    campaignMessageSchema,\n    campaignScheduleSchema,\n    z.object({}) // No validation for review step\n]\n\nconst StepDetails = ({ form }: { form: any }) => (\n    <div className=\"space-y-4\">\n        <FormField\n            control={form.control}\n            name=\"title\"\n            render={({ field }) => (\n            <FormItem>\n                <FormLabel>Campaign Title</FormLabel>\n                <FormControl>\n                <Input placeholder=\"e.g., 'Back-to-School Promo'\" {...field} />\n                </FormControl>\n                <FormDescription>A public name for your campaign.</FormDescription>\n                <FormMessage />\n            </FormItem>\n            )}\n        />\n        <FormField\n            control={form.control}\n            name=\"description\"\n            render={({ field }) => (\n            <FormItem>\n                <FormLabel>Description (Internal)</FormLabel>\n                <FormControl>\n                <Textarea placeholder=\"Internal notes about this campaign...\" {...field} />\n                </FormControl>\n                <FormDescription>This will not be shown to recipients.</FormDescription>\n                <FormMessage />\n            </FormItem>\n            )}\n        />\n        <FormField\n            control={form.control}\n            name=\"type\"\n            render={({ field }) => (\n            <FormItem>\n                <FormLabel>Campaign Type</FormLabel>\n                <Select onValueChange={field.onChange} defaultValue={field.value}>\n                    <FormControl>\n                        <SelectTrigger>\n                        <SelectValue placeholder=\"Select a campaign type\" />\n                        </SelectTrigger>\n                    </FormControl>\n                    <SelectContent>\n                        <SelectItem value=\"Broadcast\">Broadcast (One-time send)</SelectItem>\n                        <SelectItem value=\"Scheduled\">Scheduled (Send at a future date)</SelectItem>\n                        <SelectItem value=\"Automated\">Automated (Trigger-based)</SelectItem>\n                    </SelectContent>\n                </Select>\n                <FormMessage />\n            </FormItem>\n            )}\n        />\n    </div>\n);\n\n\nconst StepAudience = ({ form, contacts }: { form: any, contacts: User[] }) => {\n    const [searchTerm, setSearchTerm] = React.useState(\"\");\n    \n    const filteredContacts = contacts.filter(contact => \n        contact.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        contact.email?.toLowerCase().includes(searchTerm.toLowerCase())\n    );\n\n    return (\n        <FormField\n            control={form.control}\n            name=\"audience\"\n            render={({ field }) => (\n                <FormItem className=\"h-full flex flex-col\">\n                    <FormLabel className=\"text-lg font-medium\">Select Audience</FormLabel>\n                    <FormDescription>Choose which contacts will receive this campaign.</FormDescription>\n                    <div className=\"relative pt-2\">\n                        <Search className=\"absolute left-3 top-1/2 -translate-y-1/2 h-4 w-4 text-muted-foreground\" />\n                        <Input\n                            placeholder=\"Search contacts...\"\n                            className=\"pl-9\"\n                            value={searchTerm}\n                            onChange={(e) => setSearchTerm(e.target.value)}\n                        />\n                    </div>\n                    <ScrollArea className=\"flex-1 my-4 border rounded-md\">\n                         <div className=\"p-4 space-y-2\">\n                            <div className=\"flex items-center space-x-2\">\n                                <Checkbox\n                                    id=\"select-all\"\n                                    checked={field.value?.length === filteredContacts.length && filteredContacts.length > 0}\n                                    onCheckedChange={(checked) => {\n                                        const allContactIds = filteredContacts.map(c => c.id);\n                                        field.onChange(checked ? allContactIds : []);\n                                    }}\n                                />\n                                <Label htmlFor=\"select-all\">Select all</Label>\n                            </div>\n                            <Separator />\n                            {filteredContacts.map(contact => (\n                                <div key={contact.id} className=\"flex items-center space-x-2\">\n                                     <Checkbox\n                                        id={contact.id}\n                                        checked={field.value?.includes(contact.id)}\n                                        onCheckedChange={(checked) => {\n                                            return checked\n                                            ? field.onChange([...field.value, contact.id])\n                                            : field.onChange(field.value?.filter((id: string) => id !== contact.id))\n                                        }}\n                                    />\n                                    <Label htmlFor={contact.id} className=\"flex-1 flex items-center gap-3 cursor-pointer font-normal\">\n                                        <Avatar className=\"h-8 w-8\">\n                                            <AvatarImage src={contact.avatar} alt={contact.name} />\n                                            <AvatarFallback>{contact.name.charAt(0)}</AvatarFallback>\n                                        </Avatar>\n                                        <div className=\"flex-1\">\n                                            <p>{contact.name}</p>\n                                            <p className=\"text-xs text-muted-foreground\">{contact.email}</p>\n                                        </div>\n                                    </Label>\n                                </div>\n                            ))}\n                         </div>\n                    </ScrollArea>\n                    <FormMessage />\n                </FormItem>\n            )}\n        />\n    );\n};\n\nconst StepMessage = ({ form }: { form: any }) => {\n    const [isGenerating, setIsGenerating] = React.useState(false);\n    const { toast } = useToast();\n\n    const handleGenerateMessage = async () => {\n        const title = form.getValues(\"title\");\n        if (!title) {\n            toast({\n                variant: 'destructive',\n                title: \"Title is missing\",\n                description: \"Please provide a campaign title before generating a message.\"\n            });\n            return;\n        }\n        setIsGenerating(true);\n        try {\n            const result = await generateCampaignMessage({ campaignTitle: title });\n            form.setValue(\"message\", result.message);\n        } catch (error) {\n            toast({\n                variant: 'destructive',\n                title: \"AI Generation Failed\",\n                description: \"Could not generate a message. Please try again.\"\n            })\n        }\n        setIsGenerating(false);\n    }\n    \n    return (\n        <div className=\"space-y-4\">\n             <FormField\n                control={form.control}\n                name=\"message\"\n                render={({ field }) => (\n                <FormItem>\n                    <FormLabel>Campaign Message</FormLabel>\n                    <FormControl>\n                        <Textarea placeholder=\"Write your message here or generate one with AI...\" {...field} rows={8}/>\n                    </FormControl>\n                    <FormMessage />\n                </FormItem>\n                )}\n            />\n            <Button type=\"button\" variant=\"outline\" onClick={handleGenerateMessage} disabled={isGenerating}>\n                <Sparkles className=\"mr-2 h-4 w-4\" />\n                {isGenerating ? \"Generating...\" : \"Generate with AI\"}\n            </Button>\n        </div>\n    )\n}\n\nconst StepSchedule = ({ form }: { form: any }) => {\n     return (\n        <FormField\n            control={form.control}\n            name=\"scheduleType\"\n            render={({ field }) => (\n                <FormItem className=\"space-y-3\">\n                    <FormLabel className=\"text-lg font-medium\">Schedule</FormLabel>\n                    <FormControl>\n                        <RadioGroup\n                            onValueChange={field.onChange}\n                            defaultValue={field.value}\n                            className=\"flex flex-col space-y-1\"\n                        >\n                            <FormItem className=\"flex items-center space-x-3 space-y-0\">\n                                <FormControl>\n                                    <RadioGroupItem value=\"now\" />\n                                </FormControl>\n                                <FormLabel className=\"font-normal\">Send immediately</FormLabel>\n                            </FormItem>\n                            <FormItem className=\"flex items-center space-x-3 space-y-0\">\n                                <FormControl>\n                                    <RadioGroupItem value=\"later\" />\n                                </FormControl>\n                                <FormLabel className=\"font-normal\">Schedule for later</FormLabel>\n                            </FormItem>\n                        </RadioGroup>\n                    </FormControl>\n                    <FormMessage />\n\n                     {form.watch(\"scheduleType\") === 'later' && (\n                        <div className=\"grid grid-cols-2 gap-4 pt-4\">\n                            <FormField\n                                control={form.control}\n                                name=\"scheduledAtDate\"\n                                render={({ field }) => (\n                                <FormItem className=\"flex flex-col\">\n                                    <FormLabel>Date</FormLabel>\n                                     <Popover>\n                                        <PopoverTrigger asChild>\n                                        <FormControl>\n                                            <Button\n                                            variant={\"outline\"}\n                                            className={cn(\n                                                \"w-full pl-3 text-left font-normal\",\n                                                !field.value && \"text-muted-foreground\"\n                                            )}\n                                            >\n                                            {field.value ? (\n                                                format(field.value, \"PPP\")\n                                            ) : (\n                                                <span>Pick a date</span>\n                                            )}\n                                            <CalendarIcon className=\"ml-auto h-4 w-4 opacity-50\" />\n                                            </Button>\n                                        </FormControl>\n                                        </PopoverTrigger>\n                                        <PopoverContent className=\"w-auto p-0\" align=\"start\">\n                                        <CalendarComponent\n                                            mode=\"single\"\n                                            selected={field.value}\n                                            onSelect={field.onChange}\n                                            disabled={(date) => date < new Date() || date < new Date(\"1900-01-01\")}\n                                            initialFocus\n                                        />\n                                        </PopoverContent>\n                                    </Popover>\n                                    <FormMessage />\n                                </FormItem>\n                                )}\n                            />\n                             <FormField\n                                control={form.control}\n                                name=\"scheduledAtTime\"\n                                render={({ field }) => (\n                                    <FormItem>\n                                        <FormLabel>Time</FormLabel>\n                                        <FormControl>\n                                            <Input type=\"time\" {...field} />\n                                        </FormControl>\n                                        <FormMessage />\n                                    </FormItem>\n                                )}\n                            />\n                        </div>\n                    )}\n                </FormItem>\n            )}\n        />\n    )\n}\n\nconst Stepper = ({ currentStep }: { currentStep: number }) => (\n  <nav aria-label=\"Progress\">\n    <ol role=\"list\" className=\"space-y-4 md:flex md:space-x-8 md:space-y-0\">\n      {steps.map((step, index) => (\n        <li key={step.name} className=\"md:flex-1\">\n          {index < currentStep ? (\n            <div className=\"group flex w-full flex-col border-l-4 border-primary py-2 pl-4 transition-colors md:border-l-0 md:border-t-4 md:pb-0 md:pl-0 md:pt-4\">\n              <span className=\"text-sm font-medium text-primary transition-colors \">{step.name}</span>\n            </div>\n          ) : index === currentStep ? (\n            <div\n              className=\"flex w-full flex-col border-l-4 border-primary py-2 pl-4 md:border-l-0 md:border-t-4 md:pb-0 md:pl-0 md:pt-4\"\n              aria-current=\"step\"\n            >\n              <span className=\"text-sm font-medium text-primary\">{step.name}</span>\n            </div>\n          ) : (\n            <div className=\"group flex w-full flex-col border-l-4 border-border py-2 pl-4 transition-colors md:border-l-0 md:border-t-4 md:pb-0 md:pl-0 md:pt-4\">\n              <span className=\"text-sm font-medium text-muted-foreground\">{step.name}</span>\n            </div>\n          )}\n        </li>\n      ))}\n    </ol>\n  </nav>\n)\n\n\ntype CreateCampaignSheetProps = {\n  children: React.ReactNode;\n  open: boolean;\n  onOpenChange: (open: boolean) => void;\n  onCampaignCreate: (data: Partial<Campaign> & { scheduleType?: 'now' | 'later' }) => void;\n  contacts: User[];\n};\n\nexport function CreateCampaignSheet({ children, open, onOpenChange, onCampaignCreate, contacts }: CreateCampaignSheetProps) {\n  const [currentStep, setCurrentStep] = React.useState(0);\n  \n  const form = useForm({\n    resolver: zodResolver(validationSchemas[currentStep]),\n    defaultValues: {\n      title: \"\",\n      description: \"\",\n      type: \"Broadcast\",\n      audience: [],\n      message: \"\",\n      scheduleType: \"now\",\n      scheduledAtDate: undefined,\n      scheduledAtTime: undefined,\n    },\n    mode: \"onChange\"\n  });\n\n  const goToNextStep = () => setCurrentStep(prev => Math.min(steps.length - 1, prev + 1));\n  const goToPrevStep = () => setCurrentStep(prev => Math.max(0, prev - 1));\n\n  async function processStep(data: any) {\n    if (currentStep === steps.length - 1) {\n        onCampaignCreate(form.getValues());\n    } else {\n        goToNextStep();\n    }\n  }\n\n  const renderStepContent = () => {\n    switch (currentStep) {\n        case 0:\n            return <StepDetails form={form} />;\n        case 1:\n            return <StepAudience form={form} contacts={contacts} />;\n        case 2:\n            return <StepMessage form={form} />;\n        case 3:\n            return <StepSchedule form={form} />;\n        case 4: // Review Step\n            const data = form.getValues();\n            return (\n                <div className=\"space-y-4\">\n                    <h3 className=\"text-lg font-medium\">Review Your Campaign</h3>\n                    <div className=\"space-y-2 rounded-lg border p-4\">\n                        <p><span className=\"font-semibold\">Title:</span> {data.title}</p>\n                        <p><span className=\"font-semibold\">Type:</span> {data.type}</p>\n                        <p><span className=\"font-semibold\">Audience:</span> {data.audience.length} contacts selected</p>\n                        <p><span className=\"font-semibold\">Message:</span> \"{data.message}\"</p>\n                        <p><span className=\"font-semibold\">Schedule:</span> {data.scheduleType === 'now' ? 'Send immediately' : `Scheduled for ${data.scheduledAtDate ? format(data.scheduledAtDate, 'PPP') : ''} at ${data.scheduledAtTime}`}</p>\n                    </div>\n                </div>\n            )\n        default:\n            return <div className=\"text-center p-8 text-muted-foreground\">This step is under construction.</div>;\n    }\n  };\n  \n  React.useEffect(() => {\n    if (!open) {\n        setTimeout(() => {\n            setCurrentStep(0);\n            form.reset();\n        }, 300);\n    }\n  }, [open, form]);\n\n  return (\n    <Sheet open={open} onOpenChange={onOpenChange}>\n      <SheetTrigger asChild>{children}</SheetTrigger>\n      <SheetContent className=\"w-full sm:max-w-2xl flex flex-col\">\n        <SheetHeader>\n          <SheetTitle>Create New Campaign</SheetTitle>\n          <SheetDescription>\n            Follow the steps to create and send a new bulk messaging campaign.\n          </SheetDescription>\n        </SheetHeader>\n        \n        <div className=\"py-4\">\n            <Stepper currentStep={currentStep} />\n        </div>\n        <Separator />\n        \n        <div className=\"flex-1 overflow-auto -mr-6 pr-6\">\n            <Form {...form}>\n                <form id=\"campaign-form\" onSubmit={form.handleSubmit(processStep)} className=\"space-y-8 p-1 h-full\">\n                    {renderStepContent()}\n                </form>\n            </Form>\n        </div>\n\n        <SheetFooter className=\"mt-auto pt-4\">\n            <div className=\"flex w-full justify-between\">\n                <Button variant=\"outline\" onClick={goToPrevStep} disabled={currentStep === 0}>\n                    <ArrowLeft className=\"mr-2 h-4 w-4\" /> Previous\n                </Button>\n                <Button type=\"submit\" form=\"campaign-form\">\n                    {currentStep === steps.length - 1 ? 'Finish & Create' : 'Next'} <ArrowRight className=\"ml-2 h-4 w-4\" />\n                </Button>\n            </div>\n        </SheetFooter>\n      </SheetContent>\n    </Sheet>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 6585, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/dashboard/campaign-report-dialog.tsx"],"sourcesContent":["\n\"use client\";\n\nimport * as React from \"react\";\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogDescription, DialogFooter, DialogClose } from \"@/components/ui/dialog\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { CheckCircle, Target, BarChart, Users, Mail, Send } from \"lucide-react\";\nimport type { Campaign } from \"@/types\";\nimport { Separator } from \"../ui/separator\";\nimport { Label } from \"../ui/label\";\nimport { Input } from \"../ui/input\";\nimport { useToast } from \"@/hooks/use-toast\";\n\ntype CampaignReportDialogProps = {\n  open: boolean;\n  onOpenChange: (open: boolean) => void;\n  campaign: Campaign | null;\n};\n\nexport function CampaignReportDialog({ open, onOpenChange, campaign }: CampaignReportDialogProps) {\n  const { toast } = useToast();\n  const [email, setEmail] = React.useState(\"\");\n\n  const handleSendReport = () => {\n    if (!email.includes('@')) {\n        toast({\n            variant: 'destructive',\n            title: \"Invalid Email\",\n            description: \"Please enter a valid email address.\",\n        });\n        return;\n    }\n    \n    toast({\n        title: \"Feature Not Implemented\",\n        description: `This feature is for demonstration. In a real app, an email would be sent to ${email}.`,\n    });\n    setEmail(\"\");\n    onOpenChange(false);\n  }\n  \n  if (!campaign) return null;\n\n  const reportData = [\n      { title: \"Delivery Rate\", value: `${campaign.delivery.toFixed(2)}%`, icon: CheckCircle, description: \"Messages successfully delivered.\" },\n      { title: \"Engagement Rate\", value: `${campaign.engagement.toFixed(2)}%`, icon: Target, description: \"Recipients who opened or clicked.\" },\n      { title: \"Conversion Rate\", value: `${campaign.conversion.toFixed(2.0)}%`, icon: BarChart, description: \"Recipients who took action.\" },\n      { title: \"Audience Size\", value: campaign.audience.length.toString(), icon: Users, description: \"Total recipients targeted.\" },\n  ];\n\n  return (\n    <Dialog open={open} onOpenChange={onOpenChange}>\n      <DialogContent className=\"sm:max-w-2xl\">\n        <DialogHeader>\n          <DialogTitle>Campaign Report: \"{campaign.title}\"</DialogTitle>\n          <DialogDescription>\n            Detailed performance metrics for your campaign sent on {new Date(campaign.sentAt!).toLocaleDateString()}.\n          </DialogDescription>\n        </DialogHeader>\n\n        <div className=\"space-y-6 py-4\">\n            <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\">\n                {reportData.map(item => (\n                     <Card key={item.title}>\n                        <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                            <CardTitle className=\"text-sm font-medium\">{item.title}</CardTitle>\n                            <item.icon className=\"h-4 w-4 text-muted-foreground\" />\n                        </CardHeader>\n                        <CardContent>\n                            <div className=\"text-2xl font-bold\">{item.value}</div>\n                            <p className=\"text-xs text-muted-foreground\">{item.description}</p>\n                        </CardContent>\n                    </Card>\n                ))}\n            </div>\n\n             <div>\n                <h3 className=\"text-md font-semibold mb-2\">Message Sent</h3>\n                <blockquote className=\"border-l-2 pl-6 italic text-sm text-muted-foreground\">\n                    \"{campaign.message}\"\n                </blockquote>\n            </div>\n\n            <Separator />\n            \n            <div>\n                <h3 className=\"text-md font-semibold mb-2\">Export Report</h3>\n                <div className=\"flex items-center space-x-2\">\n                    <div className=\"grid flex-1 gap-2\">\n                        <Label htmlFor=\"email\" className=\"sr-only\">Email</Label>\n                        <Input \n                            id=\"email\" \n                            type=\"email\" \n                            placeholder=\"Enter email to send report\"\n                            value={email}\n                            onChange={(e) => setEmail(e.target.value)}\n                        />\n                    </div>\n                    <Button type=\"button\" onClick={handleSendReport}>\n                        <Send className=\"mr-2 h-4 w-4\" /> Send Report\n                    </Button>\n                </div>\n            </div>\n        </div>\n\n        <DialogFooter>\n          <DialogClose asChild>\n            <Button variant=\"outline\">Close</Button>\n          </DialogClose>\n        </DialogFooter>\n      </DialogContent>\n    </Dialog>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 6924, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/dashboard/campaigns-view.tsx"],"sourcesContent":["\n\"use client\";\n\nimport * as React from \"react\";\nimport { PlusCircle, Send, BarChart, Users, CheckCircle, Target, PanelLeft } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription } from \"@/components/ui/card\";\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\";\nimport { Badge } from \"@/components/ui/badge\";\nimport type { UserProfile, Campaign, User } from \"@/types\";\nimport { CreateCampaignSheet } from \"./create-campaign-sheet\";\nimport { getCampaignsByCompany, createCampaign, getContactsByCompany } from \"@/app/actions\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { Skeleton } from \"../ui/skeleton\";\nimport { CampaignReportDialog } from \"./campaign-report-dialog\";\n\n\nconst statusVariantMap: Record<string, \"default\" | \"secondary\" | \"destructive\" | \"outline\"> = {\n    Completed: \"default\",\n    Sending: \"secondary\",\n    Scheduled: \"outline\",\n    Failed: \"destructive\",\n    Draft: \"outline\"\n};\n\ntype CampaignsViewProps = {\n  onMenuClick: () => void;\n  user: UserProfile | null;\n};\n\nexport function CampaignsView({ onMenuClick, user }: CampaignsViewProps) {\n    const [campaigns, setCampaigns] = React.useState<Campaign[]>([]);\n    const [contacts, setContacts] = React.useState<User[]>([]);\n    const [isLoading, setIsLoading] = React.useState(true);\n    const [isCreateSheetOpen, setIsCreateSheetOpen] = React.useState(false);\n    const [selectedCampaign, setSelectedCampaign] = React.useState<Campaign | null>(null);\n    const { toast } = useToast();\n\n    React.useEffect(() => {\n        async function fetchData() {\n            if (user?.companyId) {\n                setIsLoading(true);\n                const [fetchedCampaigns, fetchedContacts] = await Promise.all([\n                    getCampaignsByCompany(user.companyId),\n                    getContactsByCompany(user.companyId)\n                ]);\n                setCampaigns(fetchedCampaigns);\n                setContacts(fetchedContacts);\n                setIsLoading(false);\n            }\n        }\n        fetchData();\n    }, [user]);\n\n    const handleCreateCampaign = async (data: Partial<Campaign> & { scheduleType?: 'now' | 'later' }) => {\n        if (!user?.companyId) return;\n\n        const result = await createCampaign(data, user.companyId, user.id);\n\n        if (result.success && result.campaign) {\n            setCampaigns(prev => [result.campaign!, ...prev]);\n            toast({\n                title: \"Campaign Created Successfully\",\n                description: `Campaign \"${result.campaign.title}\" is now ${result.campaign.status.toLowerCase()}.`,\n            });\n            setIsCreateSheetOpen(false);\n        } else {\n             toast({\n                variant: 'destructive',\n                title: \"Failed to create campaign\",\n                description: result.message || \"An unexpected error occurred.\",\n            });\n        }\n    };\n\n    const overviewData = React.useMemo(() => {\n        const completedCampaigns = campaigns.filter(c => c.status === 'Completed');\n        const total = completedCampaigns.length;\n        if (total === 0) {\n            return [\n                { title: \"Campaigns Sent\", value: \"0\", icon: Send },\n                { title: \"Delivery Rate\", value: \"0%\", icon: CheckCircle },\n                { title: \"Engagement Rate\", value: \"0%\", icon: Target },\n                { title: \"Conversions\", value: \"0\", icon: BarChart },\n            ];\n        }\n        const avgDelivery = completedCampaigns.reduce((sum, c) => sum + (c.delivery || 0), 0) / total;\n        const avgEngagement = completedCampaigns.reduce((sum, c) => sum + (c.engagement || 0), 0) / total;\n        const totalConversions = completedCampaigns.reduce((sum, c) => sum + ((c.conversion/100) * c.audience.length), 0);\n\n        return [\n            { title: \"Campaigns Sent\", value: total.toString(), icon: Send },\n            { title: \"Avg. Delivery\", value: `${avgDelivery.toFixed(1)}%`, icon: CheckCircle },\n            { title: \"Avg. Engagement\", value: `${avgEngagement.toFixed(1)}%`, icon: Target },\n            { title: \"Total Conversions\", value: Math.round(totalConversions).toString(), icon: BarChart },\n        ];\n    }, [campaigns]);\n    \n    if (user?.role !== 'admin' && user?.role !== 'super_agent') {\n      return (\n          <div className=\"flex h-screen w-full flex-col bg-background text-foreground\">\n             <header className=\"flex items-start sm:items-center justify-between p-4 border-b\">\n                <div className=\"flex items-center gap-2\">\n                    <Button variant=\"ghost\" size=\"icon\" className=\"md:hidden\" onClick={onMenuClick}>\n                        <PanelLeft className=\"h-5 w-5\" />\n                        <span className=\"sr-only\">Open Menu</span>\n                    </Button>\n                    <h1 className=\"text-2xl font-bold\">Access Denied</h1>\n                </div>\n            </header>\n            <main className=\"flex-1 flex items-center justify-center p-4\">\n                <Card className=\"w-full max-w-md\">\n                    <CardHeader>\n                        <CardTitle>Permission Required</CardTitle>\n                        <CardDescription>\n                            You do not have permission to view this page. This area is restricted.\n                        </CardDescription>\n                    </CardHeader>\n                </Card>\n            </main>\n          </div>\n      )\n  }\n\n  return (\n    <div className=\"flex h-screen w-full flex-col bg-background text-foreground\">\n      <header className=\"flex items-start sm:items-center justify-between gap-4 p-4 border-b\">\n        <div className=\"flex items-center gap-2\">\n            <Button variant=\"ghost\" size=\"icon\" className=\"md:hidden\" onClick={onMenuClick}>\n                <PanelLeft className=\"h-5 w-5\" />\n                <span className=\"sr-only\">Open Menu</span>\n            </Button>\n            <h1 className=\"text-2xl font-bold\">Campaigns & Bulk Messaging</h1>\n        </div>\n        <CreateCampaignSheet\n            open={isCreateSheetOpen}\n            onOpenChange={setIsCreateSheetOpen}\n            onCampaignCreate={handleCreateCampaign}\n            contacts={contacts}\n        >\n            <Button onClick={() => setIsCreateSheetOpen(true)}>\n                <PlusCircle className=\"mr-2 h-4 w-4\" />\n                Create New Campaign\n            </Button>\n        </CreateCampaignSheet>\n      </header>\n      <main className=\"flex-1 overflow-auto p-4 space-y-4\">\n        {/* Top Section */}\n        <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\">\n            {overviewData.map(item => (\n                <Card key={item.title}>\n                    <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                        <CardTitle className=\"text-sm font-medium\">{item.title}</CardTitle>\n                        <item.icon className=\"h-4 w-4 text-muted-foreground\" />\n                    </CardHeader>\n                    <CardContent>\n                        <div className=\"text-2xl font-bold\">{item.value}</div>\n                    </CardContent>\n                </Card>\n            ))}\n        </div>\n\n        {/* Campaign List */}\n        <Card>\n            <CardHeader>\n                <CardTitle>Campaigns</CardTitle>\n                <CardDescription>View and manage all your past and upcoming campaigns.</CardDescription>\n            </CardHeader>\n            <CardContent>\n                <Table>\n                    <TableHeader>\n                        <TableRow>\n                            <TableHead>Campaign Name</TableHead>\n                            <TableHead>Date Created</TableHead>\n                            <TableHead className=\"text-center\">Audience</TableHead>\n                            <TableHead className=\"text-center\">Delivery</TableHead>\n                            <TableHead className=\"text-center\">Engagement</TableHead>\n                            <TableHead className=\"text-center\">Status</TableHead>\n                            <TableHead className=\"text-right\">Actions</TableHead>\n                        </TableRow>\n                    </TableHeader>\n                    <TableBody>\n                        {isLoading ? (\n                            Array.from({ length: 4 }).map((_, i) => (\n                                <TableRow key={i}>\n                                    <TableCell><Skeleton className=\"h-4 w-[200px]\" /></TableCell>\n                                    <TableCell><Skeleton className=\"h-4 w-[100px]\" /></TableCell>\n                                    <TableCell className=\"text-center\"><Skeleton className=\"h-4 w-8 mx-auto\" /></TableCell>\n                                    <TableCell className=\"text-center\"><Skeleton className=\"h-4 w-12 mx-auto\" /></TableCell>\n                                    <TableCell className=\"text-center\"><Skeleton className=\"h-4 w-12 mx-auto\" /></TableCell>\n                                    <TableCell className=\"text-center\"><Skeleton className=\"h-6 w-20 mx-auto\" /></TableCell>\n                                    <TableCell className=\"text-right\"><Skeleton className=\"h-8 w-24 ml-auto\" /></TableCell>\n                                </TableRow>\n                            ))\n                        ) : campaigns.map(campaign => (\n                            <TableRow key={campaign.id}>\n                                <TableCell className=\"font-medium\">{campaign.title}</TableCell>\n                                <TableCell>{new Date(campaign.createdAt).toLocaleDateString()}</TableCell>\n                                <TableCell className=\"text-center\">{campaign.audience.length}</TableCell>\n                                <TableCell className=\"text-center\">{campaign.delivery.toFixed(1)}%</TableCell>\n                                <TableCell className=\"text-center\">{campaign.engagement.toFixed(1)}%</TableCell>\n                                <TableCell className=\"text-center\">\n                                    <Badge variant={statusVariantMap[campaign.status]}>{campaign.status}</Badge>\n                                </TableCell>\n                                <TableCell className=\"text-right\">\n                                    <Button \n                                        variant=\"outline\" \n                                        size=\"sm\" \n                                        onClick={() => setSelectedCampaign(campaign)}\n                                        disabled={campaign.status === 'Draft' || campaign.status === 'Scheduled'}\n                                    >\n                                        View Report\n                                    </Button>\n                                </TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </CardContent>\n        </Card>\n      </main>\n\n       <CampaignReportDialog\n            open={!!selectedCampaign}\n            onOpenChange={(isOpen) => !isOpen && setSelectedCampaign(null)}\n            campaign={selectedCampaign}\n       />\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 7665, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/dashboard/my-performance-view.tsx"],"sourcesContent":["\n\"use client\";\n\nimport * as React from \"react\";\nimport {\n    Card,\n    CardContent,\n    CardHeader,\n    CardTitle,\n    CardDescription\n} from \"@/components/ui/card\";\nimport {\n    PanelLeft,\n    ArrowUp,\n    ArrowDown,\n    Calendar,\n    MessageSquare,\n    Clock,\n    CheckCircle,\n    Star,\n    Flame,\n    BarChart as BarChartIcon,\n    PieChart,\n    Download\n} from \"lucide-react\";\nimport type { UserProfile } from \"@/types\";\nimport { Button } from \"../ui/button\";\nimport { cn } from \"@/lib/utils\";\nimport {\n  Bar,\n  BarChart,\n  Line,\n  LineChart,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis,\n  Legend,\n  Cell\n} from \"recharts\"\nimport { ChartContainer, ChartTooltip, ChartTooltipContent } from \"@/components/ui/chart\"\nimport { Alert, AlertTitle, AlertDescription } from \"@/components/ui/alert\";\nimport { KenaAILogo } from \"../ui/kena-ai-logo\";\n\nconst kpiData = [\n  {\n    title: \"Conversations Handled\",\n    value: \"52\",\n    description: \"conversations today\",\n    trend: \"+12%\",\n    trendDirection: \"up\" as const,\n    icon: MessageSquare,\n  },\n  {\n    title: \"Avg. Response Time\",\n    value: \"12s\",\n    description: \"on average ⏱️\",\n    trend: \"-3.5%\",\n    trendDirection: \"down\" as const,\n    icon: Clock,\n  },\n  {\n    title: \"Resolution Rate\",\n    value: \"88%\",\n    description: \"conversations resolved ✅\",\n    trend: \"+2.1%\",\n    trendDirection: \"up\" as const,\n    icon: CheckCircle,\n  },\n  {\n    title: \"CSAT Score\",\n    value: \"4.6/5\",\n    description: \"from 15 ratings ⭐\",\n    trend: \"+0.2\",\n    trendDirection: \"up\" as const,\n    icon: Star,\n  },\n];\n\nconst conversationData = [\n  { date: \"Mon\", conversations: 8 },\n  { date: \"Tue\", conversations: 12 },\n  { date: \"Wed\", conversations: 7 },\n  { date: \"Thu\", conversations: 15 },\n  { date: \"Fri\", conversations: 11 },\n  { date: \"Sat\", conversations: 5 },\n  { date: \"Sun\", conversations: 9 },\n];\n\nconst responseTimeByChannelData = [\n    { channel: \"WhatsApp\", time: 10, fill: 'hsl(var(--chart-1))' },\n    { channel: \"Facebook\", time: 15, fill: 'hsl(var(--chart-2))' },\n    { channel: \"Instagram\", time: 8, fill: 'hsl(var(--chart-3))' },\n    { channel: \"Email\", time: 35, fill: 'hsl(var(--chart-4))' },\n];\n\n\ntype MyPerformanceViewProps = {\n  onMenuClick: () => void;\n  user: UserProfile | null;\n};\n\nexport function MyPerformanceView({ onMenuClick, user }: MyPerformanceViewProps) {\n\n  return (\n    <div className=\"flex h-screen w-full flex-col bg-background text-foreground\">\n      <header className=\"flex flex-col md:flex-row items-start md:items-center justify-between gap-4 p-4 border-b\">\n        <div className=\"flex items-center gap-4\">\n            <Button variant=\"ghost\" size=\"icon\" className=\"md:hidden\" onClick={onMenuClick}>\n                <PanelLeft className=\"h-5 w-5\" />\n                <span className=\"sr-only\">Open Menu</span>\n            </Button>\n            <div className=\"flex-1\">\n                <h1 className=\"text-xl sm:text-2xl font-bold\">Hi, {user?.name.split(\" \")[0]} 👋 Here’s your performance</h1>\n                <p className=\"text-sm text-muted-foreground\">Welcome to your personal performance dashboard.</p>\n            </div>\n        </div>\n        <div className=\"flex items-center gap-2 w-full md:w-auto\">\n             <Button variant=\"outline\" size=\"sm\">Today</Button>\n             <Button variant=\"ghost\" size=\"sm\">This Week</Button>\n             <Button variant=\"ghost\" size=\"sm\">This Month</Button>\n        </div>\n      </header>\n      <main className=\"flex-1 overflow-auto p-4 md:p-6 lg:p-8 space-y-8\">\n        \n        <Alert className=\"bg-accent/20 border-accent/50 text-accent-foreground\">\n            <Flame className=\"h-4 w-4\" />\n            <AlertTitle className=\"font-semibold\">You're on fire! 🔥</AlertTitle>\n            <AlertDescription>\n                You're in the top 3 fastest responders this week! Keep up the great work.\n            </AlertDescription>\n        </Alert>\n        \n        {/* Section 1: Key Metrics */}\n        <div className=\"space-y-4\">\n            <h2 className=\"text-xl font-bold\">Today's Stats</h2>\n            <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\">\n                {kpiData.map((kpi) => (\n                <Card key={kpi.title}>\n                    <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                    <CardTitle className=\"text-sm font-medium\">{kpi.title}</CardTitle>\n                    <kpi.icon className=\"h-4 w-4 text-muted-foreground\" />\n                    </CardHeader>\n                    <CardContent>\n                        <div className=\"text-2xl font-bold\">{kpi.value}</div>\n                        <p className=\"text-xs text-muted-foreground\">{kpi.description}</p>\n                         <p className={cn(\"text-xs mt-2 flex items-center\", kpi.trendDirection === 'up' ? \"text-emerald-500\" : \"text-red-500\")}>\n                            {kpi.trendDirection === 'up' ? <ArrowUp className=\"h-3 w-3 mr-1\" /> : <ArrowDown className=\"h-3 w-3 mr-1\" />}\n                            {kpi.trend} from yesterday\n                        </p>\n                    </CardContent>\n                </Card>\n                ))}\n            </div>\n        </div>\n\n        {/* Section 2: Performance Insights */}\n        <div className=\"space-y-4\">\n             <h2 className=\"text-xl font-bold\">Performance Insights</h2>\n             <div className=\"grid grid-cols-1 lg:grid-cols-5 gap-4\">\n                <Card className=\"lg:col-span-3\">\n                    <CardHeader>\n                        <CardTitle>Conversation Volume</CardTitle>\n                        <CardDescription>Your conversation volume over the last 7 days.</CardDescription>\n                    </CardHeader>\n                    <CardContent>\n                        <ChartContainer config={{}} className=\"h-[250px] w-full\">\n                            <LineChart data={conversationData} margin={{ top: 5, right: 20, left: -10, bottom: 5 }}>\n                            <XAxis dataKey=\"date\" tickLine={false} axisLine={false} />\n                            <YAxis tickLine={false} axisLine={false} />\n                            <Tooltip content={<ChartTooltipContent />} />\n                            <Line type=\"monotone\" dataKey=\"conversations\" stroke=\"hsl(var(--primary))\" strokeWidth={2} dot={{ r: 4, fill: \"hsl(var(--primary))\" }} />\n                        </LineChart>\n                    </ChartContainer>\n                    </CardContent>\n                </Card>\n                <Card className=\"lg:col-span-2\">\n                    <CardHeader>\n                        <CardTitle>Response Speed by Channel</CardTitle>\n                        <CardDescription>Average response time (seconds).</CardDescription>\n                    </CardHeader>\n                     <CardContent>\n                           <ChartContainer config={{}} className=\"h-[250px] w-full\">\n                                <ResponsiveContainer>\n                                    <BarChart data={responseTimeByChannelData} layout=\"vertical\" margin={{ left: 10, right: 10 }}>\n                                        <XAxis type=\"number\" hide />\n                                        <YAxis dataKey=\"channel\" type=\"category\" tickLine={false} axisLine={false} tickMargin={10} />\n                                        <Tooltip cursor={false} content={<ChartTooltipContent indicator=\"dot\" />} />\n                                        <Bar dataKey=\"time\" radius={5}>\n                                            {responseTimeByChannelData.map((entry) => (\n                                                <Cell key={`cell-${entry.channel}`} fill={entry.fill} />\n                                            ))}\n                                        </Bar>\n                                    </BarChart>\n                                </ResponsiveContainer>\n                            </ChartContainer>\n                        </CardContent>\n                </Card>\n             </div>\n        </div>\n\n        {/* Section 3: Leaderboard and Feedback */}\n         <div className=\"space-y-4\">\n             <h2 className=\"text-xl font-bold\">Team & Feedback</h2>\n             <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4\">\n                <Card>\n                    <CardHeader>\n                        <CardTitle>Team Leaderboard</CardTitle>\n                    </CardHeader>\n                    <CardContent>\n                         <p className=\"text-center text-sm text-muted-foreground p-8\">Leaderboard coming soon!</p>\n                    </CardContent>\n                </Card>\n                 <Card>\n                    <CardHeader>\n                        <CardTitle>Recent Customer Feedback</CardTitle>\n                    </CardHeader>\n                    <CardContent>\n                         <p className=\"text-center text-sm text-muted-foreground p-8\">Customer feedback section coming soon!</p>\n                    </CardContent>\n                </Card>\n             </div>\n         </div>\n\n\n      </main>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 8400, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/dashboard/auth-form.tsx"],"sourcesContent":["\n\"use client\";\n\nimport * as React from \"react\";\nimport { z } from \"zod\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormMessage,\n} from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\nimport { Alert, AlertDescription, AlertTitle } from \"../ui/alert\";\nimport { Mail } from \"lucide-react\";\nimport { KenaAILogo } from \"../ui/kena-ai-logo\";\nimport { handleSignUp } from \"@/app/actions\";\nimport { useToast } from \"@/hooks/use-toast\";\n\nconst signupSchema = z.object({\n  firstName: z.string().min(1, { message: \"First name is required\" }),\n  lastName: z.string().min(1, { message: \"Last name is required\" }),\n  email: z.string().email({ message: \"Please enter a valid email.\" }),\n  password: z.string().min(8, { message: \"Password must be at least 8 characters.\" }),\n});\n\nconst loginSchema = z.object({\n  email: z.string().email({ message: \"Please enter a valid email.\" }),\n  password: z.string().min(1, { message: \"Password is required.\" }),\n});\n\ntype SignUpFormValues = z.infer<typeof signupSchema>;\ntype LoginFormValues = z.infer<typeof loginSchema>;\n\ntype AuthFormProps = {\n    onLogin: (email: string, password_unused: string) => Promise<{success: boolean, message?: string}>;\n    onSignUp: (name: string, email: string, password_unused: string) => Promise<{success: boolean, message?: string}>;\n};\n\nconst GoogleIcon = () => (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 48 48\" width=\"24px\" height=\"24px\">\n        <path fill=\"#FFC107\" d=\"M43.611,20.083H42V20H24v8h11.303c-1.649,4.657-6.08,8-11.303,8c-6.627,0-12-5.373-12-12s5.373-12,12-12c3.059,0,5.842,1.154,7.961,3.039l5.657-5.657C34.046,6.053,29.268,4,24,4C12.955,4,4,12.955,4,24s8.955,20,20,20s20-8.955,20-20C44,22.659,43.862,21.35,43.611,20.083z\"/>\n        <path fill=\"#FF3D00\" d=\"M6.306,14.691l6.571,4.819C14.655,15.108,18.961,12,24,12c3.059,0,5.842,1.154,7.961,3.039l5.657-5.657C34.046,6.053,29.268,4,24,4C16.318,4,9.656,8.337,6.306,14.691z\"/>\n        <path fill=\"#4CAF50\" d=\"M24,44c5.166,0,9.86-1.977,13.409-5.192l-6.19-5.238C29.211,35.091,26.715,36,24,36c-5.222,0-9.619-3.317-11.283-7.946l-6.522,5.025C9.505,39.556,16.227,44,24,44z\"/>\n        <path fill=\"#1976D2\" d=\"M43.611,20.083H42V20H24v8h11.303c-0.792,2.237-2.231,4.166-4.087,5.574l6.19,5.238C41.38,34.463,44,29.598,44,24C44,22.659,43.862,21.35,43.611,20.083z\"/>\n    </svg>\n);\n\nexport function AuthForm({ onLogin, onSignUp }: AuthFormProps) {\n  const [authMode, setAuthMode] = React.useState<'signin' | 'signup'>('signin');\n  const [error, setError] = React.useState<string | null>(null);\n  const { toast } = useToast();\n\n  const form = useForm<SignUpFormValues | LoginFormValues>({\n    resolver: zodResolver(authMode === 'signup' ? signupSchema : loginSchema),\n    defaultValues: {\n      email: \"\",\n      password: \"\",\n      firstName: \"\",\n      lastName: \"\",\n    },\n  });\n\n  async function onSubmit(data: SignUpFormValues | LoginFormValues) {\n    setError(null);\n    if (authMode === 'signin') {\n        const result = await onLogin((data as LoginFormValues).email, (data as LoginFormValues).password);\n        if (!result.success) {\n            setError(result.message || \"Invalid email or password. Please try again.\");\n            form.setValue(\"password\", \"\");\n        } else {\n            form.reset();\n        }\n    } else {\n        const signupData = data as SignUpFormValues;\n        const result = await onSignUp(`${signupData.firstName} ${signupData.lastName}`, signupData.email, signupData.password);\n        if (result.success) {\n            // Toast is now handled in page.tsx after successful user state update\n            setAuthMode('signin');\n            form.reset();\n        } else {\n            setError(result.message || \"An unexpected error occurred during sign up.\");\n        }\n    }\n  }\n\n  return (\n    <div className=\"relative w-full max-w-md space-y-6 animate-in fade-in-50 duration-500 bg-card p-8 rounded-2xl border z-10\">\n        <div className=\"flex flex-col items-center space-y-2 text-center\">\n            <KenaAILogo className=\"h-10\" />\n            <h1 className=\"text-2xl font-bold\">{authMode === 'signin' ? 'Welcome Back!' : 'Create an Account'}</h1>\n            <p className=\"text-muted-foreground text-sm\">\n                {authMode === 'signin' ? 'Sign in to access your dashboard.' : 'Get started with KenaAI.'}\n            </p>\n        </div>\n\n        <div className=\"flex justify-center gap-2\">\n            <Button variant={authMode === 'signin' ? 'secondary' : 'ghost'} size=\"sm\" className=\"rounded-full transition-all duration-200 ease-in-out hover:scale-105\" onClick={() => setAuthMode('signin')}>Sign in</Button>\n            <Button variant={authMode === 'signup' ? 'secondary' : 'ghost'} size=\"sm\" className=\"rounded-full transition-all duration-200 ease-in-out hover:scale-105\" onClick={() => setAuthMode('signup')}>Sign up</Button>\n        </div>\n        \n        <div className=\"text-left space-y-4\">\n            {error && (\n                <Alert variant=\"destructive\">\n                    <AlertDescription>{error}</AlertDescription>\n                </Alert>\n            )}\n            \n            <Form {...form} key={authMode}>\n            <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-4\">\n                \n                {authMode === 'signup' && (\n                    <div className=\"grid grid-cols-2 gap-4\">\n                        <FormField\n                            control={form.control}\n                            name=\"firstName\"\n                            render={({ field }) => (\n                                <FormItem>\n                                <FormControl>\n                                    <Input\n                                        placeholder=\"First name\"\n                                        {...field}\n                                    />\n                                </FormControl>\n                                <FormMessage />\n                                </FormItem>\n                            )}\n                        />\n                        <FormField\n                            control={form.control}\n                            name=\"lastName\"\n                            render={({ field }) => (\n                                <FormItem>\n                                <FormControl>\n                                    <Input\n                                        placeholder=\"Last name\"\n                                        {...field}\n                                    />\n                                </FormControl>\n                                <FormMessage />\n                                </FormItem>\n                            )}\n                        />\n                    </div>\n                )}\n\n                <FormField\n                    control={form.control}\n                    name=\"email\"\n                    render={({ field }) => (\n                        <FormItem>\n                        <div className=\"relative\">\n                            <Mail className=\"absolute left-3 top-1/2 -translate-y-1/2 h-4 w-4 text-muted-foreground\" />\n                            <FormControl>\n                                <Input\n                                    type=\"email\"\n                                    placeholder=\"Enter your email\"\n                                    className=\"pl-9\"\n                                    {...field}\n                                />\n                            </FormControl>\n                        </div>\n                        <FormMessage />\n                        </FormItem>\n                    )}\n                />\n                <FormField\n                    control={form.control}\n                    name=\"password\"\n                    render={({ field }) => (\n                        <FormItem>\n                        <FormControl>\n                            <Input \n                                type=\"password\" \n                                placeholder={authMode === 'signin' ? 'Enter your password' : 'Create a password'}\n                                {...field} \n                            />\n                        </FormControl>\n                        <FormMessage />\n                        </FormItem>\n                    )}\n                />\n\n                <Button type=\"submit\" className=\"w-full bg-primary text-primary-foreground hover:bg-primary/90 shadow-[0_4px_14px_0_hsl(var(--primary)/40%)] hover:shadow-[0_6px_20px_hsl(var(--primary)/30%)]\" size=\"lg\" disabled={form.formState.isSubmitting}>\n                    {form.formState.isSubmitting \n                        ? 'Processing...' \n                        : (authMode === 'signin' ? 'Sign in' : 'Create an account')\n                    }\n                </Button>\n            </form>\n            </Form>\n        </div>\n\n        <div>\n            <div className=\"relative my-6\">\n                <div className=\"absolute inset-0 flex items-center\">\n                    <span className=\"w-full border-t\"></span>\n                </div>\n                <div className=\"relative flex justify-center text-xs uppercase\">\n                    <span className=\"bg-card px-2 text-muted-foreground\">Or {authMode === 'signin' ? 'sign in' : 'sign up'} with</span>\n                </div>\n            </div>\n\n            <div className=\"grid gap-4\">\n                 <Button variant=\"outline\" className=\"w-full\">\n                    <GoogleIcon />\n                    Google\n                </Button>\n            </div>\n        </div>\n        \n        {authMode === 'signup' && (\n            <p className=\"px-8 text-center text-xs text-muted-foreground\">\n                By creating an account, you agree to our{\" \"}\n                <a\n                href=\"#\"\n                className=\"underline underline-offset-4 hover:text-primary\"\n                >\n                Terms & Service\n                </a>\n                .\n            </p>\n        )}\n    </div>\n  );\n}\n\n    \n"],"names":[],"mappings":"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","debugId":null}}]
}