{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/intelligent-chat-summary.ts"],"sourcesContent":["'use server';\n\n/**\n * @fileOverview This file defines a Genkit flow for summarizing long chat threads using AI.\n *\n * The flow takes a chat thread as input and returns a concise summary of the conversation's key points.\n *\n * @interface IntelligentChatSummaryInput - Defines the input schema for the intelligentChatSummary function.\n * @interface IntelligentChatSummaryOutput - Defines the output schema for the intelligentChatSummary function.\n * @function intelligentChatSummary - A wrapper function that calls the intelligentChatSummaryFlow with the input and returns the output.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst IntelligentChatSummaryInputSchema = z.object({\n  chatThread: z\n    .string()\n    .describe('The complete chat thread to be summarized.'),\n});\n\nexport type IntelligentChatSummaryInput = z.infer<\n  typeof IntelligentChatSummaryInputSchema\n>;\n\nconst IntelligentChatSummaryOutputSchema = z.object({\n  summary: z.string().describe('A concise summary of the chat thread.'),\n});\n\nexport type IntelligentChatSummaryOutput = z.infer<\n  typeof IntelligentChatSummaryOutputSchema\n>;\n\nexport async function intelligentChatSummary(\n  input: IntelligentChatSummaryInput\n): Promise<IntelligentChatSummaryOutput> {\n  return intelligentChatSummaryFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'intelligentChatSummaryPrompt',\n  input: {schema: IntelligentChatSummaryInputSchema},\n  output: {schema: IntelligentChatSummaryOutputSchema},\n  prompt: `You are an AI expert specializing in summarizing chat threads.\n\n  Please provide a concise summary of the key points in the following chat thread:\n  \\\"{{{chatThread}}}\\\".\n  The summary should be no more than 200 words.\n  `,\n});\n\nconst intelligentChatSummaryFlow = ai.defineFlow(\n  {\n    name: 'intelligentChatSummaryFlow',\n    inputSchema: IntelligentChatSummaryInputSchema,\n    outputSchema: IntelligentChatSummaryOutputSchema,\n  },\n  async input => {\n    const {output} = await prompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":";;;;;;IAiCsB,yBAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/chat-prioritization.ts"],"sourcesContent":["'use server';\n\n/**\n * @fileOverview This file defines a Genkit flow for prioritizing chats based on sentiment.\n *\n * - chatPrioritization - A function that prioritizes chats based on sentiment.\n * - ChatPrioritizationInput - The input type for the chatPrioritization function.\n * - ChatPrioritizationOutput - The return type for the chatPrioritization function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst ChatPrioritizationInputSchema = z.object({\n  chatText: z.string().describe('The text content of the chat message.'),\n});\nexport type ChatPrioritizationInput = z.infer<typeof ChatPrioritizationInputSchema>;\n\nconst ChatPrioritizationOutputSchema = z.object({\n  priority: z\n    .enum(['urgent', 'high', 'normal', 'low'])\n    .describe('The priority level of the chat based on sentiment.'),\n  sentimentAnalysis: z\n    .string()\n    .describe('The overall sentiment analysis of the chat message.'),\n});\nexport type ChatPrioritizationOutput = z.infer<typeof ChatPrioritizationOutputSchema>;\n\nexport async function chatPrioritization(input: ChatPrioritizationInput): Promise<ChatPrioritizationOutput> {\n  return chatPrioritizationFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'chatPrioritizationPrompt',\n  input: {schema: ChatPrioritizationInputSchema},\n  output: {schema: ChatPrioritizationOutputSchema},\n  prompt: `You are an AI assistant that prioritizes chats based on their urgency and sentiment.\\nAnalyze the following chat message and determine its priority level (urgent, high, normal, low) and overall sentiment.\\n\\nChat Message: {{{chatText}}}\\n\\nProvide your analysis in JSON format.`,\n});\n\nconst chatPrioritizationFlow = ai.defineFlow(\n  {\n    name: 'chatPrioritizationFlow',\n    inputSchema: ChatPrioritizationInputSchema,\n    outputSchema: ChatPrioritizationOutputSchema,\n  },\n  async input => {\n    const {output} = await prompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":";;;;;;IA4BsB,qBAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/hooks/use-mobile.tsx"],"sourcesContent":["import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n"],"names":[],"mappings":";;;AAAA;;;AAEA,MAAM,oBAAoB;AAEnB,SAAS;;IACd,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAc,AAAD,EAAuB;IAEpE,CAAA,GAAA,6JAAA,CAAA,YAAe,AAAD;iCAAE;YACd,MAAM,MAAM,OAAO,UAAU,CAAC,CAAC,YAAY,EAAE,oBAAoB,EAAE,GAAG,CAAC;YACvE,MAAM;kDAAW;oBACf,YAAY,OAAO,UAAU,GAAG;gBAClC;;YACA,IAAI,gBAAgB,CAAC,UAAU;YAC/B,YAAY,OAAO,UAAU,GAAG;YAChC;yCAAO,IAAM,IAAI,mBAAmB,CAAC,UAAU;;QACjD;gCAAG,EAAE;IAEL,OAAO,CAAC,CAAC;AACX;GAdgB","debugId":null}},
    {"offset": {"line": 76, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/hooks/use-theme.ts"],"sourcesContent":["\n\"use client\"\n\nimport { useContext } from \"react\"\nimport {\n  ThemeContext,\n  type ThemeContextType,\n} from \"@/components/ui/theme-provider\"\n\nexport const useTheme = (): ThemeContextType => {\n  const context = useContext(ThemeContext)\n  if (context === undefined) {\n    throw new Error(\"useTheme must be used within a ThemeProvider\")\n  }\n  return context\n}\n"],"names":[],"mappings":";;;AAGA;AACA;;AAHA;;;AAQO,MAAM,WAAW;;IACtB,MAAM,UAAU,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EAAE,gJAAA,CAAA,eAAY;IACvC,IAAI,YAAY,WAAW;QACzB,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT;GANa","debugId":null}},
    {"offset": {"line": 103, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/mock-data.ts"],"sourcesContent":["\nimport type { Agent, Chat, User, AgentPerformance } from \"@/types\";\n\nexport const mockAdminUser: Agent = { id: '1', name: \"Samuel Byalugaba\", avatar: \"https://picsum.photos/seed/sam/100/100\", email: \"samuel.b@example.com\", phone: \"+1-555-0201\", role: \"admin\", password: \"password\" };\n\nexport const mockAgents: Agent[] = [\n    mockAdminUser,\n    { id: '2', name: \"Kelvin Malisa\", avatar: \"https://picsum.photos/seed/kelvin/100/100\", email: \"kelvin.m@example.com\", phone: \"+1-555-0202\", role: \"admin\", password: \"password\" },\n    { id: '3', name: \"Sylvester Mayaya\", avatar: \"https://picsum.photos/seed/sly/100/100\", email: \"sylvester.m@example.com\", phone: \"+1-555-0203\", role: \"super_agent\", password: \"password\" },\n    { id: '4', name: \"Linaliz Ready\", avatar: \"https://picsum.photos/seed/linaliz/100/100\", email: \"linaliz.r@example.com\", phone: \"+1-555-0204\", role: \"agent\", password: \"password\" },\n];\n\nexport const mockAgentPerformance: AgentPerformance[] = [\n    { rank: 1, agent: mockAgents[0], conversations: 125, avgResponseTime: \"1m 30s\", resolutionRate: 95 },\n    { rank: 2, agent: mockAgents[1], conversations: 110, avgResponseTime: \"1m 45s\", resolutionRate: 92 },\n    { rank: 3, agent: mockAgents[2], conversations: 98, avgResponseTime: \"2m 05s\", resolutionRate: 88 },\n    { rank: 4, agent: { id: '5', name: \"New Agent\", avatar: \"https://picsum.photos/seed/new/100/100\", email: \"new.a@example.com\", phone: \"+1-555-0204\", role: \"agent\", password: \"password\" }, conversations: 85, avgResponseTime: \"2m 15s\", resolutionRate: 85 },\n]\n\nexport const mockUsers: User[] = [\n  { id: 'user1', name: \"Kelvin\", avatar: \"https://picsum.photos/seed/user-kelvin/100/100\", email: \"kelvin@example.com\", phone: \"+1-555-0101\", assignedAgentId: '3' },\n  { id: 'user2', name: \"Sylvester\", avatar: \"https://picsum.photos/seed/user-sly/100/100\", email: \"sylvester@example.com\", phone: \"+1-555-0102\" },\n  { id: 'user3', name: \"Linaliz\", avatar: \"https://picsum.photos/seed/user-linaliz/100/100\", email: \"linaliz@example.com\", phone: \"+1-555-0103\", assignedAgentId: '4' },\n  { id: 'user4', name: \"Glory\", avatar: \"https://picsum.photos/seed/user-glory/100/100\", email: \"glory@example.com\", phone: \"+1-555-0104\" },\n  { id: 'user5', name: \"Alice\", avatar: \"https://picsum.photos/seed/user-alice/100/100\", email: \"alice@example.com\", phone: \"+1-555-0105\", assignedAgentId: '3' },\n  { id: 'user6', name: \"Bob\", avatar: \"https://picsum.photos/seed/user-bob/100/100\", email: \"bob@example.com\", phone: \"+1-555-0106\" },\n  { id: 'user7', name: \"Charlie\", avatar: \"https://picsum.photos/seed/user-charlie/100/100\", email: \"charlie@example.com\", phone: \"+1-555-0107\" },\n  { id: 'user8', name: \"Diana\", avatar: \"https://picsum.photos/seed/user-diana/100/100\", email: \"diana@example.com\", phone: \"+1-555-0108\", assignedAgentId: '1' },\n];\n\nexport const mockChats: Chat[] = [\n  {\n    id: \"1\",\n    user: mockUsers[0],\n    channel: 'Webchat',\n    lastMessage: \"Absolutely 🎨 We provide ful...\",\n    timestamp: \"10:41 AM\",\n    unreadCount: 0,\n    priority: \"urgent\",\n    isChatbotActive: true,\n    messages: [\n      { id: \"m1\", sender: mockUsers[0], text: \"Hello 👋 What services do you offer?\", timestamp: \"10:38 AM\" },\n      { id: \"m2\", sender: \"me\", text: \"Hi Kelvin! 🚀 We offer web app development, mobile app solutions, and AI-powered chatbots.\", timestamp: \"10:39 AM\" },\n      { id: \"m3\", sender: mockUsers[0], text: \"Nice! Do you also handle design?\", timestamp: \"10:40 AM\" },\n      { id: \"m4\", sender: \"me\", text: \"Absolutely 🎨 We provide full-stack design: UI/UX, branding, and even responsive front-end with React.\", timestamp: \"10:41 AM\" },\n    ],\n  },\n  {\n    id: \"2\",\n    user: mockUsers[1],\n    channel: 'WhatsApp',\n    lastMessage: \"Sure thing! 💡 I’ll schedule...\",\n    timestamp: \"9:20 AM\",\n    unreadCount: 0,\n    priority: \"low\",\n    isChatbotActive: false,\n    messages: [\n      { id: \"m1\", sender: mockUsers[1], text: \"Hi there 👋 Can you help me set up an online store?\", timestamp: \"09:15 AM\" },\n      { id: \"m2\", sender: \"me\", text: \"Hello Sylvester! 🌟 Yes, we specialize in e-commerce platforms with secure payments and inventory management.\", timestamp: \"09:16 AM\" },\n      { id: \"m3\", sender: mockUsers[1], text: \"That sounds great! Do you also integrate delivery tracking?\", timestamp: \"09:17 AM\" },\n      { id: \"m4\", sender: \"me\", text: \"Absolutely 🚚 We can integrate real-time tracking and automated notifications for your customers.\", timestamp: \"09:18 AM\" },\n      { id: \"m5\", sender: mockUsers[1], text: \"Perfect 🙌 I’d love a demo of how it works.\", timestamp: \"09:19 AM\" },\n      { id: \"m6\", sender: \"me\", text: \"Sure thing! 💡 I’ll schedule a quick demo for you this afternoon.\", timestamp: \"09:20 AM\" }\n    ],\n  },\n  {\n    id: \"3\",\n    user: mockUsers[2],\n    channel: 'Instagram',\n    lastMessage: \"Anytime, Linaliz! Let me k...\",\n    timestamp: \"Yesterday\",\n    unreadCount: 0,\n    priority: \"normal\",\n    isChatbotActive: true,\n    messages: [\n      { id: \"m1\", sender: mockUsers[2], text: \"Hello 👋 Could you tell me your business hours?\", timestamp: \"Yesterday\" },\n      { id: \"m2\", sender: \"me\", text: \"Hi Linaliz! 🌸 Yes, we’re open Monday to Friday, from 9:00 AM to 6:00 PM.\", timestamp: \"11:06 AM\" },\n      { id: \"m3\", sender: mockUsers[2], text: \"Great, are you available on weekends too?\", timestamp: \"Yesterday\" },\n      { id: \"m4\", sender: \"me\", text: \"On Saturdays we’re open from 10:00 AM to 2:00 PM ⏰. Sundays we’re closed, but support is still available online.\", timestamp: \"Yesterday\" },\n      { id: \"m5\", sender: mockUsers[2], text: \"Perfect, thanks for clarifying 🙌\", timestamp: \"Yesterday\" },\n      { id: \"m6\", sender: \"me\", text: \"Anytime, Linaliz! Let me know if you’d like me to book you a slot during business hours.\", timestamp: \"Yesterday\" }\n    ],\n  },\n  {\n    id: \"4\",\n    user: mockUsers[3],\n    channel: 'Facebook',\n    lastMessage: \"My order hasn't arri...\",\n    timestamp: \"Yesterday\",\n    unreadCount: 1,\n    priority: \"high\",\n    isChatbotActive: false,\n    messages: [\n      { id: \"m1\", sender: mockUsers[3], text: \"Hi, I placed an order three weeks ago but it still hasn’t arrived 😟\", timestamp: \"02:15 PM\" },\n      { id: \"m2\", sender: \"me\", text: \"Hello Glory! 🤖 I’m checking your order details. Please provide your order number.\", timestamp: \"02:16 PM\" },\n      { id: \"m3\", sender: mockUsers[3], text: \"Sure, it’s #ORD4582\", timestamp: \"02:17 PM\" },\n      { id: \"m4\", sender: \"me\", text: \"Thanks! 🔍 This looks like it may need special assistance. Transferring you to a human support agent...\", timestamp: \"02:18 PM\" },\n      { id: \"m5\", sender: \"me\", text: \"Hi Glory, this is Sylvester from support 👋 I’ll personally look into your order.\", timestamp: \"02:19 PM\" },\n      { id: \"m6\", sender: \"me\", text: \"I see your package was delayed at the courier’s end 🚚. I’ll escalate this and request priority shipping.\", timestamp: \"02:20 PM\" },\n      { id: \"m7\", sender: mockUsers[3], text: \"Okay, I really hope it arrives soon. I’ve been waiting a long time.\", timestamp: \"02:21 PM\" },\n    ]\n  },\n  {\n    id: \"5\",\n    user: mockUsers[4],\n    channel: 'Webchat',\n    lastMessage: \"Yes, we have a student discount.\",\n    timestamp: \"2 days ago\",\n    unreadCount: 0,\n    priority: \"low\",\n    isChatbotActive: false,\n    messages: [\n       { id: \"m1\", sender: mockUsers[4], text: \"Do you offer student discounts?\", timestamp: \"2 days ago\" },\n       { id: \"m2\", sender: \"me\", text: \"Yes, we have a student discount.\", timestamp: \"2 days ago\" },\n    ],\n  },\n  {\n    id: \"6\",\n    user: mockUsers[5],\n    channel: 'WhatsApp',\n    lastMessage: \"Can I change my delivery address?\",\n    timestamp: \"2 days ago\",\n    unreadCount: 2,\n    priority: \"normal\",\n    isChatbotActive: false,\n    messages: [\n        { id: \"m1\", sender: mockUsers[5], text: \"Can I change my delivery address?\", timestamp: \"2 days ago\" },\n    ],\n  },\n  {\n    id: \"7\",\n    user: mockUsers[6],\n    channel: 'Instagram',\n    lastMessage: \"What's your return policy?\",\n    timestamp: \"3 days ago\",\n    unreadCount: 0,\n    priority: \"normal\",\n    isChatbotActive: true,\n    messages: [\n      { id: \"m1\", sender: mockUsers[6], text: \"What's your return policy?\", timestamp: \"3 days ago\" },\n      { id: \"m2\", sender: \"me\", text: \"You can return any item within 30 days of purchase.\", timestamp: \"3 days ago\" },\n    ],\n  },\n  {\n    id: \"8\",\n    user: mockUsers[7],\n    channel: 'Facebook',\n    lastMessage: \"The app is crashing on startup.\",\n    timestamp: \"4 days ago\",\n    unreadCount: 0,\n    priority: \"urgent\",\n    isChatbotActive: false,\n    messages: [\n      { id: \"m1\", sender: mockUsers[7], text: \"The app is crashing on startup.\", timestamp: \"4 days ago\" },\n      { id: \"m2\", sender: \"me\", text: \"We're sorry to hear that. Could you tell me which device you are using?\", timestamp: \"4 days ago\" },\n    ],\n  },\n];\n\n    "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 536, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/page.tsx"],"sourcesContent":["\n\"use client\";\n\nimport * as React from \"react\";\nimport { ChatLayout } from \"@/components/dashboard/chat-layout\";\nimport { VerticalNav } from \"@/components/dashboard/vertical-nav\";\nimport { ContactsView } from \"@/components/dashboard/contacts-view\";\nimport { AgentsView } from \"@/components/dashboard/agents-view\";\nimport { DashboardView } from \"@/components/dashboard/dashboard-view\";\nimport type { Agent, UserProfile } from \"@/types\";\nimport { AnnouncementsView } from \"@/components/dashboard/announcements-view\";\nimport { LoginDialog } from \"@/components/dashboard/login-dialog\";\nimport { mockAgents } from \"@/lib/mock-data\";\nimport { Card, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { PanelLeft } from \"lucide-react\";\nimport { SettingsDialog } from \"@/components/dashboard/settings-dialog\";\nimport { ThemeProvider } from \"@/components/ui/theme-provider\";\nimport { CampaignsView } from \"@/components/dashboard/campaigns-view\";\n\nexport type View = \"Chat\" | \"Contacts\" | \"Agents\" | \"Dashboard\" | \"Announcements\" | \"History\" | \"Payments\" | \"Settings\" | \"System Settings\" | \"Campaigns\" | \"My Performance\";\n\nconst PlaceholderView = ({ title, onMenuClick }: { title: string, onMenuClick: () => void }) => (\n    <div className=\"flex h-screen w-full flex-col bg-background text-foreground\">\n        <header className=\"flex items-center justify-between p-4 border-b\">\n            <div className=\"flex items-center gap-2\">\n                <Button variant=\"ghost\" size=\"icon\" className=\"md:hidden\" onClick={onMenuClick}>\n                    <PanelLeft className=\"h-5 w-5\" />\n                    <span className=\"sr-only\">Open Menu</span>\n                </Button>\n                <h1 className=\"text-2xl font-bold\">{title}</h1>\n            </div>\n        </header>\n        <main className=\"flex-1 flex items-center justify-center p-4\">\n            <Card className=\"w-full max-w-md\">\n                <CardHeader>\n                    <CardTitle className=\"text-center\">Coming Soon!</CardTitle>\n                </CardHeader>\n            </Card>\n        </main>\n    </div>\n);\n\n\nexport default function Home() {\n  const [activeView, setActiveView] = React.useState<View>(\"Chat\");\n  const [isNavOpen, setIsNavOpen] = React.useState(false);\n  const [currentUser, setCurrentUser] = React.useState<UserProfile | null>(null);\n  const [isSettingsOpen, setIsSettingsOpen] = React.useState(false);\n\n  const handleLogin = (email: string, password_unused: string) => {\n    // In a real app, you'd verify the password. Here, we'll just find the user by email.\n    const agent = mockAgents.find(a => a.email.toLowerCase() === email.toLowerCase());\n    if (agent) {\n      setCurrentUser({\n        name: agent.name,\n        avatar: agent.avatar,\n        role: agent.role,\n        email: agent.email,\n        phone: agent.phone\n      });\n\n      // Role-based landing page logic\n      if (agent.role === 'admin') {\n        setActiveView('Dashboard');\n      } else {\n        setActiveView('Chat');\n      }\n\n      return true;\n    }\n    return false;\n  };\n\n  const handleLogout = () => {\n    setCurrentUser(null);\n    setActiveView('Chat'); // Default to chat view on logout\n  };\n\n  const renderView = () => {\n    const props = { onMenuClick: () => setIsNavOpen(true), user: currentUser };\n    switch (activeView) {\n      case \"Chat\":\n        return <ChatLayout user={currentUser} onMenuClick={() => setIsNavOpen(true)} />;\n      case \"Contacts\":\n        return <ContactsView {...props} />;\n      case \"Agents\":\n        return <AgentsView {...props} />;\n      case \"Dashboard\":\n        return <DashboardView {...props} />;\n      case \"Announcements\":\n        return <AnnouncementsView {...props} />;\n      case \"My Performance\":\n        return <PlaceholderView title=\"My Performance\" {...props} />;\n      case \"Campaigns\":\n         return <CampaignsView {...props} />;\n      default:\n        return <ChatLayout user={currentUser} onMenuClick={() => setIsNavOpen(true)} />;\n    }\n  };\n\n  if (!currentUser) {\n    return (\n        <ThemeProvider>\n            <main className=\"flex h-screen w-full items-center justify-center bg-background p-4\">\n                <LoginDialog onLogin={handleLogin} />\n            </main>\n        </ThemeProvider>\n    )\n  }\n\n  return (\n    <ThemeProvider>\n        <main className=\"flex h-screen bg-background\">\n        <SettingsDialog open={isSettingsOpen} onOpenChange={setIsSettingsOpen} user={currentUser} />\n        <VerticalNav \n            activeView={activeView} \n            setActiveView={setActiveView} \n            user={currentUser}\n            onLogout={handleLogout}\n            isOpen={isNavOpen}\n            setIsOpen={setIsNavOpen}\n            onSettingsClick={() => setIsSettingsOpen(true)}\n        />\n        <div className=\"flex-1 md:pl-[70px] min-w-0\">\n            {renderView()}\n        </div>\n        </main>\n    </ThemeProvider>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}