(globalThis.TURBOPACK = globalThis.TURBOPACK || []).push([typeof document === "object" ? document.currentScript : undefined, {

"[project]/src/app/data:6c0f6f [app-client] (ecmascript) <text/javascript>": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname, k: __turbopack_refresh__, m: module } = __turbopack_context__;
{
/* __next_internal_action_entry_do_not_use__ [{"7efa29b2bf7fa82364aadbf5011c649e7f21f09fbf":"createAgent"},"src/app/actions.ts",""] */ __turbopack_context__.s({
    "createAgent": (()=>createAgent)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$webpack$2f$loaders$2f$next$2d$flight$2d$loader$2f$action$2d$client$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/build/webpack/loaders/next-flight-loader/action-client-wrapper.js [app-client] (ecmascript)");
"use turbopack no side effects";
;
var createAgent = /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$webpack$2f$loaders$2f$next$2d$flight$2d$loader$2f$action$2d$client$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createServerReference"])("7efa29b2bf7fa82364aadbf5011c649e7f21f09fbf", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$webpack$2f$loaders$2f$next$2d$flight$2d$loader$2f$action$2d$client$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["callServer"], void 0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$webpack$2f$loaders$2f$next$2d$flight$2d$loader$2f$action$2d$client$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["findSourceMapURL"], "createAgent"); //# sourceMappingURL=data:application/json;base64,
if (typeof globalThis.$RefreshHelpers$ === 'object' && globalThis.$RefreshHelpers !== null) {
    __turbopack_context__.k.registerExports(module, globalThis.$RefreshHelpers$);
}
}}),
"[project]/src/app/data:d94b91 [app-client] (ecmascript) <text/javascript>": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname, k: __turbopack_refresh__, m: module } = __turbopack_context__;
{
/* __next_internal_action_entry_do_not_use__ [{"4087786a1113f54129434f2a7816d4f589ebf1b846":"getAgentsByCompany"},"src/app/actions.ts",""] */ __turbopack_context__.s({
    "getAgentsByCompany": (()=>getAgentsByCompany)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$webpack$2f$loaders$2f$next$2d$flight$2d$loader$2f$action$2d$client$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/build/webpack/loaders/next-flight-loader/action-client-wrapper.js [app-client] (ecmascript)");
"use turbopack no side effects";
;
var getAgentsByCompany = /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$webpack$2f$loaders$2f$next$2d$flight$2d$loader$2f$action$2d$client$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createServerReference"])("4087786a1113f54129434f2a7816d4f589ebf1b846", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$webpack$2f$loaders$2f$next$2d$flight$2d$loader$2f$action$2d$client$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["callServer"], void 0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$webpack$2f$loaders$2f$next$2d$flight$2d$loader$2f$action$2d$client$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["findSourceMapURL"], "getAgentsByCompany"); //# sourceMappingURL=data:application/json;base64,
if (typeof globalThis.$RefreshHelpers$ === 'object' && globalThis.$RefreshHelpers !== null) {
    __turbopack_context__.k.registerExports(module, globalThis.$RefreshHelpers$);
}
}}),
"[project]/src/app/data:e8a396 [app-client] (ecmascript) <text/javascript>": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname, k: __turbopack_refresh__, m: module } = __turbopack_context__;
{
/* __next_internal_action_entry_do_not_use__ [{"784c24e8dc61bef49f2c2f8a8acc71b5dd4ffb33e3":"updateAgentProfile"},"src/app/actions.ts",""] */ __turbopack_context__.s({
    "updateAgentProfile": (()=>updateAgentProfile)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$webpack$2f$loaders$2f$next$2d$flight$2d$loader$2f$action$2d$client$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/build/webpack/loaders/next-flight-loader/action-client-wrapper.js [app-client] (ecmascript)");
"use turbopack no side effects";
;
var updateAgentProfile = /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$webpack$2f$loaders$2f$next$2d$flight$2d$loader$2f$action$2d$client$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createServerReference"])("784c24e8dc61bef49f2c2f8a8acc71b5dd4ffb33e3", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$webpack$2f$loaders$2f$next$2d$flight$2d$loader$2f$action$2d$client$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["callServer"], void 0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$webpack$2f$loaders$2f$next$2d$flight$2d$loader$2f$action$2d$client$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["findSourceMapURL"], "updateAgentProfile"); //# sourceMappingURL=data:application/json;base64,
if (typeof globalThis.$RefreshHelpers$ === 'object' && globalThis.$RefreshHelpers !== null) {
    __turbopack_context__.k.registerExports(module, globalThis.$RefreshHelpers$);
}
}}),
"[project]/src/app/data:4ff88a [app-client] (ecmascript) <text/javascript>": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname, k: __turbopack_refresh__, m: module } = __turbopack_context__;
{
/* __next_internal_action_entry_do_not_use__ [{"7002a2a3c0c2bb253b917e951020eb8b5beaa029c6":"updateAgentPassword"},"src/app/actions.ts",""] */ __turbopack_context__.s({
    "updateAgentPassword": (()=>updateAgentPassword)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$webpack$2f$loaders$2f$next$2d$flight$2d$loader$2f$action$2d$client$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/build/webpack/loaders/next-flight-loader/action-client-wrapper.js [app-client] (ecmascript)");
"use turbopack no side effects";
;
var updateAgentPassword = /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$webpack$2f$loaders$2f$next$2d$flight$2d$loader$2f$action$2d$client$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createServerReference"])("7002a2a3c0c2bb253b917e951020eb8b5beaa029c6", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$webpack$2f$loaders$2f$next$2d$flight$2d$loader$2f$action$2d$client$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["callServer"], void 0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$webpack$2f$loaders$2f$next$2d$flight$2d$loader$2f$action$2d$client$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["findSourceMapURL"], "updateAgentPassword"); //# sourceMappingURL=data:application/json;base64,
if (typeof globalThis.$RefreshHelpers$ === 'object' && globalThis.$RefreshHelpers !== null) {
    __turbopack_context__.k.registerExports(module, globalThis.$RefreshHelpers$);
}
}}),
"[project]/src/app/data:b830de [app-client] (ecmascript) <text/javascript>": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname, k: __turbopack_refresh__, m: module } = __turbopack_context__;
{
/* __next_internal_action_entry_do_not_use__ [{"404d8f1b9c2cd44e439a3f4dba37f710171ff8f88b":"getActivityLogs"},"src/app/actions.ts",""] */ __turbopack_context__.s({
    "getActivityLogs": (()=>getActivityLogs)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$webpack$2f$loaders$2f$next$2d$flight$2d$loader$2f$action$2d$client$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/build/webpack/loaders/next-flight-loader/action-client-wrapper.js [app-client] (ecmascript)");
"use turbopack no side effects";
;
var getActivityLogs = /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$webpack$2f$loaders$2f$next$2d$flight$2d$loader$2f$action$2d$client$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createServerReference"])("404d8f1b9c2cd44e439a3f4dba37f710171ff8f88b", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$webpack$2f$loaders$2f$next$2d$flight$2d$loader$2f$action$2d$client$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["callServer"], void 0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$webpack$2f$loaders$2f$next$2d$flight$2d$loader$2f$action$2d$client$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["findSourceMapURL"], "getActivityLogs"); //# sourceMappingURL=data:application/json;base64,
if (typeof globalThis.$RefreshHelpers$ === 'object' && globalThis.$RefreshHelpers !== null) {
    __turbopack_context__.k.registerExports(module, globalThis.$RefreshHelpers$);
}
}}),
"[project]/src/app/data:b7fcc4 [app-client] (ecmascript) <text/javascript>": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname, k: __turbopack_refresh__, m: module } = __turbopack_context__;
{
/* __next_internal_action_entry_do_not_use__ [{"6049a27b16f34690f84c6af4f9a048cb3293c23e61":"handleLogin"},"src/app/actions.ts",""] */ __turbopack_context__.s({
    "handleLogin": (()=>handleLogin)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$webpack$2f$loaders$2f$next$2d$flight$2d$loader$2f$action$2d$client$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/build/webpack/loaders/next-flight-loader/action-client-wrapper.js [app-client] (ecmascript)");
"use turbopack no side effects";
;
var handleLogin = /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$webpack$2f$loaders$2f$next$2d$flight$2d$loader$2f$action$2d$client$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createServerReference"])("6049a27b16f34690f84c6af4f9a048cb3293c23e61", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$webpack$2f$loaders$2f$next$2d$flight$2d$loader$2f$action$2d$client$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["callServer"], void 0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$webpack$2f$loaders$2f$next$2d$flight$2d$loader$2f$action$2d$client$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["findSourceMapURL"], "handleLogin"); //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4vYWN0aW9ucy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJcbid1c2Ugc2VydmVyJztcblxuaW1wb3J0IHsgZ2V0RGIgfSBmcm9tIFwiQC9saWIvZGJcIjtcbmltcG9ydCB7IGhhc2hQYXNzd29yZCwgdmVyaWZ5UGFzc3dvcmQgfSBmcm9tIFwiQC9saWIvYXV0aFwiO1xuaW1wb3J0IHR5cGUgeyBBZ2VudCwgQWdlbnRSb2xlLCBBY3Rpdml0eUxvZyB9IGZyb20gXCJAL3R5cGVzXCI7XG5pbXBvcnQgeyBDb2xsZWN0aW9uLCBEYiwgT2JqZWN0SWQgfSBmcm9tIFwibW9uZ29kYlwiO1xuXG5hc3luYyBmdW5jdGlvbiBnZXRBZ2VudHNDb2xsZWN0aW9uKCk6IFByb21pc2U8Q29sbGVjdGlvbjxBZ2VudD4+IHtcbiAgICBjb25zdCBkYjogRGIgPSBhd2FpdCBnZXREYigpO1xuICAgIHJldHVybiBkYi5jb2xsZWN0aW9uPEFnZW50PignYWdlbnRzJyk7XG59XG5cbmFzeW5jIGZ1bmN0aW9uIGdldENvbXBhbmllc0NvbGxlY3Rpb24oKTogUHJvbWlzZTxDb2xsZWN0aW9uPiB7XG4gICAgY29uc3QgZGI6IERiID0gYXdhaXQgZ2V0RGIoKTtcbiAgICByZXR1cm4gZGIuY29sbGVjdGlvbignY29tcGFuaWVzJyk7XG59XG5cbmFzeW5jIGZ1bmN0aW9uIGdldEFjdGl2aXR5TG9nc0NvbGxlY3Rpb24oKTogUHJvbWlzZTxDb2xsZWN0aW9uPEFjdGl2aXR5TG9nPj4ge1xuICAgIGNvbnN0IGRiOiBEYiA9IGF3YWl0IGdldERiKCk7XG4gICAgcmV0dXJuIGRiLmNvbGxlY3Rpb248QWN0aXZpdHlMb2c+KCdhY3Rpdml0eV9sb2dzJyk7XG59XG5cbmFzeW5jIGZ1bmN0aW9uIGxvZ0FjdGl2aXR5KGNvbXBhbnlJZDogT2JqZWN0SWQsIGFnZW50SWQ6IE9iamVjdElkLCBhZ2VudE5hbWU6IHN0cmluZywgYWN0aW9uOiBzdHJpbmcsIGRldGFpbHM/OiBzdHJpbmcpIHtcbiAgICB0cnkge1xuICAgICAgICBjb25zdCBsb2dzQ29sbGVjdGlvbiA9IGF3YWl0IGdldEFjdGl2aXR5TG9nc0NvbGxlY3Rpb24oKTtcbiAgICAgICAgYXdhaXQgbG9nc0NvbGxlY3Rpb24uaW5zZXJ0T25lKHtcbiAgICAgICAgICAgIGNvbXBhbnlJZCxcbiAgICAgICAgICAgIGFnZW50SWQsXG4gICAgICAgICAgICBhZ2VudE5hbWUsXG4gICAgICAgICAgICBhY3Rpb24sXG4gICAgICAgICAgICBkZXRhaWxzLFxuICAgICAgICAgICAgdGltZXN0YW1wOiBuZXcgRGF0ZSgpLFxuICAgICAgICB9KTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICBjb25zb2xlLmVycm9yKFwiRmFpbGVkIHRvIGxvZyBhY3Rpdml0eTpcIiwgZXJyb3IpO1xuICAgIH1cbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldEFnZW50c0J5Q29tcGFueShjb21wYW55SWQ6IHN0cmluZyk6IFByb21pc2U8QWdlbnRbXT4ge1xuICAgIHRyeSB7XG4gICAgICAgIGlmICghY29tcGFueUlkIHx8ICFPYmplY3RJZC5pc1ZhbGlkKGNvbXBhbnlJZCkpIHtcbiAgICAgICAgICAgIHJldHVybiBbXTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBhZ2VudHNDb2xsZWN0aW9uID0gYXdhaXQgZ2V0QWdlbnRzQ29sbGVjdGlvbigpO1xuICAgICAgICBjb25zdCBhZ2VudHMgPSBhd2FpdCBhZ2VudHNDb2xsZWN0aW9uLmZpbmQoeyBjb21wYW55SWQ6IG5ldyBPYmplY3RJZChjb21wYW55SWQpIH0sIHsgcHJvamVjdGlvbjogeyBwYXNzd29yZDogMCB9IH0pLnRvQXJyYXkoKTtcblxuICAgICAgICAvLyBDb252ZXJ0IE9iamVjdElkIHRvIHN0cmluZyBmb3IgY2xpZW50LXNpZGUgY29uc3VtcHRpb25cbiAgICAgICAgcmV0dXJuIGFnZW50cy5tYXAoYWdlbnQgPT4gKHtcbiAgICAgICAgICAgIC4uLmFnZW50LFxuICAgICAgICAgICAgX2lkOiBhZ2VudC5faWQudG9TdHJpbmcoKSxcbiAgICAgICAgICAgIGlkOiBhZ2VudC5faWQudG9TdHJpbmcoKSxcbiAgICAgICAgICAgIGNvbXBhbnlJZDogYWdlbnQuY29tcGFueUlkPy50b1N0cmluZygpLFxuICAgICAgICB9KSk7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihcIkVycm9yIGZldGNoaW5nIGFnZW50cyBieSBjb21wYW55OlwiLCBlcnJvcik7XG4gICAgICAgIHJldHVybiBbXTtcbiAgICB9XG59XG5cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGhhbmRsZUxvZ2luKGVtYWlsOiBzdHJpbmcsIHBhc3N3b3JkX3VudXNlZDogc3RyaW5nKSB7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IGFnZW50c0NvbGxlY3Rpb24gPSBhd2FpdCBnZXRBZ2VudHNDb2xsZWN0aW9uKCk7XG4gICAgICBjb25zdCBhZ2VudCA9IGF3YWl0IGFnZW50c0NvbGxlY3Rpb24uZmluZE9uZSh7IGVtYWlsOiBlbWFpbC50b0xvd2VyQ2FzZSgpIH0pO1xuXG4gICAgICBpZiAoYWdlbnQgJiYgYWdlbnQucGFzc3dvcmQpIHtcbiAgICAgICAgY29uc3QgaXNQYXNzd29yZFZhbGlkID0gYXdhaXQgdmVyaWZ5UGFzc3dvcmQocGFzc3dvcmRfdW51c2VkLCBhZ2VudC5wYXNzd29yZCk7XG4gICAgICAgIGlmIChpc1Bhc3N3b3JkVmFsaWQpIHtcbiAgICAgICAgICAvLyBPbWl0IHBhc3N3b3JkIGFuZCBjb252ZXJ0IHRvIHBsYWluIG9iamVjdCBiZWZvcmUgcmV0dXJuaW5nXG4gICAgICAgICAgY29uc3QgeyBwYXNzd29yZCwgX2lkLCAuLi5hZ2VudERhdGEgfSA9IGFnZW50O1xuICAgICAgICAgIGNvbnN0IGFnZW50V2l0aG91dFBhc3N3b3JkID0ge1xuICAgICAgICAgICAgaWQ6IF9pZC50b1N0cmluZygpLFxuICAgICAgICAgICAgX2lkOiBfaWQudG9TdHJpbmcoKSxcbiAgICAgICAgICAgIC4uLmFnZW50RGF0YSxcbiAgICAgICAgICAgIGNvbXBhbnlJZDogYWdlbnQuY29tcGFueUlkPy50b1N0cmluZygpXG4gICAgICAgICAgfTtcbiAgICAgICAgICBpZiAoYWdlbnQuY29tcGFueUlkKSB7XG4gICAgICAgICAgICBhd2FpdCBsb2dBY3Rpdml0eShhZ2VudC5jb21wYW55SWQsIGFnZW50Ll9pZCwgYWdlbnQubmFtZSwgJ0FnZW50IExvZ2dlZCBJbicpO1xuICAgICAgICAgIH1cbiAgICAgICAgICByZXR1cm4geyBzdWNjZXNzOiB0cnVlLCBhZ2VudDogYWdlbnRXaXRob3V0UGFzc3dvcmQgfTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgcmV0dXJuIHsgc3VjY2VzczogZmFsc2UsIG1lc3NhZ2U6IFwiSW52YWxpZCBlbWFpbCBvciBwYXNzd29yZC5cIiB9O1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmVycm9yKFwiTG9naW4gZXJyb3I6XCIsIGVycm9yKTtcbiAgICAgIHJldHVybiB7IHN1Y2Nlc3M6IGZhbHNlLCBtZXNzYWdlOiBcIkRhdGFiYXNlIGNvbm5lY3Rpb24gZXJyb3IuIFBsZWFzZSBjaGVjayBzZXJ2ZXIgbG9ncyBhbmQgZW5zdXJlIHRoZSBNT05HT0RCX1VSSSBpcyBjb3JyZWN0bHkgY29uZmlndXJlZCBpbiB5b3VyIC5lbnYgZmlsZS5cIiB9O1xuICAgIH1cbiAgfTtcblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGNyZWF0ZUFnZW50KG5hbWU6IHN0cmluZywgZW1haWw6IHN0cmluZywgcGFzc3dvcmRfdW51c2VkOiBzdHJpbmcsIHJvbGU6IEFnZW50Um9sZSwgY29tcGFueUlkOiBzdHJpbmcsIGNyZWF0ZWRCeTogeyBhZ2VudElkOiBzdHJpbmc7IGFnZW50TmFtZTogc3RyaW5nIH0pIHtcbiAgICB0cnkge1xuICAgICAgICBpZiAoIU9iamVjdElkLmlzVmFsaWQoY29tcGFueUlkKSB8fCAhT2JqZWN0SWQuaXNWYWxpZChjcmVhdGVkQnkuYWdlbnRJZCkpIHtcbiAgICAgICAgICAgICByZXR1cm4geyBzdWNjZXNzOiBmYWxzZSwgbWVzc2FnZTogXCJJbnZhbGlkIGNvbXBhbnkgb3IgYWdlbnQgSUQuXCIgfTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBhZ2VudHNDb2xsZWN0aW9uID0gYXdhaXQgZ2V0QWdlbnRzQ29sbGVjdGlvbigpO1xuICAgICAgICBjb25zdCBleGlzdGluZ0FnZW50ID0gYXdhaXQgYWdlbnRzQ29sbGVjdGlvbi5maW5kT25lKHsgZW1haWw6IGVtYWlsLnRvTG93ZXJDYXNlKCkgfSk7XG5cbiAgICAgICAgaWYgKGV4aXN0aW5nQWdlbnQpIHtcbiAgICAgICAgICAgIHJldHVybiB7IHN1Y2Nlc3M6IGZhbHNlLCBtZXNzYWdlOiBcIkFuIGFnZW50IHdpdGggdGhpcyBlbWFpbCBhbHJlYWR5IGV4aXN0cy5cIiB9O1xuICAgICAgICB9XG5cbiAgICAgICAgY29uc3QgaGFzaGVkUGFzc3dvcmQgPSBhd2FpdCBoYXNoUGFzc3dvcmQocGFzc3dvcmRfdW51c2VkKTtcbiAgICAgICAgY29uc3QgYXZhdGFyID0gYGh0dHBzOi8vcGljc3VtLnBob3Rvcy9zZWVkLyR7bmFtZX0vMTAwLzEwMGA7XG4gICAgICAgIGNvbnN0IGNvbXBhbnlPYmplY3RJZCA9IG5ldyBPYmplY3RJZChjb21wYW55SWQpO1xuXG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IGFnZW50c0NvbGxlY3Rpb24uaW5zZXJ0T25lKHtcbiAgICAgICAgICAgIG5hbWUsXG4gICAgICAgICAgICBlbWFpbDogZW1haWwudG9Mb3dlckNhc2UoKSxcbiAgICAgICAgICAgIHBhc3N3b3JkOiBoYXNoZWRQYXNzd29yZCxcbiAgICAgICAgICAgIHJvbGUsXG4gICAgICAgICAgICBhdmF0YXIsXG4gICAgICAgICAgICBpZDogJycsIC8vIGlkIHdpbGwgYmUgY3JlYXRlZCBieSBNb25nb0RCXG4gICAgICAgICAgICBwaG9uZTogJycsIC8vIEFkZCBhIGRlZmF1bHQgcGhvbmUgbnVtYmVyXG4gICAgICAgICAgICBjb21wYW55SWQ6IGNvbXBhbnlPYmplY3RJZFxuICAgICAgICB9KTtcblxuICAgICAgICBpZiAocmVzdWx0Lmluc2VydGVkSWQpIHtcbiAgICAgICAgICAgIGNvbnN0IG5ld0FnZW50ID0gYXdhaXQgYWdlbnRzQ29sbGVjdGlvbi5maW5kT25lKHsgX2lkOiByZXN1bHQuaW5zZXJ0ZWRJZCB9KTtcbiAgICAgICAgICAgIGlmIChuZXdBZ2VudCkge1xuICAgICAgICAgICAgICAgIGF3YWl0IGxvZ0FjdGl2aXR5KGNvbXBhbnlPYmplY3RJZCwgbmV3IE9iamVjdElkKGNyZWF0ZWRCeS5hZ2VudElkKSwgY3JlYXRlZEJ5LmFnZW50TmFtZSwgJ0FnZW50IENyZWF0ZWQnLCBgQ3JlYXRlZCBuZXcgYWdlbnQ6ICR7bmFtZX0gKCR7ZW1haWx9KWApO1xuICAgICAgICAgICAgICAgIC8vIE9taXQgcGFzc3dvcmQgYW5kIGNvbnZlcnQgdG8gcGxhaW4gb2JqZWN0IGJlZm9yZSByZXR1cm5pbmdcbiAgICAgICAgICAgICAgICBjb25zdCB7IHBhc3N3b3JkLCBfaWQsIC4uLmFnZW50RGF0YSB9ID0gbmV3QWdlbnQ7XG4gICAgICAgICAgICAgICAgY29uc3QgYWdlbnRXaXRob3V0UGFzc3dvcmQgPSB7XG4gICAgICAgICAgICAgICAgICBfaWQ6IF9pZC50b1N0cmluZygpLFxuICAgICAgICAgICAgICAgICAgaWQ6IF9pZC50b1N0cmluZygpLFxuICAgICAgICAgICAgICAgICAgLi4uYWdlbnREYXRhLFxuICAgICAgICAgICAgICAgICAgY29tcGFueUlkOiBuZXdBZ2VudC5jb21wYW55SWQ/LnRvU3RyaW5nKCksXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICByZXR1cm4geyBzdWNjZXNzOiB0cnVlLCBhZ2VudDogYWdlbnRXaXRob3V0UGFzc3dvcmQgfTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4geyBzdWNjZXNzOiBmYWxzZSwgbWVzc2FnZTogXCJGYWlsZWQgdG8gY3JlYXRlIGFnZW50LlwiIH07XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihcIkNyZWF0ZSBhZ2VudCBlcnJvcjpcIiwgZXJyb3IpO1xuICAgICAgICByZXR1cm4geyBzdWNjZXNzOiBmYWxzZSwgbWVzc2FnZTogXCJBbiB1bmV4cGVjdGVkIGVycm9yIG9jY3VycmVkIHdoaWxlIGNyZWF0aW5nIHRoZSBhZ2VudC5cIiB9O1xuICAgIH1cbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGhhbmRsZVNpZ25VcChuYW1lOiBzdHJpbmcsIGVtYWlsOiBzdHJpbmcsIHBhc3N3b3JkX3VudXNlZDogc3RyaW5nKSB7XG4gICAgY29uc3QgZGIgPSBhd2FpdCBnZXREYigpO1xuICAgIGNvbnN0IHNlc3Npb24gPSBkYi5jbGllbnQuc3RhcnRTZXNzaW9uKCk7XG4gICAgdHJ5IHtcbiAgICAgICAgbGV0IG5ld0FnZW50UmVzdWx0O1xuICAgICAgICBhd2FpdCBzZXNzaW9uLndpdGhUcmFuc2FjdGlvbihhc3luYyAoKSA9PiB7XG4gICAgICAgICAgICBjb25zdCBjb21wYW5pZXNDb2xsZWN0aW9uID0gYXdhaXQgZ2V0Q29tcGFuaWVzQ29sbGVjdGlvbigpO1xuICAgICAgICAgICAgY29uc3QgYWdlbnRzQ29sbGVjdGlvbiA9IGF3YWl0IGdldEFnZW50c0NvbGxlY3Rpb24oKTtcbiAgICAgICAgICAgIGNvbnN0IGV4aXN0aW5nQWdlbnQgPSBhd2FpdCBhZ2VudHNDb2xsZWN0aW9uLmZpbmRPbmUoeyBlbWFpbDogZW1haWwudG9Mb3dlckNhc2UoKSB9LCB7IHNlc3Npb24gfSk7XG5cbiAgICAgICAgICAgIGlmIChleGlzdGluZ0FnZW50KSB7XG4gICAgICAgICAgICAgICAgYXdhaXQgc2Vzc2lvbi5hYm9ydFRyYW5zYWN0aW9uKCk7XG4gICAgICAgICAgICAgICAgLy8gVGhpcyB0aHJvdyB3aWxsIGJlIGNhdWdodCBieSB0aGUgb3V0ZXIgY2F0Y2ggYmxvY2tcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJBbiBhZ2VudCB3aXRoIHRoaXMgZW1haWwgYWxyZWFkeSBleGlzdHMuXCIpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAvLyAxLiBDcmVhdGUgY29tcGFueVxuICAgICAgICAgICAgY29uc3QgY29tcGFueVJlc3VsdCA9IGF3YWl0IGNvbXBhbmllc0NvbGxlY3Rpb24uaW5zZXJ0T25lKHtcbiAgICAgICAgICAgICAgICBuYW1lOiBgJHtuYW1lfSdzIENvbXBhbnlgLFxuICAgICAgICAgICAgICAgIGNyZWF0ZWRBdDogbmV3IERhdGUoKSxcbiAgICAgICAgICAgIH0sIHsgc2Vzc2lvbiB9KTtcblxuICAgICAgICAgICAgaWYgKCFjb21wYW55UmVzdWx0Lmluc2VydGVkSWQpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJGYWlsZWQgdG8gY3JlYXRlIGNvbXBhbnkuXCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3QgY29tcGFueUlkID0gY29tcGFueVJlc3VsdC5pbnNlcnRlZElkO1xuXG4gICAgICAgICAgICAvLyAyLiBDcmVhdGUgYWRtaW4gdXNlciBmb3IgdGhhdCBjb21wYW55XG4gICAgICAgICAgICBjb25zdCBoYXNoZWRQYXNzd29yZCA9IGF3YWl0IGhhc2hQYXNzd29yZChwYXNzd29yZF91bnVzZWQpO1xuICAgICAgICAgICAgY29uc3QgYXZhdGFyID0gYGh0dHBzOi8vcGljc3VtLnBob3Rvcy9zZWVkLyR7bmFtZX0vMTAwLzEwMGA7XG4gICAgICAgICAgICBjb25zdCBhZ2VudFJlc3VsdCA9IGF3YWl0IGFnZW50c0NvbGxlY3Rpb24uaW5zZXJ0T25lKHtcbiAgICAgICAgICAgICAgICBuYW1lLFxuICAgICAgICAgICAgICAgIGVtYWlsOiBlbWFpbC50b0xvd2VyQ2FzZSgpLFxuICAgICAgICAgICAgICAgIHBhc3N3b3JkOiBoYXNoZWRQYXNzd29yZCxcbiAgICAgICAgICAgICAgICByb2xlOiAnYWRtaW4nLFxuICAgICAgICAgICAgICAgIGF2YXRhcixcbiAgICAgICAgICAgICAgICBpZDogJycsXG4gICAgICAgICAgICAgICAgcGhvbmU6ICcnLFxuICAgICAgICAgICAgICAgIGNvbXBhbnlJZDogY29tcGFueUlkLFxuICAgICAgICAgICAgfSwgeyBzZXNzaW9uIH0pO1xuXG4gICAgICAgICAgICAgaWYgKCFhZ2VudFJlc3VsdC5pbnNlcnRlZElkKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiRmFpbGVkIHRvIGNyZWF0ZSBhZG1pbiBhZ2VudC5cIik7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGNvbnN0IG5ld0FnZW50ID0gYXdhaXQgYWdlbnRzQ29sbGVjdGlvbi5maW5kT25lKHsgX2lkOiBhZ2VudFJlc3VsdC5pbnNlcnRlZElkIH0sIHsgc2Vzc2lvbiB9KTtcbiAgICAgICAgICAgIGlmIChuZXdBZ2VudCkge1xuICAgICAgICAgICAgICAgICBhd2FpdCBsb2dBY3Rpdml0eShjb21wYW55SWQsIG5ld0FnZW50Ll9pZCwgbmV3QWdlbnQubmFtZSwgJ1VzZXIgUmVnaXN0ZXJlZCcsIGBOZXcgY29tcGFueSAnJHtuYW1lfVxcJ3MgQ29tcGFueScgY3JlYXRlZC5gKTtcbiAgICAgICAgICAgICAgICAgY29uc3QgeyBwYXNzd29yZCwgX2lkLCAuLi5hZ2VudERhdGEgfSA9IG5ld0FnZW50O1xuICAgICAgICAgICAgICAgICBuZXdBZ2VudFJlc3VsdCA9IHtcbiAgICAgICAgICAgICAgICAgICAgaWQ6IF9pZC50b1N0cmluZygpLFxuICAgICAgICAgICAgICAgICAgICBfaWQ6IF9pZC50b1N0cmluZygpLFxuICAgICAgICAgICAgICAgICAgICAuLi5hZ2VudERhdGEsXG4gICAgICAgICAgICAgICAgICAgIGNvbXBhbnlJZDogbmV3QWdlbnQuY29tcGFueUlkPy50b1N0cmluZygpXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiB7IHN1Y2Nlc3M6IHRydWUsIGFnZW50OiBuZXdBZ2VudFJlc3VsdCB9O1xuICAgIH0gY2F0Y2ggKGVycm9yOiBhbnkpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihcIlNpZ24gdXAgdHJhbnNhY3Rpb24gZXJyb3I6XCIsIGVycm9yKTtcbiAgICAgICAgcmV0dXJuIHsgc3VjY2VzczogZmFsc2UsIG1lc3NhZ2U6IGVycm9yLm1lc3NhZ2UgfHwgXCJBbiB1bmV4cGVjdGVkIGVycm9yIG9jY3VycmVkIGR1cmluZyBzaWduIHVwLlwiIH07XG4gICAgfSBmaW5hbGx5IHtcbiAgICAgICAgYXdhaXQgc2Vzc2lvbi5lbmRTZXNzaW9uKCk7XG4gICAgfVxufVxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gdXBkYXRlQWdlbnRQcm9maWxlKGFnZW50SWQ6IHN0cmluZywgbmFtZTogc3RyaW5nLCBlbWFpbDogc3RyaW5nLCBwaG9uZTogc3RyaW5nKSB7XG4gICAgdHJ5IHtcbiAgICAgICAgaWYgKCFPYmplY3RJZC5pc1ZhbGlkKGFnZW50SWQpKSB7XG4gICAgICAgICAgICByZXR1cm4geyBzdWNjZXNzOiBmYWxzZSwgbWVzc2FnZTogXCJJbnZhbGlkIGFnZW50IElELlwiIH07XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgYWdlbnRPYmplY3RJZCA9IG5ldyBPYmplY3RJZChhZ2VudElkKTtcbiAgICAgICAgY29uc3QgYWdlbnRzQ29sbGVjdGlvbiA9IGF3YWl0IGdldEFnZW50c0NvbGxlY3Rpb24oKTtcblxuICAgICAgICBjb25zdCBhZ2VudCA9IGF3YWl0IGFnZW50c0NvbGxlY3Rpb24uZmluZE9uZSh7IF9pZDogYWdlbnRPYmplY3RJZCB9KTtcbiAgICAgICAgaWYgKCFhZ2VudCkge1xuICAgICAgICAgICAgIHJldHVybiB7IHN1Y2Nlc3M6IGZhbHNlLCBtZXNzYWdlOiBcIkFnZW50IG5vdCBmb3VuZC5cIiB9O1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBhZ2VudHNDb2xsZWN0aW9uLnVwZGF0ZU9uZShcbiAgICAgICAgICAgIHsgX2lkOiBhZ2VudE9iamVjdElkIH0sXG4gICAgICAgICAgICB7ICRzZXQ6IHsgbmFtZSwgZW1haWw6IGVtYWlsLnRvTG93ZXJDYXNlKCksIHBob25lIH0gfVxuICAgICAgICApO1xuXG4gICAgICAgIGlmIChyZXN1bHQubWF0Y2hlZENvdW50ID4gMCkge1xuICAgICAgICAgICAgaWYgKGFnZW50LmNvbXBhbnlJZCkge1xuICAgICAgICAgICAgICAgYXdhaXQgbG9nQWN0aXZpdHkoYWdlbnQuY29tcGFueUlkLCBhZ2VudE9iamVjdElkLCBuYW1lLCAnUHJvZmlsZSBVcGRhdGVkJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4geyBzdWNjZXNzOiB0cnVlLCBtZXNzYWdlOiBcIlByb2ZpbGUgdXBkYXRlZCBzdWNjZXNzZnVsbHkuXCIgfTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4geyBzdWNjZXNzOiBmYWxzZSwgbWVzc2FnZTogXCJBZ2VudCBub3QgZm91bmQgb3Igbm8gY2hhbmdlcyBtYWRlLlwiIH07XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihcIlVwZGF0ZSBwcm9maWxlIGVycm9yOlwiLCBlcnJvcik7XG4gICAgICAgIHJldHVybiB7IHN1Y2Nlc3M6IGZhbHNlLCBtZXNzYWdlOiBcIkFuIHVuZXhwZWN0ZWQgZXJyb3Igb2NjdXJyZWQuXCIgfTtcbiAgICB9XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiB1cGRhdGVBZ2VudFBhc3N3b3JkKGFnZW50SWQ6IHN0cmluZywgY3VycmVudFBhc3N3b3JkX3VudXNlZDogc3RyaW5nLCBuZXdQYXNzd29yZF91bnVzZWQ6IHN0cmluZykge1xuICAgIHRyeSB7XG4gICAgICAgIGlmICghT2JqZWN0SWQuaXNWYWxpZChhZ2VudElkKSkge1xuICAgICAgICAgICAgcmV0dXJuIHsgc3VjY2VzczogZmFsc2UsIG1lc3NhZ2U6IFwiSW52YWxpZCBhZ2VudCBJRC5cIiB9O1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGFnZW50T2JqZWN0SWQgPSBuZXcgT2JqZWN0SWQoYWdlbnRJZCk7XG4gICAgICAgIGNvbnN0IGFnZW50c0NvbGxlY3Rpb24gPSBhd2FpdCBnZXRBZ2VudHNDb2xsZWN0aW9uKCk7XG4gICAgICAgIGNvbnN0IGFnZW50ID0gYXdhaXQgYWdlbnRzQ29sbGVjdGlvbi5maW5kT25lKHsgX2lkOiBhZ2VudE9iamVjdElkIH0pO1xuXG4gICAgICAgIGlmICghYWdlbnQgfHwgIWFnZW50LnBhc3N3b3JkKSB7XG4gICAgICAgICAgICByZXR1cm4geyBzdWNjZXNzOiBmYWxzZSwgbWVzc2FnZTogXCJBZ2VudCBub3QgZm91bmQuXCIgfTtcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IGlzUGFzc3dvcmRWYWxpZCA9IGF3YWl0IHZlcmlmeVBhc3N3b3JkKGN1cnJlbnRQYXNzd29yZF91bnVzZWQsIGFnZW50LnBhc3N3b3JkKTtcbiAgICAgICAgaWYgKCFpc1Bhc3N3b3JkVmFsaWQpIHtcbiAgICAgICAgICAgIHJldHVybiB7IHN1Y2Nlc3M6IGZhbHNlLCBtZXNzYWdlOiBcIkluY29ycmVjdCBjdXJyZW50IHBhc3N3b3JkLlwiIH07XG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCBoYXNoZWROZXdQYXNzd29yZCA9IGF3YWl0IGhhc2hQYXNzd29yZChuZXdQYXNzd29yZF91bnVzZWQpO1xuICAgICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBhZ2VudHNDb2xsZWN0aW9uLnVwZGF0ZU9uZShcbiAgICAgICAgICAgIHsgX2lkOiBhZ2VudE9iamVjdElkIH0sXG4gICAgICAgICAgICB7ICRzZXQ6IHsgcGFzc3dvcmQ6IGhhc2hlZE5ld1Bhc3N3b3JkIH0gfVxuICAgICAgICApO1xuXG4gICAgICAgIGlmIChyZXN1bHQubW9kaWZpZWRDb3VudCA+IDApIHtcbiAgICAgICAgICAgIGlmKGFnZW50LmNvbXBhbnlJZCkge1xuICAgICAgICAgICAgICAgIGF3YWl0IGxvZ0FjdGl2aXR5KGFnZW50LmNvbXBhbnlJZCwgYWdlbnRPYmplY3RJZCwgYWdlbnQubmFtZSwgJ1Bhc3N3b3JkIFVwZGF0ZWQnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiB7IHN1Y2Nlc3M6IHRydWUsIG1lc3NhZ2U6IFwiUGFzc3dvcmQgdXBkYXRlZCBzdWNjZXNzZnVsbHkuXCIgfTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4geyBzdWNjZXNzOiBmYWxzZSwgbWVzc2FnZTogXCJGYWlsZWQgdG8gdXBkYXRlIHBhc3N3b3JkLlwiIH07XG5cbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICBjb25zb2xlLmVycm9yKFwiVXBkYXRlIHBhc3N3b3JkIGVycm9yOlwiLCBlcnJvcik7XG4gICAgICAgIHJldHVybiB7IHN1Y2Nlc3M6IGZhbHNlLCBtZXNzYWdlOiBcIkFuIHVuZXhwZWN0ZWQgZXJyb3Igb2NjdXJyZWQuXCIgfTtcbiAgICB9XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRBY3Rpdml0eUxvZ3MoY29tcGFueUlkOiBzdHJpbmcpOiBQcm9taXNlPEFjdGl2aXR5TG9nW10+IHtcbiAgICB0cnkge1xuICAgICAgICBpZiAoIWNvbXBhbnlJZCB8fCAhT2JqZWN0SWQuaXNWYWxpZChjb21wYW55SWQpKSB7XG4gICAgICAgICAgICByZXR1cm4gW107XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgbG9nc0NvbGxlY3Rpb24gPSBhd2FpdCBnZXRBY3Rpdml0eUxvZ3NDb2xsZWN0aW9uKCk7XG4gICAgICAgIGNvbnN0IGxvZ3MgPSBhd2FpdCBsb2dzQ29sbGVjdGlvbi5maW5kKHsgY29tcGFueUlkOiBuZXcgT2JqZWN0SWQoY29tcGFueUlkKSB9KS5zb3J0KHsgdGltZXN0YW1wOiAtMSB9KS5saW1pdCg1MCkudG9BcnJheSgpO1xuXG4gICAgICAgIHJldHVybiBsb2dzLm1hcChsb2cgPT4gKHtcbiAgICAgICAgICAgIC4uLmxvZyxcbiAgICAgICAgICAgIF9pZDogbG9nLl9pZC50b1N0cmluZygpLFxuICAgICAgICAgICAgY29tcGFueUlkOiBsb2cuY29tcGFueUlkLnRvU3RyaW5nKCksXG4gICAgICAgICAgICBhZ2VudElkOiBsb2cuYWdlbnRJZC50b1N0cmluZygpLFxuICAgICAgICAgICAgdGltZXN0YW1wOiBsb2cudGltZXN0YW1wLFxuICAgICAgICB9KSk7XG5cbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICBjb25zb2xlLmVycm9yKFwiRXJyb3IgZmV0Y2hpbmcgYWN0aXZpdHkgbG9nczpcIiwgZXJyb3IpO1xuICAgICAgICByZXR1cm4gW107XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJ1UkE2RHNCIn0=
if (typeof globalThis.$RefreshHelpers$ === 'object' && globalThis.$RefreshHelpers !== null) {
    __turbopack_context__.k.registerExports(module, globalThis.$RefreshHelpers$);
}
}}),
"[project]/src/app/data:c8010b [app-client] (ecmascript) <text/javascript>": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname, k: __turbopack_refresh__, m: module } = __turbopack_context__;
{
/* __next_internal_action_entry_do_not_use__ [{"70780065eead8858964f97f44aaa44c48f608e84ba":"handleSignUp"},"src/app/actions.ts",""] */ __turbopack_context__.s({
    "handleSignUp": (()=>handleSignUp)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$webpack$2f$loaders$2f$next$2d$flight$2d$loader$2f$action$2d$client$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/build/webpack/loaders/next-flight-loader/action-client-wrapper.js [app-client] (ecmascript)");
"use turbopack no side effects";
;
var handleSignUp = /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$webpack$2f$loaders$2f$next$2d$flight$2d$loader$2f$action$2d$client$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createServerReference"])("70780065eead8858964f97f44aaa44c48f608e84ba", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$webpack$2f$loaders$2f$next$2d$flight$2d$loader$2f$action$2d$client$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["callServer"], void 0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$webpack$2f$loaders$2f$next$2d$flight$2d$loader$2f$action$2d$client$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["findSourceMapURL"], "handleSignUp"); //# sourceMappingURL=data:application/json;base64,
if (typeof globalThis.$RefreshHelpers$ === 'object' && globalThis.$RefreshHelpers !== null) {
    __turbopack_context__.k.registerExports(module, globalThis.$RefreshHelpers$);
}
}}),
"[project]/src/app/page.tsx [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname, k: __turbopack_refresh__, m: module } = __turbopack_context__;
{
__turbopack_context__.s({
    "default": (()=>Home)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/compiled/react/jsx-dev-runtime.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$dashboard$2f$chat$2d$layout$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/src/components/dashboard/chat-layout.tsx [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$dashboard$2f$vertical$2d$nav$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/src/components/dashboard/vertical-nav.tsx [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$dashboard$2f$contacts$2d$view$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/src/components/dashboard/contacts-view.tsx [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$dashboard$2f$agents$2d$view$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/src/components/dashboard/agents-view.tsx [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$dashboard$2f$dashboard$2d$view$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/src/components/dashboard/dashboard-view.tsx [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$dashboard$2f$announcements$2d$view$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/src/components/dashboard/announcements-view.tsx [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$dashboard$2f$settings$2d$dialog$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/src/components/dashboard/settings-dialog.tsx [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$dashboard$2f$campaigns$2d$view$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/src/components/dashboard/campaigns-view.tsx [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$dashboard$2f$my$2d$performance$2d$view$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/src/components/dashboard/my-performance-view.tsx [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$dashboard$2f$auth$2d$form$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/src/components/dashboard/auth-form.tsx [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$app$2f$data$3a$b7fcc4__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$text$2f$javascript$3e$__ = __turbopack_context__.i("[project]/src/app/data:b7fcc4 [app-client] (ecmascript) <text/javascript>");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$app$2f$data$3a$c8010b__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$text$2f$javascript$3e$__ = __turbopack_context__.i("[project]/src/app/data:c8010b [app-client] (ecmascript) <text/javascript>");
;
var _s = __turbopack_context__.k.signature();
"use client";
;
;
;
;
;
;
;
;
;
;
;
;
function Home({ params, searchParams }) {
    _s();
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["use"])(params);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["use"])(searchParams);
    const [activeView, setActiveView] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])("Chat");
    const [isNavOpen, setIsNavOpen] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(false);
    const [currentUser, setCurrentUser] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(null);
    const [isSettingsOpen, setIsSettingsOpen] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(false);
    const onLogin = async (email, password_unused)=>{
        const result = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$app$2f$data$3a$b7fcc4__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$text$2f$javascript$3e$__["handleLogin"])(email, password_unused);
        if (result.success && result.agent) {
            const agent = result.agent;
            setCurrentUser(agent);
            if (agent.role === 'admin') {
                setActiveView('Dashboard');
            } else {
                setActiveView('Chat');
            }
        }
        return {
            success: result.success,
            message: result.message
        };
    };
    const onSignUp = async (name, email, password_unused)=>{
        const result = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$app$2f$data$3a$c8010b__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$text$2f$javascript$3e$__["handleSignUp"])(name, email, password_unused);
        if (result.success && result.agent) {
            setCurrentUser(result.agent);
            setActiveView('Dashboard');
        }
        return result;
    };
    const handleLogout = ()=>{
        setCurrentUser(null);
        setActiveView('Chat');
    };
    const renderView = ()=>{
        const props = {
            onMenuClick: ()=>setIsNavOpen(true),
            user: currentUser
        };
        switch(activeView){
            case "Chat":
                return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$dashboard$2f$chat$2d$layout$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ChatLayout"], {
                    user: currentUser,
                    onMenuClick: ()=>setIsNavOpen(true)
                }, void 0, false, {
                    fileName: "[project]/src/app/page.tsx",
                    lineNumber: 64,
                    columnNumber: 16
                }, this);
            case "Contacts":
                return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$dashboard$2f$contacts$2d$view$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ContactsView"], {
                    ...props
                }, void 0, false, {
                    fileName: "[project]/src/app/page.tsx",
                    lineNumber: 66,
                    columnNumber: 16
                }, this);
            case "Agents":
                return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$dashboard$2f$agents$2d$view$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AgentsView"], {
                    ...props
                }, void 0, false, {
                    fileName: "[project]/src/app/page.tsx",
                    lineNumber: 68,
                    columnNumber: 16
                }, this);
            case "Dashboard":
                return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$dashboard$2f$dashboard$2d$view$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["DashboardView"], {
                    ...props
                }, void 0, false, {
                    fileName: "[project]/src/app/page.tsx",
                    lineNumber: 70,
                    columnNumber: 16
                }, this);
            case "Announcements":
                return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$dashboard$2f$announcements$2d$view$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AnnouncementsView"], {
                    ...props
                }, void 0, false, {
                    fileName: "[project]/src/app/page.tsx",
                    lineNumber: 72,
                    columnNumber: 16
                }, this);
            case "My Performance":
                return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$dashboard$2f$my$2d$performance$2d$view$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["MyPerformanceView"], {
                    ...props
                }, void 0, false, {
                    fileName: "[project]/src/app/page.tsx",
                    lineNumber: 74,
                    columnNumber: 16
                }, this);
            case "Campaigns":
                return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$dashboard$2f$campaigns$2d$view$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["CampaignsView"], {
                    ...props
                }, void 0, false, {
                    fileName: "[project]/src/app/page.tsx",
                    lineNumber: 76,
                    columnNumber: 17
                }, this);
            default:
                return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$dashboard$2f$chat$2d$layout$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ChatLayout"], {
                    user: currentUser,
                    onMenuClick: ()=>setIsNavOpen(true)
                }, void 0, false, {
                    fileName: "[project]/src/app/page.tsx",
                    lineNumber: 78,
                    columnNumber: 16
                }, this);
        }
    };
    if (!currentUser) {
        return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("main", {
            className: "flex h-screen w-full items-center justify-center bg-background p-4 overflow-hidden auth-page-background",
            children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$dashboard$2f$auth$2d$form$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AuthForm"], {
                onLogin: onLogin,
                onSignUp: onSignUp
            }, void 0, false, {
                fileName: "[project]/src/app/page.tsx",
                lineNumber: 85,
                columnNumber: 9
            }, this)
        }, void 0, false, {
            fileName: "[project]/src/app/page.tsx",
            lineNumber: 84,
            columnNumber: 7
        }, this);
    }
    return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("main", {
        className: "flex h-screen bg-background",
        children: [
            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$dashboard$2f$settings$2d$dialog$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SettingsDialog"], {
                open: isSettingsOpen,
                onOpenChange: setIsSettingsOpen,
                user: currentUser
            }, void 0, false, {
                fileName: "[project]/src/app/page.tsx",
                lineNumber: 92,
                columnNumber: 7
            }, this),
            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$dashboard$2f$vertical$2d$nav$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["VerticalNav"], {
                activeView: activeView,
                setActiveView: setActiveView,
                user: currentUser,
                onLogout: handleLogout,
                isOpen: isNavOpen,
                setIsOpen: setIsNavOpen,
                onSettingsClick: ()=>setIsSettingsOpen(true)
            }, void 0, false, {
                fileName: "[project]/src/app/page.tsx",
                lineNumber: 93,
                columnNumber: 7
            }, this),
            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                className: "flex-1 md:pl-[70px] min-w-0",
                children: renderView()
            }, void 0, false, {
                fileName: "[project]/src/app/page.tsx",
                lineNumber: 102,
                columnNumber: 7
            }, this)
        ]
    }, void 0, true, {
        fileName: "[project]/src/app/page.tsx",
        lineNumber: 91,
        columnNumber: 5
    }, this);
}
_s(Home, "byu3A2zRqEsvvVlisbcIetuC49c=");
_c = Home;
var _c;
__turbopack_context__.k.register(_c, "Home");
if (typeof globalThis.$RefreshHelpers$ === 'object' && globalThis.$RefreshHelpers !== null) {
    __turbopack_context__.k.registerExports(module, globalThis.$RefreshHelpers$);
}
}}),
}]);

//# sourceMappingURL=src_app_6d5f0070._.js.map