{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/dashboard/agents-view.tsx"],"sourcesContent":["\n\"use client\";\n\nimport * as React from \"react\";\nimport {\n    MoreHorizontal,\n    Search,\n} from \"lucide-react\";\n\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n    Card,\n    CardContent,\n    CardDescription,\n    CardHeader,\n    CardTitle,\n} from \"@/components/ui/card\";\nimport {\n    DropdownMenu,\n    DropdownMenuContent,\n    DropdownMenuItem,\n    DropdownMenuLabel,\n    DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\nimport {\n    Table,\n    TableBody,\n    TableCell,\n    TableHead,\n    TableHeader,\n    TableRow,\n} from \"@/components/ui/table\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\nimport { Input } from \"@/components/ui/input\";\nimport {\n    Select,\n    SelectContent,\n    SelectItem,\n    SelectTrigger,\n    SelectValue,\n} from \"@/components/ui/select\";\nimport type { Agent, UserProfile, ActivityLog } from \"@/types\";\nimport { AddAgentDialog } from \"./add-agent-dialog\";\nimport { PanelLeft } from \"lucide-react\";\nimport { cn } from \"@/lib/utils\";\nimport { Bar, Cell, XAxis, YAxis, BarChart as BarChartIcon, Tooltip as RechartsTooltip } from \"recharts\";\nimport { ChartContainer, ChartTooltipContent } from \"../ui/chart\";\nimport { deleteAgent, getAgentsByCompany, getActivityLogs } from \"@/app/actions\";\nimport { Skeleton } from \"../ui/skeleton\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { AlertDialog, AlertDialogAction, AlertDialogCancel, AlertDialogContent, AlertDialogDescription, AlertDialogFooter, AlertDialogHeader, AlertDialogTitle, AlertDialogTrigger } from \"../ui/alert-dialog\";\nimport { EditAgentDialog } from \"./edit-agent-dialog\";\nimport { ScrollArea } from \"../ui/scroll-area\";\n\n\nconst statusVariantMap: Record<string, \"bg-emerald-500\" | \"bg-amber-500\" | \"bg-slate-400\"> = {\n    Online: \"bg-emerald-500\",\n    Busy: \"bg-amber-500\",\n    Offline: \"bg-slate-400\",\n};\n\nexport function AgentsView({ onMenuClick, user }: { onMenuClick: () => void; user: UserProfile | null }) {\n  const [agents, setAgents] = React.useState<Agent[]>([]);\n  const [activityLogs, setActivityLogs] = React.useState<ActivityLog[]>([]);\n  const [isLoading, setIsLoading] = React.useState(true);\n  const [searchTerm, setSearchTerm] = React.useState(\"\");\n  const [statusFilter, setStatusFilter] = React.useState<string>(\"all\");\n  const [editingAgent, setEditingAgent] = React.useState<Agent | null>(null);\n  const { toast } = useToast();\n\n  React.useEffect(() => {\n    async function fetchData() {\n        if (user?.companyId) {\n            setIsLoading(true);\n            const [fetchedAgents, fetchedLogs] = await Promise.all([\n                getAgentsByCompany(user.companyId),\n                getActivityLogs(user.companyId)\n            ]);\n            setAgents(fetchedAgents);\n            setActivityLogs(fetchedLogs);\n            setIsLoading(false);\n        }\n    }\n    fetchData();\n  }, [user]);\n\n\n  const handleAgentAdd = (newAgent: Agent) => {\n    setAgents((prev) => [newAgent, ...prev]);\n  };\n\n  const handleAgentUpdate = (updatedAgent: Agent) => {\n    setAgents(prev => prev.map(a => a.id === updatedAgent.id ? updatedAgent : a));\n  }\n\n  const handleRemoveAgent = async (agentId: string, agentName: string) => {\n      const result = await deleteAgent(agentId, user?.companyId, user?.name);\n      if (result.success) {\n          setAgents(prev => prev.filter(a => a.id !== agentId));\n          toast({\n              title: \"Agent Removed\",\n              description: `Agent \"${agentName}\" has been removed.`,\n          });\n      } else {\n           toast({\n              variant: 'destructive',\n              title: \"Failed to remove agent\",\n              description: result.message,\n           });\n      }\n  }\n  \n  const filteredAgents = React.useMemo(() => {\n    return agents.filter(agent => {\n        const name = agent.name || '';\n        const email = agent.email || '';\n        const status = agent.status || 'Offline';\n\n        const matchesSearch = name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                              email.toLowerCase().includes(searchTerm.toLowerCase());\n        const matchesStatus = statusFilter === 'all' || status === statusFilter;\n        return matchesSearch && matchesStatus;\n    });\n  }, [agents, searchTerm, statusFilter]);\n\n  const mostActiveAgents = React.useMemo(() => {\n    return [...agents]\n        .sort((a, b) => (b.conversationsToday || 0) - (a.conversationsToday || 0))\n        .slice(0, 3);\n  }, [agents]);\n\n    const parseTimeToSeconds = (timeStr?: string): number => {\n        if (!timeStr) return 0;\n        let totalSeconds = 0;\n        const minMatch = timeStr.match(/(\\d+)m/);\n        const secMatch = timeStr.match(/(\\d+)s/);\n        if (minMatch) totalSeconds += parseInt(minMatch[1]) * 60;\n        if (secMatch) totalSeconds += parseInt(secMatch[1]);\n        return totalSeconds;\n    };\n\n  const responseTimeData = React.useMemo(() => {\n      const chartColors = [\"hsl(var(--chart-1))\", \"hsl(var(--chart-2))\", \"hsl(var(--chart-3))\", \"hsl(var(--chart-4))\", \"hsl(var(--chart-5))\"];\n      return agents.map((agent, index) => ({\n          name: agent.name.split(' ')[0],\n          time: parseTimeToSeconds(agent.avgResponseTime),\n          fill: chartColors[index % chartColors.length]\n      }));\n  }, [agents]);\n\n\n  if (user?.role !== 'admin' && user?.role !== 'super_agent') {\n      return (\n          <div className=\"flex h-screen w-full flex-col bg-background text-foreground\">\n             <header className=\"flex items-center justify-between p-4 border-b\">\n                <div className=\"flex items-center gap-2\">\n                    <Button variant=\"ghost\" size=\"icon\" className=\"md:hidden\" onClick={onMenuClick}>\n                        <PanelLeft className=\"h-5 w-5\" />\n                        <span className=\"sr-only\">Open Menu</span>\n                    </Button>\n                    <h1 className=\"text-2xl font-bold\">Access Denied</h1>\n                </div>\n            </header>\n            <main className=\"flex-1 flex items-center justify-center p-4\">\n                <Card className=\"w-full max-w-md\">\n                    <CardHeader>\n                        <CardTitle>Permission Required</CardTitle>\n                        <CardDescription>\n                            You do not have permission to view this page. This area is restricted to administrators and super agents.\n                        </CardDescription>\n                    </CardHeader>\n                </Card>\n            </main>\n          </div>\n      )\n  }\n\n  return (\n    <div className=\"flex h-screen w-full flex-col bg-background text-foreground\">\n      <header className=\"flex flex-col sm:flex-row items-start sm:items-center justify-between gap-4 p-4 border-b\">\n        <div className=\"flex items-center gap-2\">\n            <Button variant=\"ghost\" size=\"icon\" className=\"md:hidden\" onClick={onMenuClick}>\n                <PanelLeft className=\"h-5 w-5\" />\n                <span className=\"sr-only\">Open Menu</span>\n            </Button>\n            <h1 className=\"text-2xl font-bold\">Agents &amp; Team Management</h1>\n        </div>\n        <div className=\"flex items-center gap-2 w-full sm:w-auto\">\n            <div className=\"relative flex-1 sm:flex-initial\">\n                <Search className=\"absolute left-2.5 top-2.5 h-4 w-4 text-muted-foreground\" />\n                <Input\n                    type=\"search\"\n                    placeholder=\"Search agents...\"\n                    className=\"pl-8 sm:w-64\"\n                    value={searchTerm}\n                    onChange={(e) => setSearchTerm(e.target.value)}\n                />\n            </div>\n            <Select onValueChange={setStatusFilter} defaultValue=\"all\">\n                <SelectTrigger className=\"w-[120px]\">\n                    <SelectValue placeholder=\"Status\" />\n                </SelectTrigger>\n                <SelectContent>\n                    <SelectItem value=\"all\">All</SelectItem>\n                    <SelectItem value=\"Online\">Online</SelectItem>\n                    <SelectItem value=\"Busy\">Busy</SelectItem>\n                    <SelectItem value=\"Offline\">Offline</SelectItem>\n                </SelectContent>\n            </Select>\n            <AddAgentDialog onAgentAdd={handleAgentAdd} user={user} />\n        </div>\n      </header>\n      <main className=\"flex-1 overflow-auto p-4 space-y-8\">\n        <Card>\n          <CardHeader>\n            <CardTitle>Agent Directory</CardTitle>\n            <CardDescription>\n              Manage your team of support agents.\n            </CardDescription>\n          </CardHeader>\n          <CardContent>\n            <Table>\n              <TableHeader>\n                <TableRow>\n                  <TableHead>Agent</TableHead>\n                  <TableHead>Role</TableHead>\n                  <TableHead>Status</TableHead>\n                  <TableHead className=\"text-center\">Conversations</TableHead>\n                  <TableHead className=\"text-center\">Avg. Response</TableHead>\n                  <TableHead className=\"text-center\">CSAT</TableHead>\n                  <TableHead>\n                    <span className=\"sr-only\">Actions</span>\n                  </TableHead>\n                </TableRow>\n              </TableHeader>\n              <TableBody>\n                {isLoading ? (\n                    Array.from({ length: 4 }).map((_, i) => (\n                        <TableRow key={i}>\n                            <TableCell>\n                                <div className=\"flex items-center gap-3\">\n                                    <Skeleton className=\"h-10 w-10 rounded-full\" />\n                                    <div className=\"space-y-2\">\n                                        <Skeleton className=\"h-4 w-[150px]\" />\n                                        <Skeleton className=\"h-3 w-[200px]\" />\n                                    </div>\n                                </div>\n                            </TableCell>\n                            <TableCell><Skeleton className=\"h-6 w-20\" /></TableCell>\n                            <TableCell><Skeleton className=\"h-6 w-20\" /></TableCell>\n                            <TableCell className=\"text-center\"><Skeleton className=\"h-6 w-8 mx-auto\" /></TableCell>\n                            <TableCell className=\"text-center\"><Skeleton className=\"h-6 w-12 mx-auto\" /></TableCell>\n                            <TableCell className=\"text-center\"><Skeleton className=\"h-6 w-10 mx-auto\" /></TableCell>\n                            <TableCell><Skeleton className=\"h-8 w-8 ml-auto\" /></TableCell>\n                        </TableRow>\n                    ))\n                ) : filteredAgents.map((agent) => (\n                  <TableRow key={agent.id}>\n                    <TableCell>\n                      <div className=\"flex items-center gap-3\">\n                        <Avatar className=\"h-10 w-10\">\n                          <AvatarImage src={agent.avatar} alt={agent.name} />\n                          <AvatarFallback>{agent.name.charAt(0)}</AvatarFallback>\n                        </Avatar>\n                        <div>\n                            <div className=\"font-medium\">{agent.name}</div>\n                            <div className=\"text-sm text-muted-foreground\">{agent.email}</div>\n                        </div>\n                      </div>\n                    </TableCell>\n                    <TableCell>\n                      <Badge variant=\"outline\" className=\"capitalize\">{agent.role.replace(\"_\", \" \")}</Badge>\n                    </TableCell>\n                    <TableCell>\n                        <div className=\"flex items-center gap-2\">\n                           <span className={cn(\"h-2.5 w-2.5 rounded-full\", statusVariantMap[agent.status || 'Offline'])}></span>\n                           <span>{agent.status || 'Offline'}</span>\n                        </div>\n                    </TableCell>\n                    <TableCell className=\"text-center\">{agent.conversationsToday || 0}</TableCell>\n                    <TableCell className=\"text-center\">{agent.avgResponseTime || 'N/A'}</TableCell>\n                    <TableCell className=\"text-center\">{agent.csat ? `${agent.csat}%` : 'N/A'}</TableCell>\n                    <TableCell>\n                      <AlertDialog>\n                        <DropdownMenu>\n                          <DropdownMenuTrigger asChild>\n                            <Button aria-haspopup=\"true\" size=\"icon\" variant=\"ghost\">\n                              <MoreHorizontal className=\"h-4 w-4\" />\n                              <span className=\"sr-only\">Toggle menu</span>\n                            </Button>\n                          </DropdownMenuTrigger>\n                          <DropdownMenuContent align=\"end\">\n                            <DropdownMenuLabel>Actions</DropdownMenuLabel>\n                            <DropdownMenuItem onClick={() => setEditingAgent(agent)}>Edit</DropdownMenuItem>\n                             <AlertDialogTrigger asChild>\n                                <DropdownMenuItem className=\"text-destructive focus:text-destructive\">Remove</DropdownMenuItem>\n                             </AlertDialogTrigger>\n                          </DropdownMenuContent>\n                        </DropdownMenu>\n                        <AlertDialogContent>\n                            <AlertDialogHeader>\n                                <AlertDialogTitle>Are you absolutely sure?</AlertDialogTitle>\n                                <AlertDialogDescription>\n                                    This action cannot be undone. This will permanently remove the agent \"{agent.name}\" and their associated data.\n                                </AlertDialogDescription>\n                            </AlertDialogHeader>\n                            <AlertDialogFooter>\n                                <AlertDialogCancel>Cancel</AlertDialogCancel>\n                                <AlertDialogAction\n                                    onClick={() => handleRemoveAgent(agent.id, agent.name)}\n                                    className={cn(\n                                        \"bg-destructive text-destructive-foreground hover:bg-destructive/90\"\n                                    )}\n                                >\n                                    Yes, remove agent\n                                </AlertDialogAction>\n                            </AlertDialogFooter>\n                        </AlertDialogContent>\n                      </AlertDialog>\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </CardContent>\n        </Card>\n\n        <div>\n            <h2 className=\"text-2xl font-bold mb-4\">Agent Performance</h2>\n            <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-3\">\n                <Card>\n                    <CardHeader>\n                        <CardTitle>Most Active Agents</CardTitle>\n                        <CardDescription>Agents with the most conversations today.</CardDescription>\n                    </CardHeader>\n                    <CardContent>\n                       {isLoading ? (\n                            <div className=\"space-y-4\">\n                                {Array.from({ length: 3 }).map((_, i) => (\n                                    <div key={i} className=\"flex items-center gap-4\">\n                                        <Skeleton className=\"h-10 w-10 rounded-full\" />\n                                        <Skeleton className=\"h-4 flex-1\" />\n                                        <Skeleton className=\"h-6 w-8\" />\n                                    </div>\n                                ))}\n                            </div>\n                       ) : (\n                            <ul className=\"space-y-4\">\n                                {mostActiveAgents.map(agent => (\n                                    <li key={agent.id} className=\"flex items-center gap-4\">\n                                        <Avatar>\n                                            <AvatarImage src={agent.avatar} alt={agent.name} />\n                                            <AvatarFallback>{agent.name.charAt(0)}</AvatarFallback>\n                                        </Avatar>\n                                        <div className=\"flex-1\">{agent.name}</div>\n                                        <div className=\"font-bold\">{agent.conversationsToday || 0}</div>\n                                    </li>\n                                ))}\n                            </ul>\n                       )}\n                    </CardContent>\n                </Card>\n                <Card className=\"lg:col-span-2\">\n                    <CardHeader>\n                        <CardTitle>Response Time Comparison</CardTitle>\n                        <CardDescription>Average response time in seconds.</CardDescription>\n                    </CardHeader>\n                    <CardContent>\n                       {isLoading ? (\n                            <div className=\"h-64 flex items-center justify-center\">\n                                <Skeleton className=\"h-full w-full\" />\n                            </div>\n                       ) : (\n                            <ChartContainer config={{}} className=\"h-64\">\n                                <BarChartIcon data={responseTimeData}>\n                                    <XAxis dataKey=\"name\" tickLine={false} axisLine={false} />\n                                    <YAxis hide />\n                                    <RechartsTooltip cursor={false} content={<ChartTooltipContent indicator=\"dot\" />} />\n                                    <Bar dataKey=\"time\" radius={4}>\n                                        {responseTimeData.map(entry => (\n                                            <Cell key={entry.name} fill={entry.fill} />\n                                        ))}\n                                    </Bar>\n                                </BarChartIcon>\n                            </ChartContainer>\n                       )}\n                    </CardContent>\n                </Card>\n            </div>\n        </div>\n\n        <Card>\n            <CardHeader>\n                <CardTitle>Recent Team Activity</CardTitle>\n                <CardDescription>An audit trail of actions taken by agents.</CardDescription>\n            </CardHeader>\n            <CardContent>\n                <ScrollArea className=\"h-72\">\n                    <Table>\n                        <TableHeader>\n                            <TableRow>\n                                <TableHead>Agent</TableHead>\n                                <TableHead>Action</TableHead>\n                                <TableHead>Details</TableHead>\n                                <TableHead className=\"text-right\">Timestamp</TableHead>\n                            </TableRow>\n                        </TableHeader>\n                        <TableBody>\n                            {isLoading ? (\n                                Array.from({ length: 5 }).map((_, i) => (\n                                    <TableRow key={i}>\n                                        <TableCell><Skeleton className=\"h-4 w-[120px]\" /></TableCell>\n                                        <TableCell><Skeleton className=\"h-4 w-[100px]\" /></TableCell>\n                                        <TableCell><Skeleton className=\"h-4 w-[200px]\" /></TableCell>\n                                        <TableCell className=\"text-right\"><Skeleton className=\"h-4 w-[150px] ml-auto\" /></TableCell>\n                                    </TableRow>\n                                ))\n                            ) : activityLogs.map(log => (\n                                <TableRow key={log.id}>\n                                    <TableCell>{log.agentName}</TableCell>\n                                    <TableCell><Badge variant=\"secondary\">{log.action}</Badge></TableCell>\n                                    <TableCell>{log.details}</TableCell>\n                                    <TableCell className=\"text-right\">{new Date(log.timestamp).toLocaleString()}</TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </ScrollArea>\n            </CardContent>\n        </Card>\n      </main>\n      {editingAgent && (\n        <EditAgentDialog \n            agent={editingAgent} \n            open={!!editingAgent} \n            onOpenChange={(isOpen) => !isOpen && setEditingAgent(null)}\n            onAgentUpdate={handleAgentUpdate}\n        />\n      )}\n    </div>\n  );\n}\n\n    \n    \n\n    \n\n    "],"names":[],"mappings":"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","debugId":null}}]
}