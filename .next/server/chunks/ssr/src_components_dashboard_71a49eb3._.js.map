{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/dashboard/add-agent-dialog.tsx"],"sourcesContent":["\n\"use client\";\n\nimport * as React from \"react\";\nimport { z } from \"zod\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n  DialogClose,\n} from \"@/components/ui/dialog\";\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport type { Agent, AgentRole } from \"@/types\";\n\nconst agentFormSchema = z.object({\n  name: z.string().min(2, { message: \"Name must be at least 2 characters.\" }),\n  email: z.string().email({ message: \"Please enter a valid email.\" }),\n  password: z\n    .string()\n    .min(8, { message: \"Password must be at least 8 characters.\" }),\n  phone: z.string().min(10, { message: \"Please enter a valid phone number.\" }),\n  role: z.enum([\"admin\", \"agent\", \"super_agent\"]),\n});\n\ntype AgentFormValues = z.infer<typeof agentFormSchema>;\n\ntype AddAgentDialogProps = {\n    onAgentAdd: (agent: Agent) => void;\n};\n\nexport function AddAgentDialog({ onAgentAdd }: AddAgentDialogProps) {\n  const [open, setOpen] = React.useState(false);\n  const { toast } = useToast();\n  const form = useForm<AgentFormValues>({\n    resolver: zodResolver(agentFormSchema),\n    defaultValues: {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      phone: \"\",\n      role: \"agent\",\n    },\n  });\n\n  function onSubmit(data: AgentFormValues) {\n    const newAgent: Agent = {\n        id: new Date().toISOString(),\n        ...data,\n        avatar: `https://picsum.photos/seed/${data.name}/100/100`,\n        role: data.role as AgentRole,\n        status: \"Offline\",\n        conversationsToday: 0,\n        avgResponseTime: \"N/A\",\n        csat: 90 + Math.floor(Math.random() * 10), // Random high CSAT for new agent\n    };\n    onAgentAdd(newAgent);\n\n    toast({\n      title: \"Agent Created\",\n      description: `New agent \"${data.name}\" has been added successfully.`,\n    });\n    \n    form.reset();\n    setOpen(false);\n  }\n\n  return (\n    <Dialog open={open} onOpenChange={setOpen}>\n      <DialogTrigger asChild>\n        <Button>Add New Agent</Button>\n      </DialogTrigger>\n      <DialogContent className=\"sm:max-w-[425px]\">\n        <DialogHeader>\n          <DialogTitle>Add New Agent</DialogTitle>\n          <DialogDescription>\n            Fill in the details to add a new agent to your team.\n          </DialogDescription>\n        </DialogHeader>\n        <Form {...form}>\n          <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-4\">\n            <FormField\n              control={form.control}\n              name=\"name\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Name</FormLabel>\n                  <FormControl>\n                    <Input placeholder=\"John Doe\" {...field} />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n            <FormField\n              control={form.control}\n              name=\"email\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Email</FormLabel>\n                  <FormControl>\n                    <Input\n                      type=\"email\"\n                      placeholder=\"john.doe@example.com\"\n                      {...field}\n                    />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n            <FormField\n              control={form.control}\n              name=\"password\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Password</FormLabel>\n                  <FormControl>\n                    <Input type=\"password\" {...field} />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n            <FormField\n              control={form.control}\n              name=\"phone\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Phone Number</FormLabel>\n                  <FormControl>\n                    <Input placeholder=\"+1 234 567 890\" {...field} />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n            <FormField\n              control={form.control}\n              name=\"role\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Role</FormLabel>\n                  <Select\n                    onValueChange={field.onChange}\n                    defaultValue={field.value}\n                  >\n                    <FormControl>\n                      <SelectTrigger>\n                        <SelectValue placeholder=\"Select a role\" />\n                      </SelectTrigger>\n                    </FormControl>\n                    <SelectContent>\n                      <SelectItem value=\"agent\">Agent</SelectItem>\n                      <SelectItem value=\"super_agent\">Super Agent</SelectItem>\n                      <SelectItem value=\"admin\">Admin</SelectItem>\n                    </SelectContent>\n                  </Select>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n            <DialogFooter>\n              <DialogClose asChild>\n                <Button variant=\"outline\">Cancel</Button>\n              </DialogClose>\n              <Button type=\"submit\">Create Agent</Button>\n            </DialogFooter>\n          </form>\n        </Form>\n      </DialogContent>\n    </Dialog>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 452, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/dashboard/new-chat-dialog.tsx"],"sourcesContent":["\n\"use client\";\n\nimport * as React from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n  DialogClose,\n} from \"@/components/ui/dialog\";\nimport { Input } from \"@/components/ui/input\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport type { User } from \"@/types\";\nimport { Search, UserPlus, ArrowLeft, Send } from \"lucide-react\";\nimport { ScrollArea } from \"../ui/scroll-area\";\nimport { Checkbox } from \"../ui/checkbox\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"../ui/avatar\";\nimport { Label } from \"../ui/label\";\nimport { Separator } from \"../ui/separator\";\nimport { Textarea } from \"../ui/textarea\";\nimport { Badge } from \"../ui/badge\";\n\ntype NewChatDialogProps = {\n  children: React.ReactNode;\n  contacts: User[];\n  onStartChat: (users: User[], message: string) => void;\n};\n\nexport function NewChatDialog({ children, contacts, onStartChat }: NewChatDialogProps) {\n  const [open, setOpen] = React.useState(false);\n  const [searchTerm, setSearchTerm] = React.useState(\"\");\n  const [selectedContacts, setSelectedContacts] = React.useState<User[]>([]);\n  const [newContactInput, setNewContactInput] = React.useState(\"\");\n  const [view, setView] = React.useState<'select' | 'compose'>('select');\n  const [message, setMessage] = React.useState('');\n  const { toast } = useToast();\n\n  const filteredContacts = contacts.filter(\n    (contact) =>\n      contact.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      contact.email?.toLowerCase().includes(searchTerm.toLowerCase())\n  );\n\n  const handleSelectContact = (contact: User) => {\n    setSelectedContacts((prev) =>\n      prev.some((c) => c.id === contact.id)\n        ? prev.filter((c) => c.id !== contact.id)\n        : [...prev, contact]\n    );\n  };\n\n  const handleSelectAll = (checked: boolean) => {\n    if (checked) {\n      setSelectedContacts(filteredContacts);\n    } else {\n      setSelectedContacts([]);\n    }\n  }\n\n  const handleNext = () => {\n    const allUsersToChat = [...selectedContacts];\n\n    if (newContactInput.trim()) {\n        if (newContactInput.includes('@') || /^\\+?[0-9\\s-]+$/.test(newContactInput)) {\n            const newUser: User = {\n                id: `new-${new Date().toISOString()}`,\n                name: newContactInput,\n                avatar: `https://picsum.photos/seed/${newContactInput}/100/100`,\n                online: false,\n                email: newContactInput.includes('@') ? newContactInput : undefined,\n                phone: !newContactInput.includes('@') ? newContactInput : undefined,\n            }\n            // Avoid duplicates\n            if (!allUsersToChat.some(u => u.email === newUser.email || u.phone === newUser.phone)) {\n                 allUsersToChat.push(newUser);\n            }\n        } else {\n            toast({\n                variant: 'destructive',\n                title: \"Invalid Input\",\n                description: \"Please enter a valid email address or phone number for the new contact.\",\n            })\n            return;\n        }\n    }\n\n    if (allUsersToChat.length === 0) {\n        toast({\n            variant: 'destructive',\n            title: \"No recipients selected\",\n            description: \"Please select at least one contact or enter a new one.\",\n        })\n        return;\n    }\n    \n    setSelectedContacts(allUsersToChat);\n    setView('compose');\n  }\n\n  const handleSend = () => {\n    if (message.trim().length === 0) {\n        toast({\n            variant: 'destructive',\n            title: \"Empty Message\",\n            description: \"Please write a message to send.\",\n        })\n        return;\n    }\n    onStartChat(selectedContacts, message);\n    resetState();\n  }\n\n  const resetState = () => {\n    setOpen(false);\n    setView('select');\n    setSelectedContacts([]);\n    setNewContactInput(\"\");\n    setSearchTerm(\"\");\n    setMessage(\"\");\n  }\n  \n  React.useEffect(() => {\n    if(!open) {\n        // Reset state when dialog is closed\n        setTimeout(resetState, 300);\n    }\n  }, [open]);\n\n  const numSelected = selectedContacts.length + (newContactInput.trim() ? (selectedContacts.some(c => c.name === newContactInput) ? 0 : 1) : 0);\n\n  return (\n    <Dialog open={open} onOpenChange={setOpen}>\n      <DialogTrigger asChild>{children}</DialogTrigger>\n      <DialogContent className=\"sm:max-w-md flex flex-col\">\n        {view === 'select' ? (\n          <>\n            <DialogHeader>\n              <DialogTitle>Start New Chat</DialogTitle>\n              <DialogDescription>\n                Select contacts or enter a new email/phone number.\n              </DialogDescription>\n            </DialogHeader>\n            \n            <div className=\"pr-6\">\n                <div className=\"relative\">\n                    <Search className=\"absolute left-3 top-1/2 -translate-y-1/2 h-4 w-4 text-muted-foreground\" />\n                    <Input\n                    placeholder=\"Search contacts...\"\n                    className=\"pl-9\"\n                    value={searchTerm}\n                    onChange={(e) => setSearchTerm(e.target.value)}\n                    />\n                </div>\n            </div>\n\n            <ScrollArea className=\"flex-1 -mr-6 pr-6\">\n                <div className=\"space-y-2\">\n                    <div className=\"flex items-center gap-3 p-2\">\n                         <Checkbox \n                            id=\"select-all\" \n                            checked={selectedContacts.length === filteredContacts.length && filteredContacts.length > 0}\n                            onCheckedChange={handleSelectAll}\n                        />\n                        <Label htmlFor=\"select-all\" className=\"font-medium cursor-pointer\">\n                            Select All\n                        </Label>\n                    </div>\n                    <Separator />\n                    {filteredContacts.map(contact => (\n                        <div key={contact.id} className=\"flex items-center gap-3 p-2 rounded-md hover:bg-muted\">\n                            <Checkbox \n                                id={`contact-${contact.id}`} \n                                checked={selectedContacts.some(c => c.id === contact.id)}\n                                onCheckedChange={() => handleSelectContact(contact)}\n                            />\n                            <Label htmlFor={`contact-${contact.id}`} className=\"flex-1 flex items-center gap-3 cursor-pointer\">\n                                <Avatar className=\"h-9 w-9\">\n                                    <AvatarImage src={contact.avatar} alt={contact.name} data-ai-hint=\"person portrait\" />\n                                    <AvatarFallback>{contact.name.charAt(0)}</AvatarFallback>\n                                </Avatar>\n                                <div className=\"flex-1\">\n                                    <p className=\"font-medium\">{contact.name}</p>\n                                    <p className=\"text-xs text-muted-foreground\">{contact.email || contact.phone}</p>\n                                </div>\n                            </Label>\n                        </div>\n                    ))}\n                    {filteredContacts.length === 0 && (\n                        <p className=\"text-center text-sm text-muted-foreground py-4\">No contacts found.</p>\n                    )}\n                </div>\n            </ScrollArea>\n            \n            <div className=\"pr-6\">\n                <Separator className=\"my-4\" />\n                <Label htmlFor=\"new-contact\" className=\"text-sm font-medium\">New Contact</Label>\n                <div className=\"relative mt-2\">\n                    <UserPlus className=\"absolute left-3 top-1/2 -translate-y-1/2 h-4 w-4 text-muted-foreground\" />\n                    <Input\n                    id=\"new-contact\"\n                    placeholder=\"Enter email or phone number...\"\n                    className=\"pl-9\"\n                    value={newContactInput}\n                    onChange={(e) => setNewContactInput(e.target.value)}\n                    />\n                </div>\n            </div>\n\n            <DialogFooter className=\"pt-4 pr-6\">\n              <DialogClose asChild>\n                <Button variant=\"outline\">Cancel</Button>\n              </DialogClose>\n              <Button onClick={handleNext} disabled={numSelected === 0}>\n                Next ({numSelected})\n              </Button>\n            </DialogFooter>\n          </>\n        ) : (\n          <>\n             <DialogHeader>\n                <div className=\"flex items-center gap-2\">\n                    <Button variant=\"ghost\" size=\"icon\" className=\"-ml-2\" onClick={() => setView('select')}>\n                        <ArrowLeft className=\"h-4 w-4\" />\n                    </Button>\n                    <div>\n                        <DialogTitle>Compose Message</DialogTitle>\n                        <DialogDescription>\n                            Your message will be sent to {selectedContacts.length} recipient(s).\n                        </DialogDescription>\n                    </div>\n                </div>\n            </DialogHeader>\n\n            <div className=\"flex flex-wrap gap-1 p-2 border rounded-md\">\n                {selectedContacts.map(c => (\n                    <Badge key={c.id} variant=\"secondary\">{c.name}</Badge>\n                ))}\n            </div>\n\n            <Textarea \n                placeholder=\"Type your message here...\"\n                rows={5}\n                value={message}\n                onChange={(e) => setMessage(e.target.value)}\n            />\n\n            <DialogFooter className=\"pt-4\">\n              <Button variant=\"outline\" onClick={() => setView('select')}>Back</Button>\n              <Button onClick={handleSend} disabled={message.trim().length === 0}>\n                <Send className=\"mr-2 h-4 w-4\" />\n                Send Message\n              </Button>\n            </DialogFooter>\n          </>\n        )}\n      </DialogContent>\n    </Dialog>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1012, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/dashboard/vertical-nav.tsx"],"sourcesContent":["\n\"use client\";\n\nimport * as React from \"react\";\nimport {\n  MessageSquare,\n  BookUser,\n  Settings,\n  Users,\n  Megaphone,\n  LayoutDashboard,\n  Send,\n  BarChart,\n  Award,\n  LogOut,\n  User as UserIcon\n} from \"lucide-react\";\n\nimport { cn } from \"@/lib/utils\";\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\";\nimport type { View } from \"@/app/page\";\nimport type { UserProfile } from \"@/types\";\nimport { Sheet, SheetContent, SheetHeader, SheetTitle } from \"../ui/sheet\";\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"../ui/avatar\";\nimport { Button } from \"../ui/button\";\n\n\nconst adminNavItems = [\n  { icon: LayoutDashboard, label: \"Dashboard\" as View },\n  { icon: MessageSquare, label: \"Chat\" as View,},\n  { icon: BookUser, label: \"Contacts\" as View },\n  { icon: Users, label: \"Agents\" as View },\n  { icon: Send, label: \"Campaigns\" as View },\n  { icon: Megaphone, label: \"Announcements\" as View },\n];\n\nconst superAgentNavItems = [\n  { icon: MessageSquare, label: \"Chat\" as View },\n  { icon: BookUser, label: \"Contacts\" as View },\n  { icon: Users, label: \"Agents\" as View },\n  { icon: Send, label: \"Campaigns\" as View },\n  { icon: Megaphone, label: \"Announcements\" as View },\n  { icon: Award, label: \"My Performance\" as View },\n];\n\nconst agentNavItems = [\n  { icon: MessageSquare, label: \"Chat\" as View },\n  { icon: BookUser, label: \"Contacts\" as View },\n  { icon: Megaphone, label: \"Announcements\" as View },\n  { icon: Award, label: \"My Performance\" as View },\n];\n\n\ntype VerticalNavProps = {\n    activeView: View;\n    setActiveView: (view: View) => void;\n    user: UserProfile | null;\n    onLogout: () => void;\n    isOpen: boolean;\n    setIsOpen: (isOpen: boolean) => void;\n    onSettingsClick: () => void;\n};\n\nexport function VerticalNav({ activeView, setActiveView, user, onLogout, isOpen, setIsOpen, onSettingsClick }: VerticalNavProps) {\n  \n  const getNavItems = () => {\n    switch(user?.role) {\n        case 'admin':\n            return adminNavItems;\n        case 'super_agent':\n            return superAgentNavItems;\n        case 'agent':\n        default:\n            return agentNavItems;\n    }\n  }\n\n  const navItems = getNavItems();\n\n  const NavContent = () => (\n    <div className=\"flex h-full flex-col items-center justify-between bg-primary py-4\">\n        <nav className=\"flex flex-col items-center gap-4 px-2\">\n            {navItems.map((item) => (\n            <Tooltip key={item.label}>\n                <TooltipTrigger asChild>\n                <button\n                    onClick={() => {\n                        setActiveView(item.label)\n                        setIsOpen(false)\n                    }}\n                    className={cn(\n                    \"flex h-12 w-12 items-center justify-center rounded-lg text-primary-foreground transition-colors hover:bg-primary-foreground/10 hover:text-white\",\n                    activeView === item.label\n                        ? \"bg-accent text-accent-foreground\"\n                        : \"text-primary-foreground\"\n                    )}\n                >\n                    <item.icon className=\"h-6 w-6\" />\n                    <span className=\"sr-only\">{item.label}</span>\n                </button>\n                </TooltipTrigger>\n                <TooltipContent side=\"right\">{item.label}</TooltipContent>\n            </Tooltip>\n            ))}\n        </nav>\n        <div className=\"flex flex-col items-center gap-4 px-2\">\n             <DropdownMenu>\n              <Tooltip>\n                <TooltipTrigger asChild>\n                  <DropdownMenuTrigger asChild>\n                    <Button variant=\"ghost\" size=\"icon\" className=\"h-12 w-12 rounded-lg hover:bg-primary-foreground/10\">\n                        {user ? (\n                            <Avatar className=\"h-10 w-10\">\n                              <AvatarImage src={user.avatar} alt={user.name} data-ai-hint=\"person glasses\"/>\n                              <AvatarFallback>{user.name.charAt(0)}</AvatarFallback>\n                            </Avatar>\n                        ) : (\n                            <UserIcon className=\"h-6 w-6 text-primary-foreground\" />\n                        )}\n                        <span className=\"sr-only\">User Menu</span>\n                    </Button>\n                  </DropdownMenuTrigger>\n                </TooltipTrigger>\n                <TooltipContent side=\"right\">User Menu</TooltipContent>\n              </Tooltip>\n              <DropdownMenuContent align=\"end\" side=\"right\">\n                 {user ? (\n                     <>\n                       <DropdownMenuLabel>{user.name}</DropdownMenuLabel>\n                       <DropdownMenuSeparator />\n                       <DropdownMenuItem onClick={onSettingsClick}>\n                         <Settings className=\"mr-2 h-4 w-4\" />\n                         <span>Settings</span>\n                       </DropdownMenuItem>\n                       <DropdownMenuItem onClick={onLogout}>\n                         <LogOut className=\"mr-2 h-4 w-4\" />\n                         <span>Log out</span>\n                       </DropdownMenuItem>\n                     </>\n                 ) : null}\n              </DropdownMenuContent>\n            </DropdownMenu>\n        </div>\n    </div>\n  );\n\n  return (\n    <TooltipProvider>\n        {/* Mobile Nav */}\n        <Sheet open={isOpen} onOpenChange={setIsOpen}>\n            <SheetContent side=\"left\" className=\"p-0 w-[70px] border-none\">\n              <SheetHeader>\n                <SheetTitle className=\"sr-only\">Main Menu</SheetTitle>\n              </SheetHeader>\n              <NavContent />\n            </SheetContent>\n        </Sheet>\n        {/* Desktop Nav */}\n        <aside className=\"fixed inset-y-0 left-0 z-20 hidden h-full w-[70px] md:flex\">\n            <NavContent />\n        </aside>\n    </TooltipProvider>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1420, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/dashboard/contacts-view.tsx"],"sourcesContent":["\n\"use client\";\n\nimport * as React from \"react\";\nimport { User, Phone, Mail, Search, MessageSquare, ArrowLeft, PanelLeft, LogIn, UserCheck } from \"lucide-react\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription, CardFooter } from \"@/components/ui/card\";\nimport { Input } from \"@/components/ui/input\";\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\nimport type { User as ContactUser, Chat, Message, UserProfile, Agent } from \"@/types\";\nimport { cn } from \"@/lib/utils\";\nimport { Textarea } from \"../ui/textarea\";\nimport { Separator } from \"../ui/separator\";\nimport { mockUsers as initialMockUsers, mockChats, mockAgents } from \"@/lib/mock-data\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { Badge } from \"../ui/badge\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"../ui/select\";\n\n\ntype Note = {\n    id: number;\n    agent: string;\n    text: string;\n    timestamp: string;\n}\n\nconst exampleNotes: Note[] = [\n    { id: 1, agent: \"Sylvester Mayaya\", text: \"Customer is interested in the enterprise plan. Follow up next week.\", timestamp: \"2024-07-29 10:30 AM\" },\n    { id: 2, agent: \"Samuel Byalugaba\", text: \"Had a difficult call regarding a billing issue. Offered a 10% discount on next month's invoice.\", timestamp: \"2024-07-28 02:45 PM\" },\n    { id: 3, agent: \"Sylvester Mayaya\", text: \"Called to confirm delivery address. Everything is correct.\", timestamp: \"2024-07-27 11:15 AM\" },\n];\n\n\nconst ContactProfile = ({ contact, onAssign, chatHistory, onBack, user }: { contact: ContactUser, onAssign: (contactId: string, agentId: string) => void, chatHistory: Message[] | undefined, onBack?: () => void, user: UserProfile | null }) => {\n    const { toast } = useToast();\n    const [note, setNote] = React.useState(\"\");\n    const [notes, setNotes] = React.useState<Note[]>(exampleNotes);\n    const assignedAgent = mockAgents.find(a => a.id === contact.assignedAgentId);\n    \n    const handleSaveNote = () => {\n        if (!note.trim()) {\n            toast({\n                variant: \"destructive\",\n                title: \"Empty Note\",\n                description: \"Cannot save an empty note.\",\n            })\n            return;\n        }\n        \n        const newNote: Note = {\n            id: Date.now(),\n            agent: user?.name || \"Current Agent\",\n            text: note,\n            timestamp: new Date().toLocaleString(),\n        }\n\n        setNotes(prev => [newNote, ...prev]);\n\n        toast({\n            title: \"Note Saved\",\n            description: `Your note for ${contact.name} has been saved.`,\n        });\n        setNote(\"\");\n    }\n    \n    const handleAssignAgent = (agentId: string) => {\n        onAssign(contact.id, agentId);\n    }\n\n    return (\n        <Card className=\"h-full flex flex-col border-0 shadow-none md:border md:shadow-sm rounded-none md:rounded-lg\">\n            <CardHeader className=\"flex flex-row items-center gap-4\">\n                 {onBack && (\n                     <Button variant=\"ghost\" size=\"icon\" className=\"md:hidden -ml-2\" onClick={onBack}>\n                         <ArrowLeft className=\"h-5 w-5\" />\n                     </Button>\n                 )}\n                 <Avatar className=\"h-16 w-16\">\n                    <AvatarImage src={contact.avatar} alt={contact.name} data-ai-hint=\"person portrait\" />\n                    <AvatarFallback>{contact.name.charAt(0)}</AvatarFallback>\n                </Avatar>\n                <div className=\"flex-1\">\n                    <CardTitle className=\"text-2xl\">{contact.name}</CardTitle>\n                    <CardDescription>\n                       Last active: 2 hours ago\n                    </CardDescription>\n                </div>\n                 <Button variant=\"outline\"><MessageSquare className=\"h-4 w-4 mr-2\" /> Message</Button>\n            </CardHeader>\n            <CardContent className=\"flex-1 overflow-auto space-y-6 pt-0\">\n                 <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                    <div>\n                        <h3 className=\"text-sm font-medium text-muted-foreground mb-2\">Contact Details</h3>\n                        <div className=\"space-y-2 text-sm\">\n                            <div className=\"flex items-center gap-2\"><Mail className=\"h-4 w-4 text-muted-foreground\" /> <span>{contact.email}</span></div>\n                            <div className=\"flex items-center gap-2\"><Phone className=\"h-4 w-4 text-muted-foreground\" /> <span>{contact.phone}</span></div>\n                        </div>\n                    </div>\n                     <div>\n                        <h3 className=\"text-sm font-medium text-muted-foreground mb-2\">Assigned Agent</h3>\n                         {user?.role === 'admin' ? (\n                            <Select onValueChange={handleAssignAgent} defaultValue={assignedAgent?.id}>\n                                <SelectTrigger className=\"w-full\">\n                                    <SelectValue placeholder=\"Unassigned\" />\n                                </SelectTrigger>\n                                <SelectContent>\n                                    <SelectItem value=\"unassigned\">Unassigned</SelectItem>\n                                    {mockAgents.map(agent => (\n                                        <SelectItem key={agent.id} value={agent.id}>{agent.name}</SelectItem>\n                                    ))}\n                                </SelectContent>\n                            </Select>\n                         ) : (\n                            assignedAgent ? (\n                                <Badge variant=\"secondary\" className=\"flex items-center gap-2 w-fit\">\n                                    <Avatar className=\"h-5 w-5\">\n                                        <AvatarImage src={assignedAgent.avatar} alt={assignedAgent.name} data-ai-hint=\"person portrait\" />\n                                        <AvatarFallback>{assignedAgent.name.charAt(0)}</AvatarFallback>\n                                    </Avatar>\n                                    {assignedAgent.name}\n                                </Badge>\n                            ) : <Badge variant=\"outline\">Unassigned</Badge>\n                         )}\n                    </div>\n                </div>\n\n                <Separator />\n\n                <div>\n                    <h3 className=\"text-sm font-medium text-muted-foreground mb-4\">Agent Notes</h3>\n                    <div className=\"space-y-4\">\n                        <div className=\"flex gap-3\">\n                             <Avatar className=\"h-8 w-8\">\n                                <AvatarImage src={user?.avatar} alt={user?.name || \"\"} data-ai-hint=\"person portrait\" />\n                                <AvatarFallback>{user?.name ? user.name.charAt(0) : 'A'}</AvatarFallback>\n                            </Avatar>\n                             <div className=\"flex-1\">\n                                 <Textarea \n                                    placeholder=\"Add a private note for this contact...\" \n                                    rows={2}\n                                    value={note}\n                                    onChange={(e) => setNote(e.target.value)}\n                                />\n                                 <Button size=\"sm\" className=\"mt-2\" onClick={handleSaveNote}>Save Note</Button>\n                             </div>\n                        </div>\n                        <ScrollArea className=\"h-48\">\n                            <div className=\"space-y-4 pr-4\">\n                                {notes.map(note => (\n                                    <div key={note.id} className=\"text-sm border-l-2 pl-3\">\n                                        <p className=\"font-medium\">{note.text}</p>\n                                        <p className=\"text-xs text-muted-foreground mt-1\">- {note.agent} on {note.timestamp}</p>\n                                    </div>\n                                ))}\n                            </div>\n                        </ScrollArea>\n                    </div>\n                </div>\n                <Separator />\n                <div>\n                    <h3 className=\"text-sm font-medium text-muted-foreground mb-2\">Conversation History</h3>\n                    <ScrollArea className=\"h-64\">\n                         <div className=\"p-4 space-y-4 bg-muted/50 rounded-md\">\n                            {chatHistory?.length ? chatHistory.map((message) => {\n                                const isMe = message.sender === 'me';\n                                const sender = isMe ? null : message.sender as { name: string, avatar: string };\n                                return (\n                                    <div key={message.id} className={cn(\"flex items-end gap-2 text-sm\", isMe ? \"justify-end\" : \"justify-start\")}>\n                                        {!isMe && (\n                                            <Avatar className=\"h-6 w-6\">\n                                                <AvatarImage src={sender?.avatar} alt={sender?.name} data-ai-hint=\"person portrait\" />\n                                                <AvatarFallback>{sender?.name.charAt(0)}</AvatarFallback>\n                                            </Avatar>\n                                        )}\n                                        <div className={cn(\"max-w-xs rounded-lg px-3 py-2\", isMe ? \"bg-primary text-primary-foreground\" : \"bg-background\")}>\n                                            <p>{message.text}</p>\n                                            <p className={cn(\"text-xs mt-1 opacity-70\", isMe ? \"text-right\" : \"text-left\")}>{message.timestamp}</p>\n                                        </div>\n                                    </div>\n                                )\n                            }) : <p className=\"text-center text-muted-foreground\">No conversation history.</p>}\n                        </div>\n                    </ScrollArea>\n                </div>\n\n            </CardContent>\n        </Card>\n    )\n}\n\nconst EmptyState = () => (\n    <div className=\"hidden md:flex flex-col items-center justify-center h-full text-center p-8\">\n        <UserCheck className=\"h-16 w-16 text-muted-foreground/50\" />\n        <h2 className=\"mt-4 text-xl font-semibold\">Select a Contact</h2>\n        <p className=\"mt-1 text-muted-foreground\">Choose a contact from the list to view their profile and conversation history.</p>\n    </div>\n)\n\ntype ContactsViewProps = {\n  onMenuClick: () => void;\n  user: UserProfile | null;\n};\n\nexport function ContactsView({ onMenuClick, user }: ContactsViewProps) {\n  const [contacts, setContacts] = React.useState<ContactUser[]>(initialMockUsers);\n  const [searchTerm, setSearchTerm] = React.useState(\"\");\n  const [selectedContact, setSelectedContact] = React.useState<ContactUser | null>(null);\n  const { toast } = useToast();\n  \n  const filteredContacts = user ? contacts.filter(contact =>\n    contact.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n    contact.email?.toLowerCase().includes(searchTerm.toLowerCase()) ||\n    contact.phone?.toLowerCase().includes(searchTerm.toLowerCase())\n  ) : [];\n  \n  React.useEffect(() => {\n    if (user && window.innerWidth >= 768 && !selectedContact) {\n        setSelectedContact(contacts[0]);\n    } else if (!user) {\n        setSelectedContact(null);\n    }\n  }, [user, contacts])\n\n  const handleAssignAgent = (contactId: string, agentId: string) => {\n    const updatedContacts = contacts.map(c => \n        c.id === contactId ? { ...c, assignedAgentId: agentId } : c\n    );\n    setContacts(updatedContacts);\n    \n    if (selectedContact?.id === contactId) {\n        setSelectedContact(prev => prev ? { ...prev, assignedAgentId: agentId } : null);\n    }\n\n    const agent = mockAgents.find(a => a.id === agentId);\n    toast({\n      title: \"Contact Assigned\",\n      description: `${selectedContact?.name} has been assigned to ${agent?.name || 'Unassigned'}.`,\n    });\n  };\n\n  const selectedChatHistory = mockChats.find(chat => chat.user.email === selectedContact?.email)?.messages;\n\n  if (!user) {\n      return (\n          <div className=\"flex h-screen w-full flex-col items-center justify-center bg-background text-foreground\">\n               <div className=\"flex flex-col items-center justify-center h-full text-center p-8\">\n                    <LogIn className=\"h-12 w-12 text-primary\"/>\n                    <h2 className=\"mt-4 text-xl font-semibold\">Please Log In</h2>\n                    <p className=\"mt-1 text-muted-foreground\">Log in to view and manage your contacts.</p>\n                </div>\n          </div>\n      )\n  }\n\n  return (\n    <div className=\"flex h-screen w-full flex-col bg-background text-foreground\">\n    <header className=\"flex flex-col sm:flex-row items-start sm:items-center justify-between gap-4 p-4 border-b\">\n        <div className=\"flex items-center gap-2\">\n            <Button variant=\"ghost\" size=\"icon\" className=\"md:hidden\" onClick={onMenuClick}>\n                <PanelLeft className=\"h-5 w-5\" />\n                <span className=\"sr-only\">Open Menu</span>\n            </Button>\n            <h1 className=\"text-2xl font-bold\">Contacts</h1>\n        </div>\n        <div className=\"flex items-center gap-4 w-full sm:w-auto\">\n            <div className=\"relative w-full sm:w-64\">\n                <Search className=\"absolute left-3 top-1/2 -translate-y-1/2 h-4 w-4 text-muted-foreground\" />\n                <Input \n                    placeholder=\"Search contacts...\" \n                    className=\"pl-9\"\n                    value={searchTerm}\n                    onChange={(e) => setSearchTerm(e.target.value)}\n                />\n            </div>\n            <Button>Add Contact</Button>\n        </div>\n    </header>\n    <main className=\"flex-1 overflow-hidden grid grid-cols-1 md:grid-cols-3 lg:grid-cols-4\">\n        {/* Contact List */}\n        <div className={cn(\"md:col-span-1 lg:col-span-1 border-r flex flex-col\", selectedContact ? \"hidden md:flex\" : \"flex\")}>\n            <ScrollArea className=\"flex-1\">\n                <div className=\"flex flex-col gap-1 p-2\">\n                {filteredContacts.map((contact) => (\n                    <Card \n                        key={contact.email} \n                        onClick={() => setSelectedContact(contact)}\n                        className={cn(\"cursor-pointer hover:bg-muted/50\", selectedContact?.email === contact.email && \"bg-muted/80\")}\n                    >\n                        <CardHeader className=\"p-3\">\n                            <div className=\"flex items-center gap-3\">\n                                <Avatar className=\"h-10 w-10\">\n                                    <AvatarImage src={contact.avatar} alt={contact.name} data-ai-hint=\"person portrait\" />\n                                    <AvatarFallback>{contact.name.charAt(0)}</AvatarFallback>\n                                </Avatar>\n                                <div className=\"flex-1 min-w-0\">\n                                    <div className=\"font-medium truncate\">{contact.name}</div>\n                                    <div className=\"text-xs text-muted-foreground truncate\">{contact.email}</div>\n                                </div>\n                                {contact.assignedAgentId && (\n                                    <Badge variant=\"secondary\" className=\"h-5 text-xs\">\n                                        <UserCheck className=\"h-3 w-3 mr-1\" />\n                                        Assigned\n                                    </Badge>\n                                )}\n                            </div>\n                        </CardHeader>\n                    </Card>\n                ))}\n                </div>\n            </ScrollArea>\n        </div>\n        \n        {/* Contact Profile */}\n        <div className={cn(\"md:col-span-2 lg:col-span-3 overflow-auto\", selectedContact ? \"block\" : \"hidden md:block\")}>\n            {selectedContact ? (\n                <ContactProfile \n                    contact={selectedContact}\n                    onAssign={handleAssignAgent}\n                    chatHistory={selectedChatHistory} \n                    onBack={() => setSelectedContact(null)}\n                    user={user}\n                />\n            ) : (\n                <EmptyState />\n            )}\n        </div>\n    </main>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2417, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/dashboard/agents-view.tsx"],"sourcesContent":["\n\"use client\";\n\nimport * as React from \"react\";\nimport {\n    MoreHorizontal,\n    PlusCircle,\n    Search,\n    User,\n    Mail,\n    Phone,\n    ArrowDown,\n    ArrowUp,\n} from \"lucide-react\";\n\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n    Card,\n    CardContent,\n    CardDescription,\n    CardHeader,\n    CardTitle,\n} from \"@/components/ui/card\";\nimport {\n    DropdownMenu,\n    DropdownMenuContent,\n    DropdownMenuItem,\n    DropdownMenuLabel,\n    DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\nimport {\n    Table,\n    TableBody,\n    TableCell,\n    TableHead,\n    TableHeader,\n    TableRow,\n} from \"@/components/ui/table\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\nimport { Input } from \"@/components/ui/input\";\nimport {\n    Select,\n    SelectContent,\n    SelectItem,\n    SelectTrigger,\n    SelectValue,\n} from \"@/components/ui/select\";\nimport type { Agent, UserProfile, AgentPerformance } from \"@/types\";\nimport { AddAgentDialog } from \"./add-agent-dialog\";\nimport { mockAgents as initialMockAgents } from \"@/lib/mock-data\";\nimport { PanelLeft } from \"lucide-react\";\nimport { cn } from \"@/lib/utils\";\nimport { Accordion, AccordionContent, AccordionItem, AccordionTrigger } from \"../ui/accordion\";\nimport { Bar, BarChart, Cell, ResponsiveContainer, Tooltip, XAxis, YAxis } from \"recharts\";\nimport { ChartContainer, ChartTooltipContent } from \"../ui/chart\";\n\nconst statusVariantMap: Record<string, \"bg-emerald-500\" | \"bg-amber-500\" | \"bg-slate-400\"> = {\n    Online: \"bg-emerald-500\",\n    Busy: \"bg-amber-500\",\n    Offline: \"bg-slate-400\",\n};\n\nconst activityLogs = [\n  { id: 'log1', timestamp: '2024-08-01 10:05:14', agent: 'Samuel Byalugaba', action: 'Login', details: 'Logged in from IP 192.168.1.10' },\n  { id: 'log2', timestamp: '2024-08-01 10:07:21', agent: 'Sylvester Mayaya', action: 'Conversation Assigned', details: 'Assigned chat with Kelvin (#1)' },\n  { id: 'log3', timestamp: '2024-08-01 10:15:03', agent: 'Kelvin Malisa', action: 'Role Change', details: 'Role changed from Agent to Super Agent' },\n  { id: 'log4', timestamp: '2024-08-01 10:22:45', agent: 'Linaliz Ready', action: 'Message Sent', details: 'Sent message in chat with Diana' },\n  { id: 'log5', timestamp: '2024-08-01 10:30:00', agent: 'Samuel Byalugaba', action: 'Logout', details: 'Session duration: 24m 46s' },\n];\n\nconst mostActiveAgents = [\n    { name: 'Sylvester Mayaya', conversations: 25, avatar: \"https://picsum.photos/seed/sly/100/100\" },\n    { name: 'Kelvin Malisa', conversations: 15, avatar: \"https://picsum.photos/seed/kelvin/100/100\" },\n    { name: 'Samuel Byalugaba', conversations: 12, avatar: \"https://picsum.photos/seed/sam/100/100\" },\n];\n\nconst responseTimeData = [\n    { name: \"Samuel B.\", time: 105, fill: \"hsl(var(--chart-1))\" },\n    { name: \"Kelvin M.\", time: 90, fill: \"hsl(var(--chart-2))\" },\n    { name: \"Sylvester M.\", time: 130, fill: \"hsl(var(--chart-3))\" },\n    { name: \"Linaliz R.\", time: 185, fill: \"hsl(var(--chart-4))\" },\n];\n\nexport function AgentsView({ onMenuClick, user }: { onMenuClick: () => void; user: UserProfile | null }) {\n  const [agents, setAgents] = React.useState<Agent[]>(initialMockAgents);\n  const [searchTerm, setSearchTerm] = React.useState(\"\");\n  const [statusFilter, setStatusFilter] = React.useState<string>(\"all\");\n\n  const handleAgentAdd = (newAgent: Agent) => {\n    setAgents((prev) => [newAgent, ...prev]);\n  };\n  \n  const filteredAgents = React.useMemo(() => {\n    return agents.filter(agent => {\n        const matchesSearch = agent.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                              agent.email.toLowerCase().includes(searchTerm.toLowerCase());\n        const matchesStatus = statusFilter === 'all' || agent.status === statusFilter;\n        return matchesSearch && matchesStatus;\n    });\n  }, [agents, searchTerm, statusFilter]);\n\n  if (user?.role !== 'admin' && user?.role !== 'super_agent') {\n      return (\n          <div className=\"flex h-screen w-full flex-col bg-background text-foreground\">\n             <header className=\"flex items-center justify-between p-4 border-b\">\n                <div className=\"flex items-center gap-2\">\n                    <Button variant=\"ghost\" size=\"icon\" className=\"md:hidden\" onClick={onMenuClick}>\n                        <PanelLeft className=\"h-5 w-5\" />\n                        <span className=\"sr-only\">Open Menu</span>\n                    </Button>\n                    <h1 className=\"text-2xl font-bold\">Access Denied</h1>\n                </div>\n            </header>\n            <main className=\"flex-1 flex items-center justify-center p-4\">\n                <Card className=\"w-full max-w-md\">\n                    <CardHeader>\n                        <CardTitle>Permission Required</CardTitle>\n                        <CardDescription>\n                            You do not have permission to view this page. This area is restricted to administrators and super agents.\n                        </CardDescription>\n                    </CardHeader>\n                </Card>\n            </main>\n          </div>\n      )\n  }\n\n  return (\n    <div className=\"flex h-screen w-full flex-col bg-background text-foreground\">\n      <header className=\"flex flex-col sm:flex-row items-start sm:items-center justify-between gap-4 p-4 border-b\">\n        <div className=\"flex items-center gap-2\">\n            <Button variant=\"ghost\" size=\"icon\" className=\"md:hidden\" onClick={onMenuClick}>\n                <PanelLeft className=\"h-5 w-5\" />\n                <span className=\"sr-only\">Open Menu</span>\n            </Button>\n            <h1 className=\"text-2xl font-bold\">Agents & Team Management</h1>\n        </div>\n        <div className=\"flex items-center gap-2 w-full sm:w-auto\">\n            <div className=\"relative flex-1 sm:flex-initial\">\n                <Search className=\"absolute left-2.5 top-2.5 h-4 w-4 text-muted-foreground\" />\n                <Input\n                    type=\"search\"\n                    placeholder=\"Search agents...\"\n                    className=\"pl-8 sm:w-64\"\n                    value={searchTerm}\n                    onChange={(e) => setSearchTerm(e.target.value)}\n                />\n            </div>\n            <Select onValueChange={setStatusFilter} defaultValue=\"all\">\n                <SelectTrigger className=\"w-[120px]\">\n                    <SelectValue placeholder=\"Status\" />\n                </SelectTrigger>\n                <SelectContent>\n                    <SelectItem value=\"all\">All</SelectItem>\n                    <SelectItem value=\"Online\">Online</SelectItem>\n                    <SelectItem value=\"Busy\">Busy</SelectItem>\n                    <SelectItem value=\"Offline\">Offline</SelectItem>\n                </SelectContent>\n            </Select>\n            <AddAgentDialog onAgentAdd={handleAgentAdd} />\n        </div>\n      </header>\n      <main className=\"flex-1 overflow-auto p-4 space-y-8\">\n        <Card>\n          <CardHeader>\n            <CardTitle>Agent Directory</CardTitle>\n            <CardDescription>\n              Manage your team of support agents.\n            </CardDescription>\n          </CardHeader>\n          <CardContent>\n            <Table>\n              <TableHeader>\n                <TableRow>\n                  <TableHead>Agent</TableHead>\n                  <TableHead>Role</TableHead>\n                  <TableHead>Status</TableHead>\n                  <TableHead className=\"text-center\">Conversations</TableHead>\n                  <TableHead className=\"text-center\">Avg. Response</TableHead>\n                  <TableHead className=\"text-center\">CSAT</TableHead>\n                  <TableHead>\n                    <span className=\"sr-only\">Actions</span>\n                  </TableHead>\n                </TableRow>\n              </TableHeader>\n              <TableBody>\n                {filteredAgents.map((agent) => (\n                  <TableRow key={agent.id}>\n                    <TableCell>\n                      <div className=\"flex items-center gap-3\">\n                        <Avatar className=\"h-10 w-10\">\n                          <AvatarImage src={agent.avatar} alt={agent.name} />\n                          <AvatarFallback>{agent.name.charAt(0)}</AvatarFallback>\n                        </Avatar>\n                        <div>\n                            <div className=\"font-medium\">{agent.name}</div>\n                            <div className=\"text-sm text-muted-foreground\">{agent.email}</div>\n                        </div>\n                      </div>\n                    </TableCell>\n                    <TableCell>\n                      <Badge variant=\"outline\" className=\"capitalize\">{agent.role.replace(\"_\", \" \")}</Badge>\n                    </TableCell>\n                    <TableCell>\n                        <div className=\"flex items-center gap-2\">\n                           <span className={cn(\"h-2.5 w-2.5 rounded-full\", statusVariantMap[agent.status || 'Offline'])}></span>\n                           <span>{agent.status}</span>\n                        </div>\n                    </TableCell>\n                    <TableCell className=\"text-center\">{agent.conversationsToday}</TableCell>\n                    <TableCell className=\"text-center\">{agent.avgResponseTime}</TableCell>\n                    <TableCell className=\"text-center\">{agent.csat}%</TableCell>\n                    <TableCell>\n                      <DropdownMenu>\n                        <DropdownMenuTrigger asChild>\n                          <Button aria-haspopup=\"true\" size=\"icon\" variant=\"ghost\">\n                            <MoreHorizontal className=\"h-4 w-4\" />\n                            <span className=\"sr-only\">Toggle menu</span>\n                          </Button>\n                        </DropdownMenuTrigger>\n                        <DropdownMenuContent align=\"end\">\n                          <DropdownMenuLabel>Actions</DropdownMenuLabel>\n                          <DropdownMenuItem>Edit</DropdownMenuItem>\n                          <DropdownMenuItem>Remove</DropdownMenuItem>\n                        </DropdownMenuContent>\n                      </DropdownMenu>\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </CardContent>\n        </Card>\n\n        <div>\n            <h2 className=\"text-2xl font-bold mb-4\">Agent Performance</h2>\n            <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-3\">\n                <Card>\n                    <CardHeader>\n                        <CardTitle>Most Active Agents</CardTitle>\n                        <CardDescription>Agents with the most conversations today.</CardDescription>\n                    </CardHeader>\n                    <CardContent>\n                        <ul className=\"space-y-4\">\n                            {mostActiveAgents.map(agent => (\n                                <li key={agent.name} className=\"flex items-center gap-4\">\n                                    <Avatar>\n                                        <AvatarImage src={agent.avatar} alt={agent.name} />\n                                        <AvatarFallback>{agent.name.charAt(0)}</AvatarFallback>\n                                    </Avatar>\n                                    <div className=\"flex-1\">{agent.name}</div>\n                                    <div className=\"font-bold\">{agent.conversations}</div>\n                                </li>\n                            ))}\n                        </ul>\n                    </CardContent>\n                </Card>\n                <Card className=\"lg:col-span-2\">\n                    <CardHeader>\n                        <CardTitle>Response Time Comparison</CardTitle>\n                        <CardDescription>Average response time in seconds.</CardDescription>\n                    </CardHeader>\n                    <CardContent>\n                        <ChartContainer config={{}} className=\"h-64\">\n                            <BarChart data={responseTimeData}>\n                                <XAxis dataKey=\"name\" tickLine={false} axisLine={false} />\n                                <YAxis hide />\n                                <Tooltip cursor={false} content={<ChartTooltipContent indicator=\"dot\" />} />\n                                <Bar dataKey=\"time\" radius={4}>\n                                    {responseTimeData.map(entry => (\n                                        <Cell key={entry.name} fill={entry.fill} />\n                                    ))}\n                                </Bar>\n                            </BarChart>\n                        </ChartContainer>\n                    </CardContent>\n                </Card>\n            </div>\n        </div>\n\n        <Card>\n            <Accordion type=\"single\" collapsible>\n                <AccordionItem value=\"activity-logs\">\n                    <AccordionTrigger className=\"px-6\">\n                        <div className=\"flex flex-col items-start\">\n                            <CardTitle>Activity Logs</CardTitle>\n                            <CardDescription>An audit trail of all agent actions.</CardDescription>\n                        </div>\n                    </AccordionTrigger>\n                    <AccordionContent>\n                        <Table>\n                            <TableHeader>\n                                <TableRow>\n                                    <TableHead>Timestamp</TableHead>\n                                    <TableHead>Agent</TableHead>\n                                    <TableHead>Action</TableHead>\n                                    <TableHead>Details</TableHead>\n                                </TableRow>\n                            </TableHeader>\n                            <TableBody>\n                                {activityLogs.map(log => (\n                                    <TableRow key={log.id}>\n                                        <TableCell>{log.timestamp}</TableCell>\n                                        <TableCell>{log.agent}</TableCell>\n                                        <TableCell><Badge variant=\"secondary\">{log.action}</Badge></TableCell>\n                                        <TableCell>{log.details}</TableCell>\n                                    </TableRow>\n                                ))}\n                            </TableBody>\n                        </Table>\n                    </AccordionContent>\n                </AccordionItem>\n            </Accordion>\n        </Card>\n      </main>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3563, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/dashboard/announcements-view.tsx"],"sourcesContent":["\n\"use client\";\n\nimport * as React from \"react\";\nimport { PlusCircle, Search, UserCheck, Send, PanelLeft } from \"lucide-react\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Input } from \"@/components/ui/input\";\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport type { Announcement, Agent, AnnouncementCategory, UserProfile } from \"@/types\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { z } from \"zod\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { cn } from \"@/lib/utils\";\nimport { mockAgents, mockAdminUser } from \"@/lib/mock-data\";\n\nconst mockAnnouncements: Announcement[] = [\n  {\n    id: \"ann1\",\n    title: \"New Quarterly Training Schedule\",\n    author: mockAgents[0],\n    date: \"2024-07-28\",\n    category: \"Training\",\n    content: \"Hi team, please find the updated training schedule for Q3 attached. All sessions are mandatory. We'll cover advanced chatbot handling and new CRM features. RSVP by Friday.\",\n    readBy: [mockAgents[2]],\n  },\n  {\n    id: \"ann2\",\n    title: \"URGENT: Server Maintenance Tonight\",\n    author: mockAgents[1],\n    date: \"2024-07-27\",\n    category: \"Urgent\",\n    content: \"There will be a critical server maintenance tonight from 11:00 PM to 2:00 AM. The chat service may be intermittently unavailable. Please inform any active clients.\",\n    readBy: [mockAgents[0], mockAgents[2]],\n  },\n  {\n    id: \"ann3\",\n    title: \"Team Lunch Next Wednesday!\",\n    author: mockAgents[0],\n    date: \"2024-07-26\",\n    category: \"General\",\n    content: \"To celebrate a great month, we're having a team lunch at 'The Corner Bistro' next Wednesday at 1 PM. See you there!\",\n    readBy: [mockAgents[0], mockAgents[1], mockAgents[2]],\n  },\n];\n\nconst categoryVariantMap: Record<AnnouncementCategory, \"default\" | \"secondary\" | \"destructive\"> = {\n    General: \"secondary\",\n    Urgent: \"destructive\",\n    Training: \"default\"\n};\n\nconst announcementFormSchema = z.object({\n  title: z.string().min(5, \"Title must be at least 5 characters.\"),\n  content: z.string().min(10, \"Content must be at least 10 characters.\"),\n  category: z.enum([\"General\", \"Urgent\", \"Training\"]),\n});\n\ntype AnnouncementFormValues = z.infer<typeof announcementFormSchema>;\n\nconst AnnouncementForm = ({ onSubmit, form, user }: { onSubmit: (data: AnnouncementFormValues) => void; form: any; user: UserProfile | null }) => (\n    <Card className=\"flex-1 flex flex-col h-full border-0 shadow-none md:border md:shadow-sm\">\n        <CardHeader className=\"px-0 md:px-6\">\n          <CardTitle>New Announcement</CardTitle>\n          <CardDescription>Create and publish a new announcement for your team.</CardDescription>\n        </CardHeader>\n        <CardContent className=\"flex-1 overflow-auto px-0 md:px-6\">\n          <Form {...form}>\n            <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-4 h-full flex flex-col\">\n                <div className=\"space-y-4\">\n                    <FormField\n                        control={form.control}\n                        name=\"title\"\n                        render={({ field }) => (\n                        <FormItem>\n                            <FormLabel>Title</FormLabel>\n                            <FormControl>\n                            <Input placeholder=\"e.g., Q3 All-Hands Meeting\" {...field} />\n                            </FormControl>\n                            <FormMessage />\n                        </FormItem>\n                        )}\n                    />\n                    <FormField\n                        control={form.control}\n                        name=\"content\"\n                        render={({ field }) => (\n                        <FormItem>\n                            <FormLabel>Content</FormLabel>\n                            <FormControl>\n                            <Textarea placeholder=\"Write your announcement here...\" {...field} rows={6} />\n                            </FormControl>\n                            <FormMessage />\n                        </FormItem>\n                        )}\n                    />\n                    <FormField\n                        control={form.control}\n                        name=\"category\"\n                        render={({ field }) => (\n                        <FormItem>\n                            <FormLabel>Category</FormLabel>\n                            <Select onValueChange={field.onChange} defaultValue={field.value}>\n                            <FormControl>\n                                <SelectTrigger>\n                                <SelectValue placeholder=\"Select a category\" />\n                                </SelectTrigger>\n                            </FormControl>\n                            <SelectContent>\n                                <SelectItem value=\"General\">General</SelectItem>\n                                <SelectItem value=\"Training\">Training</SelectItem>\n                                <SelectItem value=\"Urgent\">Urgent</SelectItem>\n                            </SelectContent>\n                            </Select>\n                            <FormMessage />\n                        </FormItem>\n                        )}\n                    />\n                </div>\n                <div className=\"mt-auto pt-4\">\n                    <Button type=\"submit\" className=\"w-full\">\n                        <PlusCircle className=\"mr-2 h-4 w-4\" /> Publish Announcement\n                    </Button>\n                </div>\n            </form>\n          </Form>\n        </CardContent>\n    </Card>\n);\n\nconst AnnouncementFeed = ({ announcements, user }: { announcements: Announcement[], user: UserProfile | null }) => (\n    <ScrollArea className=\"flex-1 h-full pr-4 -mr-4\">\n        <div className=\"space-y-4\">\n          {announcements.map((ann) => (\n              <Card key={ann.id} className=\"flex flex-col\">\n                  <CardHeader>\n                      <div className=\"flex items-center justify-between\">\n                          <Badge variant={categoryVariantMap[ann.category]}>{ann.category}</Badge>\n                          <div className=\"text-xs text-muted-foreground\">{new Date(ann.date).toLocaleDateString()}</div>\n                      </div>\n                      <CardTitle className=\"pt-2\">{ann.title}</CardTitle>\n                      <CardDescription className=\"flex items-center gap-2 pt-1\">\n                          <Avatar className=\"h-6 w-6\">\n                              <AvatarImage src={ann.author.avatar} alt={ann.author.name} data-ai-hint=\"person portrait\" />\n                              <AvatarFallback>{ann.author.name.charAt(0)}</AvatarFallback>\n                          </Avatar>\n                          <span>{ann.author.name}</span>\n                      </CardDescription>\n                  </CardHeader>\n                  <CardContent className=\"flex-grow\">\n                      <p className=\"text-sm text-muted-foreground\">{ann.content}</p>\n                  </CardContent>\n                  <CardFooter className=\"flex-col items-start gap-4\">\n                      <div className=\"w-full\">\n                        <div className=\"flex items-center gap-2 text-sm text-muted-foreground\">\n                            <UserCheck className=\"h-4 w-4\" />\n                            <span>Read by ({ann.readBy.length}):</span>\n                        </div>\n                        <div className=\"flex -space-x-2 pt-2\">\n                            {ann.readBy.length > 0 ? ann.readBy.map(agent => (\n                                <Avatar key={agent.id} className=\"h-8 w-8 border-2 border-background\">\n                                    <AvatarImage src={agent.avatar} alt={agent.name} data-ai-hint=\"person portrait\" />\n                                    <AvatarFallback>{agent.name.charAt(0)}</AvatarFallback>\n                                </Avatar>\n                            )) : <span className=\"text-xs text-muted-foreground italic pl-1\">No one yet</span>}\n                        </div>\n                      </div>\n                       <div className=\"w-full pt-4 border-t\">\n                          <h4 className=\"text-sm font-semibold mb-2\">Internal Discussion</h4>\n                          <div className=\"space-y-4\">\n                              {/* Example Comment */}\n                              <div className=\"flex gap-2\">\n                                  <Avatar className=\"h-8 w-8\">\n                                      <AvatarImage src={mockAgents[2].avatar} alt={mockAgents[2].name} data-ai-hint=\"person portrait\" />\n                                      <AvatarFallback>{mockAgents[2].name.charAt(0)}</AvatarFallback>\n                                  </Avatar>\n                                  <div className=\"bg-secondary rounded-lg p-2 text-sm w-full\">\n                                      <span className=\"font-semibold\">{mockAgents[2].name}: </span>\n                                      <span>This is great news!</span>\n                                  </div>\n                              </div>\n                              {/* Comment Input */}\n                              {user && <div className=\"flex items-start gap-2\">\n                                 <Avatar className=\"h-8 w-8\">\n                                      <AvatarImage src={user.avatar} alt={user.name} data-ai-hint=\"person portrait\" />\n                                      <AvatarFallback>{user.name.charAt(0)}</AvatarFallback>\n                                  </Avatar>\n                                  <div className=\"relative w-full\">\n                                      <Textarea placeholder=\"Add a comment...\" className=\"flex-grow min-h-[40px] pr-12\" />\n                                      <Button size=\"icon\" className=\"absolute right-2 top-1/2 -translate-y-1/2 h-7 w-7\">\n                                          <Send className=\"h-4 w-4\" />\n                                      </Button>\n                                  </div>\n                              </div>}\n                          </div>\n                      </div>\n                  </CardFooter>\n              </Card>\n          ))}\n        </div>\n      </ScrollArea>\n);\n\n\ntype AnnouncementsViewProps = {\n  onMenuClick: () => void;\n  user: UserProfile | null;\n};\n\nexport function AnnouncementsView({ onMenuClick, user }: AnnouncementsViewProps) {\n  const [announcements, setAnnouncements] = React.useState(mockAnnouncements);\n  const [searchTerm, setSearchTerm] = React.useState(\"\");\n  const { toast } = useToast();\n\n  const form = useForm<AnnouncementFormValues>({\n    resolver: zodResolver(announcementFormSchema),\n    defaultValues: {\n      title: \"\",\n      content: \"\",\n      category: \"General\",\n    },\n  });\n\n  const filteredAnnouncements = announcements.filter(ann =>\n    ann.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\n    ann.content.toLowerCase().includes(searchTerm.toLowerCase())\n  ).sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime());\n\n  function onSubmit(data: AnnouncementFormValues) {\n    if (!user) return; // Should not happen if UI is correctly protecting form\n    \n    const authorAgent = mockAgents.find(a => a.name === user.name) || mockAdminUser;\n\n    const newAnnouncement: Announcement = {\n      id: new Date().toISOString(),\n      author: authorAgent,\n      date: new Date().toISOString().split('T')[0],\n      readBy: [],\n      title: data.title,\n      content: data.content,\n      category: data.category as AnnouncementCategory,\n    };\n    \n    setAnnouncements(prev => [newAnnouncement, ...prev]);\n    \n    toast({\n      title: \"Announcement Published\",\n      description: `\"${data.title}\" has been successfully published.`,\n      variant: \"default\",\n    });\n    \n    form.reset();\n  }\n\n  const canCreate = user?.role === 'admin' || user?.role === 'super_agent';\n\n  return (\n    <div className=\"flex h-screen w-full flex-col bg-background text-foreground\">\n      <header className=\"flex flex-col sm:flex-row items-start sm:items-center justify-between gap-4 p-4 border-b\">\n        <div className=\"flex items-center gap-2\">\n            <Button variant=\"ghost\" size=\"icon\" className=\"md:hidden\" onClick={onMenuClick}>\n                <PanelLeft className=\"h-5 w-5\" />\n                <span className=\"sr-only\">Open Menu</span>\n            </Button>\n            <h1 className=\"text-2xl font-bold\">Announcements</h1>\n        </div>\n        <div className=\"relative w-full sm:w-auto sm:max-w-xs\">\n            <Search className=\"absolute left-3 top-1/2 -translate-y-1/2 h-4 w-4 text-muted-foreground\" />\n            <Input \n                placeholder=\"Search announcements...\" \n                className=\"pl-9\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n            />\n        </div>\n      </header>\n      <main className=\"flex-1 overflow-hidden p-4\">\n        {/* Desktop Layout */}\n        <div className=\"hidden md:grid md:grid-cols-3 gap-4 h-full\">\n            {canCreate && (\n              <div className=\"md:col-span-1 flex flex-col h-full overflow-hidden\">\n                  <AnnouncementForm form={form} onSubmit={onSubmit} user={user} />\n              </div>\n            )}\n            <div className={cn(\"overflow-hidden h-full flex flex-col\", canCreate ? \"md:col-span-2\" : \"md:col-span-3\")}>\n              <h2 className=\"text-xl font-semibold mb-4 px-1\">Feed</h2>\n              <AnnouncementFeed announcements={filteredAnnouncements} user={user} />\n            </div>\n        </div>\n        \n        {/* Mobile Layout */}\n        <div className=\"md:hidden h-full\">\n             <Tabs defaultValue=\"feed\" className=\"w-full h-full flex flex-col\">\n                <TabsList className=\"w-full grid grid-cols-2\">\n                    <TabsTrigger value=\"feed\" className=\"flex-1\">Feed</TabsTrigger>\n                    {canCreate && <TabsTrigger value=\"new\" className=\"flex-1\">New</TabsTrigger>}\n                </TabsList>\n                <TabsContent value=\"feed\" className=\"flex-1 overflow-auto mt-4\">\n                    <AnnouncementFeed announcements={filteredAnnouncements} user={user} />\n                </TabsContent>\n                {canCreate && <TabsContent value=\"new\" className=\"flex-1 overflow-auto mt-4\">\n                    <AnnouncementForm form={form} onSubmit={onSubmit} user={user} />\n                </TabsContent>}\n            </Tabs>\n        </div>\n      </main>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4550, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/dashboard/login-dialog.tsx"],"sourcesContent":["\n\"use client\";\n\nimport * as React from \"react\";\nimport { z } from \"zod\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\nimport { Alert, AlertDescription } from \"../ui/alert\";\nimport { KenaAILogo } from \"../ui/kena-ai-logo\";\nimport { KeyRound, Mail, Eye, EyeOff } from \"lucide-react\";\nimport { Checkbox } from \"../ui/checkbox\";\nimport Link from \"next/link\";\n\nconst loginFormSchema = z.object({\n  email: z.string().email({ message: \"Please enter a valid email.\" }),\n  password: z.string().min(1, { message: \"Password is required.\" }),\n});\n\ntype LoginFormValues = z.infer<typeof loginFormSchema>;\n\ntype LoginDialogProps = {\n    onLogin: (email: string, password_unused: string) => boolean;\n    onSwitchToSignUp: () => void;\n};\n\nexport function LoginDialog({ onLogin, onSwitchToSignUp }: LoginDialogProps) {\n  const [error, setError] = React.useState<string | null>(null);\n  const [showPassword, setShowPassword] = React.useState(false);\n  const form = useForm<LoginFormValues>({\n    resolver: zodResolver(loginFormSchema),\n    defaultValues: {\n      email: \"\",\n      password: \"\",\n    },\n  });\n\n  function onSubmit(data: LoginFormValues) {\n    setError(null);\n    const success = onLogin(data.email, data.password);\n    if (!success) {\n      setError(\"Invalid email or password. Please try again.\");\n      form.setValue(\"password\", \"\");\n    } else {\n      form.reset();\n    }\n  }\n\n  return (\n    <div className=\"w-full max-w-md space-y-8 animate-in fade-in-50 duration-500\">\n        <div className=\"text-center\">\n            <KenaAILogo className=\"h-16 mx-auto mb-4 lg:hidden\" />\n            <h1 className=\"text-3xl font-bold tracking-tight\">Welcome Back</h1>\n            <p className=\"text-muted-foreground mt-2\">Enter your credentials to access your account.</p>\n        </div>\n        \n        <Form {...form}>\n        <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n            {error && (\n                <Alert variant=\"destructive\">\n                    <AlertDescription>{error}</AlertDescription>\n                </Alert>\n            )}\n            <FormField\n            control={form.control}\n            name=\"email\"\n            render={({ field }) => (\n                <FormItem>\n                <FormLabel>Email</FormLabel>\n                 <div className=\"relative\">\n                    <Mail className=\"absolute left-3 top-1/2 -translate-y-1/2 h-5 w-5 text-muted-foreground\" />\n                    <FormControl>\n                        <Input\n                            type=\"email\"\n                            placeholder=\"john.d@example.com\"\n                            className=\"pl-10 bg-secondary/50\"\n                            {...field}\n                        />\n                    </FormControl>\n                </div>\n                <FormMessage />\n                </FormItem>\n            )}\n            />\n            <FormField\n            control={form.control}\n            name=\"password\"\n            render={({ field }) => (\n                <FormItem>\n                <FormLabel>Password</FormLabel>\n                <div className=\"relative\">\n                    <KeyRound className=\"absolute left-3 top-1/2 -translate-y-1/2 h-5 w-5 text-muted-foreground\" />\n                    <FormControl>\n                        <Input \n                            type={showPassword ? \"text\" : \"password\"} \n                            placeholder=\"********\" \n                            className=\"pl-10 pr-10 bg-secondary/50\"\n                            {...field} \n                        />\n                    </FormControl>\n                    <Button \n                        type=\"button\" \n                        variant=\"ghost\" \n                        size=\"icon\"\n                        className=\"absolute right-1 top-1/2 -translate-y-1/2 h-8 w-8 text-muted-foreground hover:bg-transparent\"\n                        onClick={() => setShowPassword(prev => !prev)}\n                    >\n                        {showPassword ? <EyeOff className=\"h-5 w-5\" /> : <Eye className=\"h-5 w-5\" />}\n                        <span className=\"sr-only\">{showPassword ? 'Hide password' : 'Show password'}</span>\n                    </Button>\n                </div>\n                <FormMessage />\n                </FormItem>\n            )}\n            />\n            \n            <div className=\"flex items-center justify-between text-sm\">\n                <div className=\"flex items-center gap-2\">\n                    <Checkbox id=\"remember-me\" />\n                    <label htmlFor=\"remember-me\" className=\"text-muted-foreground cursor-pointer\">Remember me</label>\n                </div>\n                <Link href=\"#\" className=\"font-medium text-primary hover:underline\">\n                    Forgot password?\n                </Link>\n            </div>\n\n            <Button type=\"submit\" className=\"w-full shadow-sm\" disabled={form.formState.isSubmitting}>\n                {form.formState.isSubmitting ? \"Logging in...\" : \"Log In\"}\n            </Button>\n        </form>\n        </Form>\n        <p className=\"text-center text-sm text-muted-foreground\">\n            Don't have an account? <Button variant=\"link\" className=\"font-semibold text-primary p-0 h-auto\" onClick={onSwitchToSignUp}>Sign Up</Button>\n        </p>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4917, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/dashboard/create-campaign-sheet.tsx"],"sourcesContent":["\n\"use client\";\n\nimport * as React from \"react\";\nimport { z } from \"zod\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n  SheetTrigger,\n  SheetFooter,\n  SheetClose,\n} from \"@/components/ui/sheet\";\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport type { Campaign } from \"@/types\";\nimport { ArrowLeft, ArrowRight, Bot, MessageSquare, Users, Calendar, Check } from \"lucide-react\";\nimport { Separator } from \"../ui/separator\";\n\nconst steps = [\n  { id: \"details\", name: \"Details\", icon: MessageSquare },\n  { id: \"audience\", name: \"Audience\", icon: Users },\n  { id: \"message\", name: \"Message\", icon: Bot },\n  { id: \"schedule\", name: \"Schedule\", icon: Calendar },\n  { id: \"review\", name: \"Review\", icon: Check },\n];\n\nconst campaignDetailsSchema = z.object({\n  title: z.string().min(5, { message: \"Campaign title must be at least 5 characters.\" }),\n  description: z.string().optional(),\n  type: z.enum([\"Broadcast\", \"Scheduled\", \"Automated\"]),\n});\n\ntype CampaignDetailsValues = z.infer<typeof campaignDetailsSchema>;\n\nconst StepDetails = ({ form }: { form: any }) => (\n    <div className=\"space-y-4\">\n        <FormField\n            control={form.control}\n            name=\"title\"\n            render={({ field }) => (\n            <FormItem>\n                <FormLabel>Campaign Title</FormLabel>\n                <FormControl>\n                <Input placeholder=\"e.g., 'Back-to-School Promo'\" {...field} />\n                </FormControl>\n                <FormDescription>A public name for your campaign.</FormDescription>\n                <FormMessage />\n            </FormItem>\n            )}\n        />\n        <FormField\n            control={form.control}\n            name=\"description\"\n            render={({ field }) => (\n            <FormItem>\n                <FormLabel>Description (Internal)</FormLabel>\n                <FormControl>\n                <Textarea placeholder=\"Internal notes about this campaign...\" {...field} />\n                </FormControl>\n                <FormDescription>This will not be shown to recipients.</FormDescription>\n                <FormMessage />\n            </FormItem>\n            )}\n        />\n        <FormField\n            control={form.control}\n            name=\"type\"\n            render={({ field }) => (\n            <FormItem>\n                <FormLabel>Campaign Type</FormLabel>\n                <Select onValueChange={field.onChange} defaultValue={field.value}>\n                    <FormControl>\n                        <SelectTrigger>\n                        <SelectValue placeholder=\"Select a campaign type\" />\n                        </SelectTrigger>\n                    </FormControl>\n                    <SelectContent>\n                        <SelectItem value=\"Broadcast\">Broadcast (One-time send)</SelectItem>\n                        <SelectItem value=\"Scheduled\">Scheduled (Send at a future date)</SelectItem>\n                        <SelectItem value=\"Automated\">Automated (Trigger-based)</SelectItem>\n                    </SelectContent>\n                </Select>\n                <FormMessage />\n            </FormItem>\n            )}\n        />\n    </div>\n);\n\n\nconst Stepper = ({ currentStep }: { currentStep: number }) => (\n  <nav aria-label=\"Progress\">\n    <ol role=\"list\" className=\"space-y-4 md:flex md:space-x-8 md:space-y-0\">\n      {steps.map((step, index) => (\n        <li key={step.name} className=\"md:flex-1\">\n          {index < currentStep ? (\n            <div className=\"group flex w-full flex-col border-l-4 border-primary py-2 pl-4 transition-colors md:border-l-0 md:border-t-4 md:pb-0 md:pl-0 md:pt-4\">\n              <span className=\"text-sm font-medium text-primary transition-colors \">{step.name}</span>\n            </div>\n          ) : index === currentStep ? (\n            <div\n              className=\"flex w-full flex-col border-l-4 border-primary py-2 pl-4 md:border-l-0 md:border-t-4 md:pb-0 md:pl-0 md:pt-4\"\n              aria-current=\"step\"\n            >\n              <span className=\"text-sm font-medium text-primary\">{step.name}</span>\n            </div>\n          ) : (\n            <div className=\"group flex w-full flex-col border-l-4 border-border py-2 pl-4 transition-colors md:border-l-0 md:border-t-4 md:pb-0 md:pl-0 md:pt-4\">\n              <span className=\"text-sm font-medium text-muted-foreground\">{step.name}</span>\n            </div>\n          )}\n        </li>\n      ))}\n    </ol>\n  </nav>\n)\n\n\ntype CreateCampaignSheetProps = {\n  children: React.ReactNode;\n  open: boolean;\n  onOpenChange: (open: boolean) => void;\n  onCampaignCreate: (data: Partial<Campaign>) => void;\n};\n\nexport function CreateCampaignSheet({ children, open, onOpenChange, onCampaignCreate }: CreateCampaignSheetProps) {\n  const [currentStep, setCurrentStep] = React.useState(0);\n  const [campaignData, setCampaignData] = React.useState<Partial<Campaign>>({});\n  const { toast } = useToast();\n\n  const form = useForm<CampaignDetailsValues>({\n    resolver: zodResolver(campaignDetailsSchema),\n    defaultValues: {\n      title: \"\",\n      description: \"\",\n      type: \"Broadcast\",\n    },\n  });\n\n  const goToNextStep = () => setCurrentStep(prev => Math.min(steps.length - 1, prev + 1));\n  const goToPrevStep = () => setCurrentStep(prev => Math.max(0, prev - 1));\n\n  async function processStep(data: CampaignDetailsValues) {\n    setCampaignData(prev => ({...prev, ...data}));\n\n    if (currentStep === steps.length - 1) {\n        // Final step: create campaign\n        onCampaignCreate(campaignData);\n        toast({\n            title: \"Campaign Created!\",\n            description: \"Your new campaign has been successfully created.\",\n        });\n        onOpenChange(false);\n    } else {\n        goToNextStep();\n    }\n  }\n\n  const renderStepContent = () => {\n    switch (currentStep) {\n        case 0:\n            return <StepDetails form={form} />;\n        default:\n            return <div className=\"text-center p-8 text-muted-foreground\">This step is under construction.</div>;\n    }\n  };\n  \n  React.useEffect(() => {\n    if (!open) {\n        // Reset state when sheet is closed\n        setTimeout(() => {\n            setCurrentStep(0);\n            setCampaignData({});\n            form.reset();\n        }, 300);\n    }\n  }, [open, form]);\n\n  return (\n    <Sheet open={open} onOpenChange={onOpenChange}>\n      <SheetTrigger asChild>{children}</SheetTrigger>\n      <SheetContent className=\"w-full sm:max-w-2xl flex flex-col\">\n        <SheetHeader>\n          <SheetTitle>Create New Campaign</SheetTitle>\n          <SheetDescription>\n            Follow the steps to create and send a new bulk messaging campaign.\n          </SheetDescription>\n        </SheetHeader>\n        \n        <div className=\"py-4\">\n            <Stepper currentStep={currentStep} />\n        </div>\n        <Separator />\n        \n        <div className=\"flex-1 overflow-auto -mr-6 pr-6\">\n            <Form {...form}>\n                <form onSubmit={form.handleSubmit(processStep)} className=\"space-y-8 p-1\">\n                    {renderStepContent()}\n                </form>\n            </Form>\n        </div>\n\n        <SheetFooter className=\"mt-auto pt-4\">\n            <div className=\"flex w-full justify-between\">\n                <Button variant=\"outline\" onClick={goToPrevStep} disabled={currentStep === 0}>\n                    <ArrowLeft className=\"mr-2 h-4 w-4\" /> Previous\n                </Button>\n                <Button onClick={form.handleSubmit(processStep)}>\n                    {currentStep === steps.length - 1 ? 'Finish' : 'Next'} <ArrowRight className=\"ml-2 h-4 w-4\" />\n                </Button>\n            </div>\n        </SheetFooter>\n      </SheetContent>\n    </Sheet>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 5471, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/dashboard/campaigns-view.tsx"],"sourcesContent":["\n\"use client\";\n\nimport * as React from \"react\";\nimport { PlusCircle, Send, BarChart, Users, CheckCircle, Target, PanelLeft } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription } from \"@/components/ui/card\";\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogDescription, DialogFooter, DialogClose } from \"@/components/ui/dialog\";\nimport type { UserProfile } from \"@/types\";\nimport { CreateCampaignSheet } from \"./create-campaign-sheet\";\n\n\nconst overviewData = [\n    { title: \"Campaigns Sent\", value: \"12\", icon: Send },\n    { title: \"Delivery Rate\", value: \"98.5%\", icon: CheckCircle },\n    { title: \"Engagement Rate\", value: \"15.2%\", icon: Target },\n    { title: \"Conversions\", value: \"2.3%\", icon: BarChart },\n];\n\nconst mockCampaigns = [\n    { id: \"cam1\", name: \"Back-to-School Promo\", date: \"2024-08-15\", audience: 2500, delivery: 99.1, engagement: 25.3, conversion: 5.1, status: \"Completed\" },\n    { id: \"cam2\", name: \"Q3 Newsletter\", date: \"2024-08-10\", audience: 15000, delivery: 99.8, engagement: 12.1, conversion: 1.2, status: \"Completed\" },\n    { id: \"cam3\", name: \"Flash Sale Alert\", date: \"2024-08-18\", audience: 5000, delivery: 97.2, engagement: 35.7, conversion: 8.9, status: \"In Progress\" },\n    { id: \"cam4\", name: \"Upcoming Webinar\", date: \"2024-08-25\", audience: 8000, delivery: 0, engagement: 0, conversion: 0, status: \"Scheduled\" },\n    { id: \"cam5\", name: \"Holiday Early Bird\", date: \"2024-07-30\", audience: 12000, delivery: 98.9, engagement: 18.9, conversion: 4.5, status: \"Completed\" },\n];\n\nconst statusVariantMap: Record<string, \"default\" | \"secondary\" | \"destructive\" | \"outline\"> = {\n    Completed: \"default\",\n    \"In Progress\": \"secondary\",\n    Scheduled: \"outline\",\n    Failed: \"destructive\",\n};\n\ntype CampaignsViewProps = {\n  onMenuClick: () => void;\n  user: UserProfile | null;\n};\n\nexport function CampaignsView({ onMenuClick, user }: CampaignsViewProps) {\n    const [isCreateSheetOpen, setIsCreateSheetOpen] = React.useState(false);\n    const [showReportDialog, setShowReportDialog] = React.useState(false);\n\n    const handleCreateCampaign = (data: any) => {\n        console.log(\"New Campaign Data:\", data);\n        // Here you would typically handle the campaign creation logic,\n        // like sending it to a backend service.\n    };\n    \n    if (user?.role !== 'admin' && user?.role !== 'super_agent') {\n      return (\n          <div className=\"flex h-screen w-full flex-col bg-background text-foreground\">\n             <header className=\"flex items-start sm:items-center justify-between p-4 border-b\">\n                <div className=\"flex items-center gap-2\">\n                    <Button variant=\"ghost\" size=\"icon\" className=\"md:hidden\" onClick={onMenuClick}>\n                        <PanelLeft className=\"h-5 w-5\" />\n                        <span className=\"sr-only\">Open Menu</span>\n                    </Button>\n                    <h1 className=\"text-2xl font-bold\">Access Denied</h1>\n                </div>\n            </header>\n            <main className=\"flex-1 flex items-center justify-center p-4\">\n                <Card className=\"w-full max-w-md\">\n                    <CardHeader>\n                        <CardTitle>Permission Required</CardTitle>\n                        <CardDescription>\n                            You do not have permission to view this page. This area is restricted.\n                        </CardDescription>\n                    </CardHeader>\n                </Card>\n            </main>\n          </div>\n      )\n  }\n\n  return (\n    <div className=\"flex h-screen w-full flex-col bg-background text-foreground\">\n      <header className=\"flex items-start sm:items-center justify-between gap-4 p-4 border-b\">\n        <div className=\"flex items-center gap-2\">\n            <Button variant=\"ghost\" size=\"icon\" className=\"md:hidden\" onClick={onMenuClick}>\n                <PanelLeft className=\"h-5 w-5\" />\n                <span className=\"sr-only\">Open Menu</span>\n            </Button>\n            <h1 className=\"text-2xl font-bold\">Campaigns & Bulk Messaging</h1>\n        </div>\n        <CreateCampaignSheet\n            open={isCreateSheetOpen}\n            onOpenChange={setIsCreateSheetOpen}\n            onCampaignCreate={handleCreateCampaign}\n        >\n            <Button>\n                <PlusCircle className=\"mr-2 h-4 w-4\" />\n                Create New Campaign\n            </Button>\n        </CreateCampaignSheet>\n      </header>\n      <main className=\"flex-1 overflow-auto p-4 space-y-4\">\n        {/* Top Section */}\n        <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\">\n            {overviewData.map(item => (\n                <Card key={item.title}>\n                    <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                        <CardTitle className=\"text-sm font-medium\">{item.title}</CardTitle>\n                        <item.icon className=\"h-4 w-4 text-muted-foreground\" />\n                    </CardHeader>\n                    <CardContent>\n                        <div className=\"text-2xl font-bold\">{item.value}</div>\n                    </CardContent>\n                </Card>\n            ))}\n        </div>\n\n        {/* Campaign List */}\n        <Card>\n            <CardHeader>\n                <CardTitle>Campaigns</CardTitle>\n                <CardDescription>View and manage all your past and upcoming campaigns.</CardDescription>\n            </CardHeader>\n            <CardContent>\n                <Table>\n                    <TableHeader>\n                        <TableRow>\n                            <TableHead>Campaign Name</TableHead>\n                            <TableHead>Date Sent</TableHead>\n                            <TableHead className=\"text-center\">Audience</TableHead>\n                            <TableHead className=\"text-center\">Delivery</TableHead>\n                            <TableHead className=\"text-center\">Engagement</TableHead>\n                            <TableHead className=\"text-center\">Status</TableHead>\n                            <TableHead className=\"text-right\">Actions</TableHead>\n                        </TableRow>\n                    </TableHeader>\n                    <TableBody>\n                        {mockCampaigns.map(campaign => (\n                            <TableRow key={campaign.id}>\n                                <TableCell className=\"font-medium\">{campaign.name}</TableCell>\n                                <TableCell>{campaign.date}</TableCell>\n                                <TableCell className=\"text-center\">{campaign.audience}</TableCell>\n                                <TableCell className=\"text-center\">{campaign.delivery}%</TableCell>\n                                <TableCell className=\"text-center\">{campaign.engagement}%</TableCell>\n                                <TableCell className=\"text-center\">\n                                    <Badge variant={statusVariantMap[campaign.status]}>{campaign.status}</Badge>\n                                </TableCell>\n                                <TableCell className=\"text-right\">\n                                    <Button variant=\"outline\" size=\"sm\" onClick={() => setShowReportDialog(true)}>\n                                        View Report\n                                    </Button>\n                                </TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </CardContent>\n        </Card>\n      </main>\n\n       <Dialog open={showReportDialog} onOpenChange={setShowReportDialog}>\n            <DialogContent>\n                <DialogHeader>\n                    <DialogTitle>Detailed Report</DialogTitle>\n                    <DialogDescription>\n                        Detailed campaign reports are coming soon!\n                    </DialogDescription>\n                </DialogHeader>\n                 <DialogFooter>\n                    <DialogClose asChild>\n                        <Button>Close</Button>\n                    </DialogClose>\n                </DialogFooter>\n            </DialogContent>\n        </Dialog>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 6101, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/dashboard/my-performance-view.tsx"],"sourcesContent":["\n\"use client\";\n\nimport * as React from \"react\";\nimport {\n    Card,\n    CardContent,\n    CardHeader,\n    CardTitle,\n    CardDescription\n} from \"@/components/ui/card\";\nimport {\n    PanelLeft,\n    ArrowUp,\n    ArrowDown,\n    Calendar,\n    MessageSquare,\n    Clock,\n    CheckCircle,\n    Star,\n    Flame,\n    BarChart as BarChartIcon,\n    PieChart,\n    Download\n} from \"lucide-react\";\nimport type { UserProfile } from \"@/types\";\nimport { Button } from \"../ui/button\";\nimport { cn } from \"@/lib/utils\";\nimport {\n  Bar,\n  BarChart,\n  Line,\n  LineChart,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis,\n  Legend,\n  Cell\n} from \"recharts\"\nimport { ChartContainer, ChartTooltip, ChartTooltipContent } from \"@/components/ui/chart\"\nimport { Alert, AlertTitle, AlertDescription } from \"@/components/ui/alert\";\nimport { KenaAILogo } from \"../ui/kena-ai-logo\";\n\nconst kpiData = [\n  {\n    title: \"Conversations Handled\",\n    value: \"52\",\n    description: \"conversations today\",\n    trend: \"+12%\",\n    trendDirection: \"up\" as const,\n    icon: MessageSquare,\n  },\n  {\n    title: \"Avg. Response Time\",\n    value: \"12s\",\n    description: \"on average ⏱️\",\n    trend: \"-3.5%\",\n    trendDirection: \"down\" as const,\n    icon: Clock,\n  },\n  {\n    title: \"Resolution Rate\",\n    value: \"88%\",\n    description: \"conversations resolved ✅\",\n    trend: \"+2.1%\",\n    trendDirection: \"up\" as const,\n    icon: CheckCircle,\n  },\n  {\n    title: \"CSAT Score\",\n    value: \"4.6/5\",\n    description: \"from 15 ratings ⭐\",\n    trend: \"+0.2\",\n    trendDirection: \"up\" as const,\n    icon: Star,\n  },\n];\n\nconst conversationData = [\n  { date: \"Mon\", conversations: 8 },\n  { date: \"Tue\", conversations: 12 },\n  { date: \"Wed\", conversations: 7 },\n  { date: \"Thu\", conversations: 15 },\n  { date: \"Fri\", conversations: 11 },\n  { date: \"Sat\", conversations: 5 },\n  { date: \"Sun\", conversations: 9 },\n];\n\nconst responseTimeByChannelData = [\n    { channel: \"WhatsApp\", time: 10, fill: 'hsl(var(--chart-1))' },\n    { channel: \"Facebook\", time: 15, fill: 'hsl(var(--chart-2))' },\n    { channel: \"Instagram\", time: 8, fill: 'hsl(var(--chart-3))' },\n    { channel: \"Email\", time: 35, fill: 'hsl(var(--chart-4))' },\n];\n\n\ntype MyPerformanceViewProps = {\n  onMenuClick: () => void;\n  user: UserProfile | null;\n};\n\nexport function MyPerformanceView({ onMenuClick, user }: MyPerformanceViewProps) {\n\n  return (\n    <div className=\"flex h-screen w-full flex-col bg-background text-foreground\">\n      <header className=\"flex flex-col md:flex-row items-start md:items-center justify-between gap-4 p-4 border-b\">\n        <div className=\"flex items-center gap-4\">\n            <Button variant=\"ghost\" size=\"icon\" className=\"md:hidden\" onClick={onMenuClick}>\n                <PanelLeft className=\"h-5 w-5\" />\n                <span className=\"sr-only\">Open Menu</span>\n            </Button>\n            <div className=\"flex-1\">\n                <h1 className=\"text-xl sm:text-2xl font-bold\">Hi, {user?.name.split(\" \")[0]} 👋 Here’s your performance</h1>\n                <p className=\"text-sm text-muted-foreground\">Welcome to your personal performance dashboard.</p>\n            </div>\n        </div>\n        <div className=\"flex items-center gap-2 w-full md:w-auto\">\n             <Button variant=\"outline\" size=\"sm\">Today</Button>\n             <Button variant=\"ghost\" size=\"sm\">This Week</Button>\n             <Button variant=\"ghost\" size=\"sm\">This Month</Button>\n        </div>\n      </header>\n      <main className=\"flex-1 overflow-auto p-4 md:p-6 lg:p-8 space-y-8\">\n        \n        <Alert className=\"bg-accent/20 border-accent/50 text-accent-foreground\">\n            <Flame className=\"h-4 w-4\" />\n            <AlertTitle className=\"font-semibold\">You're on fire! 🔥</AlertTitle>\n            <AlertDescription>\n                You're in the top 3 fastest responders this week! Keep up the great work.\n            </AlertDescription>\n        </Alert>\n        \n        {/* Section 1: Key Metrics */}\n        <div className=\"space-y-4\">\n            <h2 className=\"text-xl font-bold\">Today's Stats</h2>\n            <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\">\n                {kpiData.map((kpi) => (\n                <Card key={kpi.title}>\n                    <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                    <CardTitle className=\"text-sm font-medium\">{kpi.title}</CardTitle>\n                    <kpi.icon className=\"h-4 w-4 text-muted-foreground\" />\n                    </CardHeader>\n                    <CardContent>\n                        <div className=\"text-2xl font-bold\">{kpi.value}</div>\n                        <p className=\"text-xs text-muted-foreground\">{kpi.description}</p>\n                         <p className={cn(\"text-xs mt-2 flex items-center\", kpi.trendDirection === 'up' ? \"text-emerald-500\" : \"text-red-500\")}>\n                            {kpi.trendDirection === 'up' ? <ArrowUp className=\"h-3 w-3 mr-1\" /> : <ArrowDown className=\"h-3 w-3 mr-1\" />}\n                            {kpi.trend} from yesterday\n                        </p>\n                    </CardContent>\n                </Card>\n                ))}\n            </div>\n        </div>\n\n        {/* Section 2: Performance Insights */}\n        <div className=\"space-y-4\">\n             <h2 className=\"text-xl font-bold\">Performance Insights</h2>\n             <div className=\"grid grid-cols-1 lg:grid-cols-5 gap-4\">\n                <Card className=\"lg:col-span-3\">\n                    <CardHeader>\n                        <CardTitle>Conversation Volume</CardTitle>\n                        <CardDescription>Your conversation volume over the last 7 days.</CardDescription>\n                    </CardHeader>\n                    <CardContent>\n                        <ChartContainer config={{}} className=\"h-[250px] w-full\">\n                            <LineChart data={conversationData} margin={{ top: 5, right: 20, left: -10, bottom: 5 }}>\n                            <XAxis dataKey=\"date\" tickLine={false} axisLine={false} />\n                            <YAxis tickLine={false} axisLine={false} />\n                            <Tooltip content={<ChartTooltipContent />} />\n                            <Line type=\"monotone\" dataKey=\"conversations\" stroke=\"hsl(var(--primary))\" strokeWidth={2} dot={{ r: 4, fill: \"hsl(var(--primary))\" }} />\n                        </LineChart>\n                    </ChartContainer>\n                    </CardContent>\n                </Card>\n                <Card className=\"lg:col-span-2\">\n                    <CardHeader>\n                        <CardTitle>Response Speed by Channel</CardTitle>\n                        <CardDescription>Average response time (seconds).</CardDescription>\n                    </CardHeader>\n                     <CardContent>\n                           <ChartContainer config={{}} className=\"h-[250px] w-full\">\n                                <ResponsiveContainer>\n                                    <BarChart data={responseTimeByChannelData} layout=\"vertical\" margin={{ left: 10, right: 10 }}>\n                                        <XAxis type=\"number\" hide />\n                                        <YAxis dataKey=\"channel\" type=\"category\" tickLine={false} axisLine={false} tickMargin={10} />\n                                        <Tooltip cursor={false} content={<ChartTooltipContent indicator=\"dot\" />} />\n                                        <Bar dataKey=\"time\" radius={5}>\n                                            {responseTimeByChannelData.map((entry) => (\n                                                <Cell key={`cell-${entry.channel}`} fill={entry.fill} />\n                                            ))}\n                                        </Bar>\n                                    </BarChart>\n                                </ResponsiveContainer>\n                            </ChartContainer>\n                        </CardContent>\n                </Card>\n             </div>\n        </div>\n\n        {/* Section 3: Leaderboard and Feedback */}\n         <div className=\"space-y-4\">\n             <h2 className=\"text-xl font-bold\">Team & Feedback</h2>\n             <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4\">\n                <Card>\n                    <CardHeader>\n                        <CardTitle>Team Leaderboard</CardTitle>\n                    </CardHeader>\n                    <CardContent>\n                         <p className=\"text-center text-sm text-muted-foreground p-8\">Leaderboard coming soon!</p>\n                    </CardContent>\n                </Card>\n                 <Card>\n                    <CardHeader>\n                        <CardTitle>Recent Customer Feedback</CardTitle>\n                    </CardHeader>\n                    <CardContent>\n                         <p className=\"text-center text-sm text-muted-foreground p-8\">Customer feedback section coming soon!</p>\n                    </CardContent>\n                </Card>\n             </div>\n         </div>\n\n\n      </main>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 6830, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/dashboard/signup-dialog.tsx"],"sourcesContent":["\n\"use client\";\n\nimport * as React from \"react\";\nimport { z } from \"zod\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\nimport { KenaAILogo } from \"../ui/kena-ai-logo\";\nimport { KeyRound, Mail, User, Eye, EyeOff } from \"lucide-react\";\n\nconst signupFormSchema = z.object({\n  name: z.string().min(2, { message: \"Name must be at least 2 characters.\" }),\n  email: z.string().email({ message: \"Please enter a valid email.\" }),\n  password: z.string().min(8, { message: \"Password must be at least 8 characters.\" }),\n});\n\ntype SignupFormValues = z.infer<typeof signupFormSchema>;\n\ntype SignUpDialogProps = {\n    onSwitchToLogin: () => void;\n};\n\nexport function SignUpDialog({ onSwitchToLogin }: SignUpDialogProps) {\n  const [showPassword, setShowPassword] = React.useState(false);\n  const form = useForm<SignupFormValues>({\n    resolver: zodResolver(signupFormSchema),\n    defaultValues: {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n    },\n  });\n\n  function onSubmit(data: SignupFormValues) {\n    console.log(\"Sign up data:\", data);\n    // Here you would handle the signup logic\n    // For now, we just log it and switch to login\n    alert(\"Sign up successful! Please log in.\");\n    onSwitchToLogin();\n  }\n\n  return (\n    <div className=\"w-full max-w-md space-y-8 animate-in fade-in-50 duration-500\">\n        <div className=\"text-center\">\n            <KenaAILogo className=\"h-16 mx-auto mb-4 lg:hidden\" />\n            <h1 className=\"text-3xl font-bold tracking-tight\">Create an Account</h1>\n            <p className=\"text-muted-foreground mt-2\">Join us and start simplifying your conversations.</p>\n        </div>\n        \n        <Form {...form}>\n        <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n            <FormField\n            control={form.control}\n            name=\"name\"\n            render={({ field }) => (\n                <FormItem>\n                <FormLabel>Full Name</FormLabel>\n                 <div className=\"relative\">\n                    <User className=\"absolute left-3 top-1/2 -translate-y-1/2 h-5 w-5 text-muted-foreground\" />\n                    <FormControl>\n                        <Input\n                            placeholder=\"John Doe\"\n                            className=\"pl-10 bg-secondary/50\"\n                            {...field}\n                        />\n                    </FormControl>\n                </div>\n                <FormMessage />\n                </FormItem>\n            )}\n            />\n            <FormField\n            control={form.control}\n            name=\"email\"\n            render={({ field }) => (\n                <FormItem>\n                <FormLabel>Email</FormLabel>\n                 <div className=\"relative\">\n                    <Mail className=\"absolute left-3 top-1/2 -translate-y-1/2 h-5 w-5 text-muted-foreground\" />\n                    <FormControl>\n                        <Input\n                            type=\"email\"\n                            placeholder=\"john.doe@example.com\"\n                            className=\"pl-10 bg-secondary/50\"\n                            {...field}\n                        />\n                    </FormControl>\n                </div>\n                <FormMessage />\n                </FormItem>\n            )}\n            />\n            <FormField\n            control={form.control}\n            name=\"password\"\n            render={({ field }) => (\n                <FormItem>\n                <FormLabel>Password</FormLabel>\n                <div className=\"relative\">\n                    <KeyRound className=\"absolute left-3 top-1/2 -translate-y-1/2 h-5 w-5 text-muted-foreground\" />\n                    <FormControl>\n                        <Input \n                            type={showPassword ? \"text\" : \"password\"} \n                            placeholder=\"********\" \n                            className=\"pl-10 pr-10 bg-secondary/50\"\n                            {...field} \n                        />\n                    </FormControl>\n                    <Button \n                        type=\"button\" \n                        variant=\"ghost\" \n                        size=\"icon\"\n                        className=\"absolute right-1 top-1/2 -translate-y-1/2 h-8 w-8 text-muted-foreground hover:bg-transparent\"\n                        onClick={() => setShowPassword(prev => !prev)}\n                    >\n                        {showPassword ? <EyeOff className=\"h-5 w-5\" /> : <Eye className=\"h-5 w-5\" />}\n                        <span className=\"sr-only\">{showPassword ? 'Hide password' : 'Show password'}</span>\n                    </Button>\n                </div>\n                <FormMessage />\n                </FormItem>\n            )}\n            />\n\n            <Button type=\"submit\" className=\"w-full shadow-sm\" disabled={form.formState.isSubmitting}>\n                {form.formState.isSubmitting ? \"Creating Account...\" : \"Create Account\"}\n            </Button>\n        </form>\n        </Form>\n        <p className=\"text-center text-sm text-muted-foreground\">\n            Already have an account? <Button variant=\"link\" className=\"font-semibold text-primary p-0 h-auto\" onClick={onSwitchToLogin}>Log In</Button>\n        </p>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}