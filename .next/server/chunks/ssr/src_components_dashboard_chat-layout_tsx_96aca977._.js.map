{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/dashboard/chat-layout.tsx"],"sourcesContent":["\n\"use client\";\n\nimport * as React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport {\n  ArrowLeft,\n  CheckCircle,\n  Clock,\n  LogIn,\n  LogOut,\n  MessageSquare,\n  NotebookPen,\n  PanelLeft,\n  Paperclip,\n  PlusCircle,\n  Search,\n  Send,\n  Settings,\n  Smile,\n  Sparkles,\n  Users,\n  User as UserIcon,\n  X,\n  Bot,\n  UserCheck,\n} from \"lucide-react\";\n\nimport type { Chat, Message, Priority, UserProfile, Agent, User, Channel, Note } from \"@/types\";\nimport { cn } from \"@/lib/utils\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Input } from \"@/components/ui/input\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport {\n  Sheet,\n  SheetContent,\n  SheetHeader,\n  SheetTitle,\n  SheetDescription,\n  SheetTrigger,\n  SheetFooter,\n} from \"@/components/ui/sheet\";\nimport {\n  Tooltip,\n  TooltipProvider,\n  TooltipTrigger,\n  TooltipContent,\n} from \"@/components/ui/tooltip\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Separator } from \"@/components/ui/separator\";\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { intelligentChatSummary } from \"@/ai/flows/intelligent-chat-summary\";\nimport { AddAgentDialog } from \"./add-agent-dialog\";\nimport { Switch } from \"@/components/ui/switch\";\nimport { Label } from \"@/components/ui/label\";\nimport { KenaAILogo } from \"@/components/ui/kena-ai-logo\";\nimport { useIsMobile } from \"@/hooks/use-mobile\";\nimport { NewChatDialog } from \"./new-chat-dialog\";\nimport { getChatsByCompany, getMessagesForChat, sendMessage, setChatbotStatus, startNewChats, getContactsByCompany, addNoteToContact, assignAgentToContact, getAgentsByCompany } from \"@/app/actions\";\nimport { Skeleton } from \"../ui/skeleton\";\n\n\nconst ChatList = ({ chats, selectedChat, onSelectChat, isLoading }: { chats: Chat[], selectedChat: Chat | null, onSelectChat: (chat: Chat) => void, isLoading: boolean }) => (\n  <ScrollArea className=\"flex-grow\">\n    <div className=\"flex flex-col gap-2 p-4 pt-0\">\n      {isLoading ? (\n         Array.from({ length: 7 }).map((_, i) => (\n            <div key={i} className=\"flex items-center gap-3 p-2\">\n              <Skeleton className=\"h-10 w-10 rounded-full\" />\n              <div className=\"flex-1 space-y-1\">\n                <Skeleton className=\"h-4 w-3/4\" />\n                <Skeleton className=\"h-3 w-1/2\" />\n              </div>\n            </div>\n          ))\n      ) : chats.map((chat) => (\n        <button\n          key={chat.id}\n          className={cn(\n            \"flex items-start gap-3 rounded-lg px-3 py-2 text-left transition-all hover:bg-primary/10\",\n            selectedChat?.id === chat.id && \"bg-primary/20\"\n          )}\n          onClick={() => onSelectChat(chat)}\n        >\n          <Avatar className=\"h-10 w-10 border-2 border-background flex-shrink-0\">\n            <AvatarImage src={chat.user.avatar} alt={chat.user.name} data-ai-hint=\"person portrait\" />\n            <AvatarFallback>{chat.user.name.charAt(0)}</AvatarFallback>\n          </Avatar>\n          <div className=\"flex-1 overflow-hidden\">\n            <div className=\"flex items-center justify-between\">\n              <h3 className=\"font-semibold truncate\">{chat.user.name}</h3>\n              <span className=\"text-xs text-muted-foreground flex-shrink-0\">{chat.timestamp}</span>\n            </div>\n            <div className=\"flex items-center justify-between mt-1\">\n              <p className=\"text-sm text-muted-foreground truncate\">\n                {chat.lastMessage.length > 30\n                  ? `${chat.lastMessage.substring(0, 30)}...`\n                  : chat.lastMessage}\n              </p>\n              <div className=\"flex items-center gap-2 flex-shrink-0 pl-2\">\n                <TooltipProvider>\n                  <Tooltip>\n                    <TooltipTrigger asChild>\n                      {chat.isChatbotActive ? (\n                        <Bot className=\"h-4 w-4 text-muted-foreground\" />\n                      ) : (\n                        <UserIcon className=\"h-4 w-4 text-muted-foreground\" />\n                      )}\n                    </TooltipTrigger>\n                    <TooltipContent>\n                      <p>\n                        {chat.isChatbotActive\n                          ? \"Handled by Bot\"\n                          : \"Handled by Agent\"}\n                      </p>\n                    </TooltipContent>\n                  </Tooltip>\n                </TooltipProvider>\n                <PriorityBadge priority={chat.priority} />\n                {chat.unreadCount > 0 && (\n                  <Badge className=\"flex h-5 w-5 items-center justify-center rounded-full p-0 bg-accent text-accent-foreground\">{chat.unreadCount}</Badge>\n                )}\n              </div>\n            </div>\n          </div>\n        </button>\n      ))}\n    </div>\n  </ScrollArea>\n);\n\nconst priorityMap: Record<Priority, string> = {\n  urgent: \"bg-destructive\",\n  high: \"bg-[#4f2668]\",\n  normal: \"bg-accent\",\n  low: \"bg-muted-foreground\",\n};\n\nconst PriorityBadge = ({ priority }: { priority: Priority }) => {\n  const colorClass = priorityMap[priority];\n  return (\n    <TooltipProvider>\n      <Tooltip>\n        <TooltipTrigger asChild>\n          <div className={cn(\"h-2.5 w-2.5 rounded-full\", colorClass)}></div>\n        </TooltipTrigger>\n        <TooltipContent>\n          <p className=\"capitalize\">{priority} Priority</p>\n        </TooltipContent>\n      </Tooltip>\n    </TooltipProvider>\n  );\n};\n\nconst Stats = ({ chats }: { chats: Chat[] }) => {\n  const totalChats = chats.length;\n  const botHandled = chats.filter(c => c.isChatbotActive).length;\n  const agentHandled = totalChats - botHandled;\n  const pendingInquiries = chats.filter(c => c.unreadCount > 0).length;\n\n  const stats = [\n    { title: \"Total Chats\", value: totalChats.toString(), icon: MessageSquare },\n    { title: \"Bot-Handled\", value: botHandled.toString(), icon: Bot },\n    { title: \"Agent-Handled\", value: agentHandled.toString(), icon: UserCheck },\n    { title: \"Pending Inquiries\", value: pendingInquiries.toString(), icon: Clock },\n  ];\n\n  return (\n    <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4 p-4\">\n      {stats.map((stat) => (\n        <Card key={stat.title}>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">{stat.title}</CardTitle>\n            <stat.icon className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{stat.value}</div>\n          </CardContent>\n        </Card>\n      ))}\n    </div>\n  );\n};\n\nconst ChatArea = ({ chat, onChatbotToggle, onSendMessage, onBack, isLoadingMessages, onNoteAdded, currentUser, agents, onAssignAgent }: { chat: Chat; onChatbotToggle: (chatId: string, isActive: boolean) => void; onSendMessage: (chatId: string, message: string) => void; onBack: () => void; isLoadingMessages: boolean; onNoteAdded: (contactId: string, note: Note) => void; currentUser: UserProfile | null; agents: Agent[]; onAssignAgent: (contactId: string, agentId: string) => void; }) => {\n    const scrollRef = React.useRef<HTMLDivElement>(null);\n    \n    React.useEffect(() => {\n        if (scrollRef.current) {\n            scrollRef.current.scrollTop = scrollRef.current.scrollHeight;\n        }\n    }, [chat?.messages]);\n  \n    return (\n        <div className=\"flex flex-1 flex-col h-full\">\n            <ChatHeader chat={chat} onChatbotToggle={onChatbotToggle} onBack={onBack} onNoteAdded={onNoteAdded} currentUser={currentUser} agents={agents} onAssignAgent={onAssignAgent} />\n            <Separator />\n            <ScrollArea className=\"flex-1\" ref={scrollRef}>\n                <div className=\"p-4 space-y-4\">\n                    {isLoadingMessages ? (\n                        <div className=\"flex justify-center items-center h-full\">\n                          <p>Loading messages...</p>\n                        </div>\n                    ) : (\n                      chat.messages.map((message) => (\n                          <ChatMessage key={message.id} message={message} />\n                      ))\n                    )}\n                </div>\n            </ScrollArea>\n            <Separator />\n            <ChatInput \n              chatId={chat.id} \n              isChatbotActive={chat.isChatbotActive}\n              onSendMessage={onSendMessage}\n            />\n        </div>\n    );\n};\n\nconst ChatHeader = ({ chat, onChatbotToggle, onBack, onNoteAdded, currentUser, agents, onAssignAgent }: { chat: Chat; onChatbotToggle: (chatId: string, isActive: boolean) => void; onBack: () => void; onNoteAdded: (contactId: string, note: Note) => void; currentUser: UserProfile | null; agents: Agent[]; onAssignAgent: (contactId: string, agentId: string) => void; }) => {\n    const [summary, setSummary] = React.useState<string | null>(null);\n    const [isLoadingSummary, setIsLoadingSummary] = React.useState(false);\n    const [isNotesOpen, setIsNotesOpen] = React.useState(false);\n    const [note, setNote] = React.useState(\"\");\n    const { toast } = useToast();\n    \n    const assignedAgent = agents.find(a => a.id === chat.user.assignedAgentId);\n\n    const handleAssignAgent = (agentId: string) => {\n        assignAgentToContact(chat.user.id, agentId);\n        onAssignAgent(chat.user.id, agentId);\n        \n        const agent = agents.find(a => a.id === agentId);\n        toast({\n          title: \"Contact Assigned\",\n          description: `${chat.user.name} has been assigned to ${agent?.name || 'Unassigned'}.`,\n        });\n    }\n\n    const handleSummarize = async () => {\n        setIsLoadingSummary(true);\n        setSummary(null);\n        try {\n            const chatThread = chat.messages.map(m => `${typeof m.sender === 'string' ? 'You' : m.sender.name}: ${m.text}`).join('\\n');\n            const result = await intelligentChatSummary({ chatThread });\n            setSummary(result.summary);\n        } catch (error) {\n            console.error(\"Failed to summarize chat:\", error);\n            toast({\n                variant: \"destructive\",\n                title: \"Error\",\n                description: \"Could not generate chat summary.\",\n            })\n        }\n        setIsLoadingSummary(false);\n    }\n\n    const handleSaveNote = async () => {\n        if (!note.trim() || !currentUser) {\n            toast({\n                variant: \"destructive\",\n                title: \"Empty Note\",\n                description: \"Cannot save an empty note.\",\n            })\n            return;\n        }\n        const result = await addNoteToContact(chat.user.id, currentUser.id, currentUser.name, note);\n        if (result.success && result.note) {\n            onNoteAdded(chat.user.id, result.note);\n            toast({\n                title: \"Note Saved\",\n                description: `Your note for ${chat.user.name} has been saved.`,\n            });\n            setNote(\"\");\n            setIsNotesOpen(false);\n        } else {\n             toast({ variant: 'destructive', title: \"Failed to save note.\" });\n        }\n    }\n\n    const isActionSheetOpen = !!summary || isLoadingSummary;\n    const onActionSheetOpenChange = (isOpen: boolean) => {\n        if (!isOpen) {\n            setSummary(null);\n        }\n    }\n\n    const canAssignAgent = currentUser?.role === 'admin' || currentUser?.role === 'super_agent';\n\n\n    return (\n        <div className=\"flex items-center p-2 px-4 gap-2 h-[61px] flex-shrink-0\">\n            <Button variant=\"ghost\" size=\"icon\" className=\"md:hidden\" onClick={onBack}>\n                <ArrowLeft className=\"h-5 w-5\" />\n                <span className=\"sr-only\">Back to chats</span>\n            </Button>\n            <div className=\"flex items-center gap-3\">\n                <Avatar className=\"h-10 w-10\">\n                    <AvatarImage src={chat.user.avatar} alt={chat.user.name} data-ai-hint=\"person portrait\"/>\n                    <AvatarFallback>{chat.user.name.charAt(0)}</AvatarFallback>\n                </Avatar>\n                <div>\n                    <p className=\"font-semibold\">{chat.user.name}</p>\n                    <p className=\"text-xs text-muted-foreground\">{chat.channel}</p>\n                </div>\n            </div>\n            <div className=\"ml-auto flex items-center gap-1 sm:gap-2\">\n                 {canAssignAgent ? (\n                    <Select onValueChange={handleAssignAgent} defaultValue={assignedAgent?.id}>\n                        <SelectTrigger className=\"w-fit gap-2 h-9 text-xs pl-2 pr-1 hidden sm:flex\">\n                           <UserCheck className=\"h-4 w-4 text-muted-foreground\" />\n                           <SelectValue placeholder=\"Unassigned\" />\n                        </SelectTrigger>\n                        <SelectContent>\n                            <SelectItem value=\"unassigned\">Unassigned</SelectItem>\n                            {agents.map(agent => (\n                                <SelectItem key={agent.id} value={agent.id}>{agent.name}</SelectItem>\n                            ))}\n                        </SelectContent>\n                    </Select>\n                 ) : assignedAgent && (\n                    <TooltipProvider>\n                      <Tooltip>\n                        <TooltipTrigger asChild>\n                          <Avatar className=\"h-8 w-8 hidden sm:flex\">\n                            <AvatarImage src={assignedAgent.avatar} />\n                            <AvatarFallback>{assignedAgent.name.charAt(0)}</AvatarFallback>\n                          </Avatar>\n                        </TooltipTrigger>\n                        <TooltipContent><p>Assigned to {assignedAgent.name}</p></TooltipContent>\n                      </Tooltip>\n                    </TooltipProvider>\n                 )}\n                <div className=\"flex items-center space-x-2\">\n                    <Switch id=\"chatbot-mode\" checked={chat.isChatbotActive} onCheckedChange={(isActive) => onChatbotToggle(chat.id, isActive)} />\n                    <Label htmlFor=\"chatbot-mode\" className=\"hidden sm:block text-sm\">{chat.isChatbotActive ? \"Bot Mode\" : \"Manual Mode\"}</Label>\n                </div>\n                <TooltipProvider>\n                    <Sheet open={isNotesOpen} onOpenChange={setIsNotesOpen}>\n                        <SheetTrigger asChild>\n                           <Tooltip>\n                                <TooltipTrigger asChild>\n                                    <Button variant=\"ghost\" size=\"icon\" className=\"text-muted-foreground\" onClick={() => setIsNotesOpen(true)}><NotebookPen className=\"h-5 w-5\" /></Button>\n                                </TooltipTrigger>\n                                <TooltipContent>Add Note</TooltipContent>\n                            </Tooltip>\n                        </SheetTrigger>\n                        <SheetContent>\n                            <SheetHeader>\n                                <SheetTitle>Add Note for {chat.user.name}</SheetTitle>\n                                <SheetDescription>\n                                    Add a private note to this contact's profile. Only agents can see this.\n                                </SheetDescription>\n                            </SheetHeader>\n                            <div className=\"py-4\">\n                                <Textarea \n                                    placeholder=\"e.g., Customer is interested in enterprise plan...\" \n                                    rows={8}\n                                    value={note}\n                                    onChange={(e) => setNote(e.target.value)}\n                                />\n                            </div>\n                            <SheetFooter>\n                                <Button variant=\"outline\" onClick={() => setIsNotesOpen(false)}>Cancel</Button>\n                                <Button onClick={handleSaveNote}>Save Note</Button>\n                            </SheetFooter>\n                        </SheetContent>\n                    </Sheet>\n                    \n                    <Sheet open={isActionSheetOpen} onOpenChange={onActionSheetOpenChange}>\n                      <SheetTrigger asChild>\n                        <Tooltip>\n                            <TooltipTrigger asChild>\n                                <Button variant=\"ghost\" size=\"icon\" className=\"text-muted-foreground\" onClick={handleSummarize}><Sparkles className=\"h-5 w-5\"/></Button>\n                            </TooltipTrigger>\n                            <TooltipContent>AI Summary</TooltipContent>\n                        </Tooltip>\n                      </SheetTrigger>\n                      <SheetContent>\n                        <SheetHeader>\n                          <SheetTitle>Intelligent Chat Summary</SheetTitle>\n                          <SheetDescription>\n                            An AI-generated summary of your conversation with {chat.user.name}.\n                          </SheetDescription>\n                        </SheetHeader>\n                        <div className=\"py-4\">\n                          {isLoadingSummary && <p>Generating summary...</p>}\n                          {summary && <p className=\"text-sm text-muted-foreground\">{summary}</p>}\n                        </div>\n                      </SheetContent>\n                    </Sheet>\n                </TooltipProvider>\n            </div>\n        </div>\n    )\n}\n\nconst ChatMessage = ({ message }: { message: Message }) => {\n    const isMe = message.sender === 'me';\n    // This is a temporary fix for rendering. The backend should return a proper User object.\n    const sender = isMe ? null : (typeof message.sender === 'object' ? message.sender as { name: string, avatar: string } : { name: 'User', avatar: '' });\n\n    return (\n        <div className={cn(\"flex items-end gap-2\", isMe ? \"justify-end\" : \"justify-start\")}>\n            {!isMe && sender && (\n                 <Avatar className=\"h-8 w-8\">\n                    <AvatarImage src={sender.avatar} alt={sender.name} data-ai-hint=\"person portrait\" />\n                    <AvatarFallback>{sender.name.charAt(0)}</AvatarFallback>\n                </Avatar>\n            )}\n             <div className={cn(\"max-w-xs md:max-w-md lg:max-w-lg rounded-lg px-4 py-2\", isMe ? \"bg-primary text-primary-foreground\" : \"bg-secondary\")}>\n                <p className=\"text-sm\">{message.text}</p>\n                <p className={cn(\"text-xs mt-1\", isMe ? \"text-primary-foreground/70\" : \"text-muted-foreground\")}>{message.timestamp}</p>\n            </div>\n        </div>\n    )\n}\n\nconst ChatInput = ({ chatId, isChatbotActive, onSendMessage }: { chatId: string; isChatbotActive: boolean; onSendMessage: (chatId: string, message: string) => void; }) => {\n    const [message, setMessage] = React.useState(\"\");\n    const [isSending, setIsSending] = React.useState(false);\n\n    const handleSubmit = async (e: React.FormEvent) => {\n        e.preventDefault();\n        if (message.trim()) {\n            setIsSending(true);\n            await onSendMessage(chatId, message.trim());\n            setMessage(\"\");\n            setIsSending(false);\n        }\n    }\n\n    return (\n        <div className=\"p-4 bg-background/80 backdrop-blur-sm flex-shrink-0\">\n            <form className=\"relative\" onSubmit={handleSubmit}>\n                <Textarea\n                    placeholder={isChatbotActive ? \"Chatbot is active. Turn off to send a message.\" : \"Type a message...\"}\n                    className=\"pr-24 min-h-[48px] resize-none\"\n                    disabled={isChatbotActive || isSending}\n                    value={message}\n                    onChange={(e) => setMessage(e.target.value)}\n                    onKeyDown={(e) => {\n                        if (e.key === \"Enter\" && !e.shiftKey) {\n                            e.preventDefault();\n                            handleSubmit(e);\n                        }\n                    }}\n                />\n                <div className=\"absolute top-1/2 -translate-y-1/2 right-3 flex items-center gap-1\">\n                    <TooltipProvider>\n                        <Tooltip>\n                            <TooltipTrigger asChild>\n                                <Button type=\"button\" variant=\"ghost\" size=\"icon\" className=\"text-muted-foreground\" disabled={isChatbotActive || isSending}><Paperclip className=\"h-5 w-5\" /></Button>\n                            </TooltipTrigger>\n                            <TooltipContent>Attach file</TooltipContent>\n                        </Tooltip>\n                        <Tooltip>\n                            <TooltipTrigger asChild>\n                                <Button type=\"button\" variant=\"ghost\" size=\"icon\" className=\"text-muted-foreground\" disabled={isChatbotActive || isSending}><Smile className=\"h-5 w-5\" /></Button>\n                            </TooltipTrigger>\n                            <TooltipContent>Add emoji</TooltipContent>\n                        </Tooltip>\n                    </TooltipProvider>\n                    <Button type=\"submit\" size=\"icon\" disabled={isChatbotActive || isSending}><Send className=\"h-5 w-5\" /></Button>\n                </div>\n            </form>\n        </div>\n    );\n};\n\ntype ChatLayoutProps = {\n  user: UserProfile | null;\n  onMenuClick: () => void;\n  initialContact?: User | null;\n};\n\nexport function ChatLayout({ user, onMenuClick, initialContact }: ChatLayoutProps) {\n  const [chats, setChats] = useState<Chat[]>([]);\n  const [contacts, setContacts] = useState<User[]>([]);\n  const [selectedChat, setSelectedChat] = useState<Chat | null>(null);\n  const [agents, setAgents] = useState<Agent[]>([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [selectedChannel, setSelectedChannel] = useState<Channel | \"all\">(\"all\");\n  const [isLoading, setIsLoading] = useState(true);\n  const [isLoadingMessages, setIsLoadingMessages] = useState(false);\n  const isMobile = useIsMobile();\n  const { toast } = useToast();\n\n  useEffect(() => {\n    async function fetchData() {\n      if (user?.companyId) {\n        setIsLoading(true);\n        try {\n          const [fetchedChats, fetchedContacts, fetchedAgents] = await Promise.all([\n            getChatsByCompany(user.companyId),\n            getContactsByCompany(user.companyId),\n            getAgentsByCompany(user.companyId),\n          ]);\n          setChats(fetchedChats);\n          setContacts(fetchedContacts);\n          setAgents(fetchedAgents);\n\n          if (initialContact) {\n            const chatToOpen = fetchedChats.find(c => c.user.id === initialContact.id);\n            if (chatToOpen) {\n              handleSelectChat(chatToOpen);\n            }\n          }\n\n        } catch (error) {\n          console.error(\"Failed to fetch chat data:\", error);\n          toast({ variant: 'destructive', title: \"Error\", description: \"Failed to load chat data.\" });\n        }\n        setIsLoading(false);\n      }\n    }\n    fetchData();\n  }, [user, toast, initialContact]);\n\n  const filteredChats = React.useMemo(() => {\n    return chats.filter(chat => {\n        const matchesSearch = chat.user.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                              chat.lastMessage.toLowerCase().includes(searchTerm.toLowerCase());\n        const matchesChannel = selectedChannel === 'all' || chat.channel === selectedChannel;\n        return matchesSearch && matchesChannel;\n    }).sort((a, b) => {\n      const priorityOrder = { urgent: 0, high: 1, normal: 2, low: 3 };\n      return priorityOrder[a.priority] - priorityOrder[b.priority];\n    });\n  }, [chats, searchTerm, selectedChannel]);\n\n  useEffect(() => {\n    if (!user) {\n        setSelectedChat(null);\n    }\n  }, [user]);\n\n  const handleSelectChat = async (chat: Chat) => {\n    const contactForChat = contacts.find(c => c.id === chat.user.id);\n    const chatWithFullContact = { ...chat, user: { ...chat.user, assignedAgentId: contactForChat?.assignedAgentId } };\n\n    setSelectedChat(chatWithFullContact);\n    if (!chat.messages || chat.messages.length === 0) {\n      setIsLoadingMessages(true);\n      const messages = await getMessagesForChat(chat.id);\n      \n      const updatedChat = { ...chatWithFullContact, messages };\n      setChats(prev => prev.map(c => c.id === chat.id ? updatedChat : c));\n      setSelectedChat(updatedChat);\n      setIsLoadingMessages(false);\n    }\n  }\n\n  const handleChatbotToggle = async (chatId: string, isActive: boolean) => {\n    const result = await setChatbotStatus(chatId, isActive);\n    if (result.success) {\n      const updatedChats = chats.map(c => \n          c.id === chatId ? { ...c, isChatbotActive: isActive } : c\n      );\n      setChats(updatedChats);\n      if (selectedChat?.id === chatId) {\n          setSelectedChat(prev => prev ? { ...prev, isChatbotActive: isActive } : null);\n      }\n    } else {\n      toast({ variant: 'destructive', title: 'Error', description: 'Failed to update chatbot status.' });\n    }\n  };\n\n  const handleSendMessage = async (chatId: string, text: string) => {\n    if (!user) return;\n    \n    const result = await sendMessage(chatId, text, user.id);\n\n    if (result.success && result.newMessage) {\n      const newMessage = result.newMessage;\n      const updatedChats = chats.map(chat => {\n        if (chat.id === chatId) {\n          return {\n            ...chat,\n            messages: [...(chat.messages || []), newMessage],\n            lastMessage: text,\n            timestamp: newMessage.timestamp,\n          };\n        }\n        return chat;\n      });\n  \n      setChats(updatedChats);\n      if (selectedChat?.id === chatId) {\n        setSelectedChat(prev => prev ? { \n          ...prev, \n          messages: [...(prev.messages || []), newMessage],\n          lastMessage: text,\n          timestamp: newMessage.timestamp,\n        } : null);\n      }\n    } else {\n      toast({ variant: 'destructive', title: 'Error', description: 'Failed to send message.' });\n    }\n  };\n\n  const handleAgentAdd = (newAgent: Agent) => {\n    setAgents(prev => [...prev, newAgent]);\n  }\n\n  const handleStartNewChats = async (selectedUsers: User[], message: string): Promise<Chat[]> => {\n    if (!user) return [];\n    \n    try {\n      const newOrUpdatedChats = await startNewChats(selectedUsers, message, user.companyId, user.id);\n      \n      const newChats = newOrUpdatedChats.filter(c => !chats.some(existing => existing.id === c.id));\n      const updatedChats = newOrUpdatedChats.filter(c => chats.some(existing => existing.id === c.id));\n\n      setChats(prev => {\n          let updatedState = [...prev];\n          // Add new chats\n          updatedState = [...newChats, ...updatedState];\n          // Update existing chats\n          updatedChats.forEach(updatedChat => {\n              const index = updatedState.findIndex(c => c.id === updatedChat.id);\n              if (index !== -1) {\n                  updatedState[index] = {\n                      ...updatedState[index],\n                      lastMessage: updatedChat.lastMessage,\n                      timestamp: updatedChat.timestamp,\n                  };\n              }\n          });\n          return updatedState;\n      });\n\n      if (newOrUpdatedChats.length === 1) {\n          handleSelectChat(newOrUpdatedChats[0]);\n      }\n\n      return newOrUpdatedChats;\n\n    } catch (error) {\n      toast({ variant: 'destructive', title: 'Error', description: 'Failed to start new chat(s).' });\n      return [];\n    }\n  }\n\n  const handleNoteAdded = (contactId: string, note: Note) => {\n      setContacts(prev => prev.map(c => \n          c.id === contactId ? { ...c, notes: [note, ...(c.notes || [])] } : c\n      ));\n  }\n\n  const handleAssignAgent = (contactId: string, agentId: string) => {\n    setContacts(prev => prev.map(c => c.id === contactId ? { ...c, assignedAgentId: agentId } : c));\n    if (selectedChat?.user.id === contactId) {\n      setSelectedChat(prev => prev ? { ...prev, user: { ...prev.user, assignedAgentId: agentId } } : null);\n    }\n  }\n\n  const canAddAgent = user?.role === 'admin' || user?.role === 'super_agent';\n\n  const MainHeader = ({ children }: { children: React.ReactNode }) => (\n    <header className=\"flex items-center justify-between p-2 border-b h-[61px] flex-shrink-0\">\n        {children}\n    </header>\n  )\n\n  const MobileChatListHeader = () => (\n    <MainHeader>\n        <div className=\"flex items-center gap-2\">\n            <Button variant=\"ghost\" size=\"icon\" onClick={onMenuClick}>\n                <PanelLeft className=\"h-5 w-5\" />\n                <span className=\"sr-only\">Open Menu</span>\n            </Button>\n            <h1 className=\"text-xl font-bold\">Chats</h1>\n        </div>\n        <div className=\"flex items-center gap-2\">\n            <NewChatDialog contacts={contacts} onStartChat={handleStartNewChats}>\n              <Button variant=\"ghost\" size=\"icon\">\n                  <PlusCircle className=\"h-5 w-5\" />\n                  <span className=\"sr-only\">New Chat</span>\n              </Button>\n            </NewChatDialog>\n        </div>\n    </MainHeader>\n  )\n  \n  const renderMobileView = () => {\n    if (!user) {\n        return null;\n    }\n    \n    if (selectedChat) {\n      return (\n        <ChatArea \n          chat={selectedChat} \n          onChatbotToggle={handleChatbotToggle} \n          onSendMessage={handleSendMessage}\n          onBack={() => setSelectedChat(null)}\n          isLoadingMessages={isLoadingMessages}\n          onNoteAdded={handleNoteAdded}\n          currentUser={user}\n          agents={agents}\n          onAssignAgent={handleAssignAgent}\n        />\n      );\n    }\n    return (\n      <div className=\"flex flex-col h-full\">\n        <MobileChatListHeader />\n        <SidebarContent />\n      </div>\n    );\n  };\n\n  const SidebarContent = () => (\n    <div className=\"flex flex-col h-full bg-card text-card-foreground\">\n        <div className=\"p-4 space-y-4\">\n          <div className=\"relative\">\n            <Search className=\"absolute left-3 top-1/2 -translate-y-1/2 h-4 w-4 text-muted-foreground\" />\n            <Input \n                placeholder=\"Search\" \n                className=\"pl-9\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n            />\n          </div>\n          <div className=\"flex items-center gap-2\">\n            <Select value={selectedChannel} onValueChange={(value) => setSelectedChannel(value as any)}>\n              <SelectTrigger className=\"w-full\">\n                <SelectValue />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"all\">All Channels</SelectItem>\n                <SelectItem value=\"WhatsApp\">WhatsApp</SelectItem>\n                <SelectItem value=\"Webchat\">Webchat</SelectItem>\n                <SelectItem value=\"Instagram\">Instagram</SelectItem>\n                <SelectItem value=\"Facebook\">Facebook</SelectItem>\n              </SelectContent>\n            </Select>\n          </div>\n        </div>\n        <h2 className=\"px-4 text-lg font-semibold tracking-tight\">Recent Chats</h2>\n        <ChatList chats={filteredChats} selectedChat={selectedChat} onSelectChat={handleSelectChat} isLoading={isLoading} />\n    </div>\n  );\n\n  return (\n    <div className=\"flex h-screen w-full bg-background text-foreground overflow-hidden\">\n      { isMobile ? (\n        <div className=\"w-full h-full flex flex-col\">\n          {renderMobileView()}\n        </div>\n      ) : (\n        <>\n          <div className=\"md:w-80 lg:w-96 border-r h-full flex flex-col\">\n            <MainHeader>\n                <div className=\"flex items-center h-full px-2\">\n                    <KenaAILogo className=\"h-13\" />\n                </div>\n            </MainHeader>\n            { user ? <SidebarContent /> : null }\n          </div>\n\n          <div className=\"flex flex-1 flex-col h-screen\">\n             <MainHeader>\n                 <div />\n                 <div className=\"flex items-center gap-4\">\n                    {user && \n                      <NewChatDialog contacts={contacts} onStartChat={handleStartNewChats}>\n                        <Button variant=\"ghost\" size=\"sm\" className=\"gap-2\">\n                            <PlusCircle className=\"h-5 w-5\" /> New Chat\n                        </Button>\n                      </NewChatDialog>\n                    }\n                     {canAddAgent && <div className=\"hidden md:flex\">\n                         <AddAgentDialog onAgentAdd={handleAgentAdd} user={user} />\n                     </div>}\n                 </div>\n             </MainHeader>\n            \n            <div className=\"hidden md:block\">\n                {user && <Stats chats={chats} />}\n                <Separator />\n            </div>\n            \n            <div className=\"flex-1 flex flex-col overflow-hidden\">\n                 { user && selectedChat ? (\n                    <ChatArea \n                        chat={selectedChat} \n                        onChatbotToggle={handleChatbotToggle} \n                        onSendMessage={handleSendMessage}\n                        onBack={() => setSelectedChat(null)}\n                        isLoadingMessages={isLoadingMessages}\n                        onNoteAdded={handleNoteAdded}\n                        currentUser={user}\n                        agents={agents}\n                        onAssignAgent={handleAssignAgent}\n                    />\n                ) : (\n                    <div className=\"hidden md:flex flex-1 flex-col items-center justify-center gap-4 text-center p-8\">\n                      {isLoading ? (\n                        <p>Loading chats...</p>\n                      ) : (\n                        <>\n                          <div className=\"rounded-full bg-primary/10 p-4\">\n                              <MessageSquare className=\"h-12 w-12 text-primary\"/>\n                          </div>\n                          <h2 className=\"text-2xl font-bold\">No Chat Selected</h2>\n                          <p className=\"text-muted-foreground\">Select a chat from the sidebar to start messaging.</p>\n                        </>\n                      )}\n                    </div>\n                )}\n            </div>\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n\n\n\n\n\n\n\n    \n\n    "],"names":[],"mappings":"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","debugId":null}}]
}